{"version":3,"sources":["webpack:///src/app/pipe/truncate-straight.pipe.ts","webpack:///src/app/component/admin/email-edit/email-edit.component.html","webpack:///src/app/component/admin/email-edit/email-edit.component.ts","webpack:///src/app/service/email.service.ts","webpack:///src/app/component/forms/vehicle-inspection/state/vehicle-inspection-state.model.ts","webpack:///src/app/component/corrective-action/state/corrective-action.state.ts","webpack:///src/app/component/admin/signup/signup.component.ts","webpack:///src/app/component/admin/signup/signup.component.html","webpack:///src/app/service/notification.service.ts","webpack:///src/app/service/error.service.ts","webpack:///src/app/service/transform-run.service.ts","webpack:///src/app/component/comment/bottom-sheet-comment/bottom-sheet-comment.component.ts","webpack:///src/app/component/comment/bottom-sheet-comment/bottom-sheet-comment.component.html","webpack:///src/app/service/app.service.ts","webpack:///src/app/service/speech-recognition.service.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-fire-extinguisher/worksite-fire-extinguisher.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-fire-extinguisher/worksite-fire-extinguisher.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-header/worksite-safety-header.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-header/worksite-safety-header.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/component/corrective-action/corrective-action.component.ts","webpack:///src/app/component/corrective-action/corrective-action.component.html","webpack:///src/app/component/camera/camera.component.html","webpack:///src/app/component/camera/camera.component.ts","webpack:///src/app/state/app.state.ts","webpack:///src/app/component/admin/labels/labels.component.ts","webpack:///src/app/component/admin/labels/labels.component.html","webpack:///src/app/service/form.service.ts","webpack:///src/app/component/forms/spot-check-safety/hazard-identification-control/hazard-identification-control.component.ts","webpack:///src/app/component/forms/spot-check-safety/hazard-identification-control/hazard-identification-control.component.html","webpack:///src/app/component/notification/notification-signed/notification-signed.component.html","webpack:///src/app/component/notification/notification-signed/notification-signed.component.ts","webpack:///src/app/component/comment/state/comment.actions.ts","webpack:///src/environments/environment.ts","webpack:///src/app/service-idb/idb-persistence.service.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour.component.html","webpack:///src/app/component/run-controls/quill-run/quill-run.component.ts","webpack:///src/app/component/run-controls/quill-run/quill-run.component.html","webpack:///src/app/component/run-controls/gps-run/gps-run.component.ts","webpack:///src/app/component/run-controls/gps-run/gps-run.component.html","webpack:///src/app/component/run-controls/select-run/select-run.component.ts","webpack:///src/app/component/run-controls/select-run/select-run.component.html","webpack:///src/app/component/admin/email-list/email-list.component.html","webpack:///src/app/component/admin/email-list/email-list.component.ts","webpack:///src/app/component/admin/identification/identification.component.html","webpack:///src/app/component/admin/identification/identification.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-header/meaningful-site-tour-header.component.html","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-header/meaningful-site-tour-header.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/admin/form-lists/form-lists.component.html","webpack:///src/app/component/admin/form-lists/form-lists.component.ts","webpack:///src/app/component/run-controls/toggle-run/toggle-run.component.ts","webpack:///src/app/component/run-controls/toggle-run/toggle-run.component.html","webpack:///src/app/service/success.service.ts","webpack:///src/app/component/admin/send-password/send-password.component.html","webpack:///src/app/component/admin/send-password/send-password.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-notes/meaningful-site-tour-notes.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-notes/meaningful-site-tour-notes.component.html","webpack:///src/app/component/admin/forms/forms.component.ts","webpack:///src/app/component/admin/forms/forms.component.html","webpack:///src/app/component/notification/notification-open/notification-open.component.html","webpack:///src/app/component/notification/notification-open/notification-open.component.ts","webpack:///src/app/state/device/device-state.actions.ts","webpack:///src/app/component/admin/reset-password/reset-password.component.ts","webpack:///src/app/component/admin/reset-password/reset-password.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/state/worksite-safety-inspection-state.actions.ts","webpack:///src/app/component/admin/list-forms/list-forms.component.html","webpack:///src/app/component/admin/list-forms/list-forms.component.ts","webpack:///src/app/pipe/truncate.pipe.ts","webpack:///src/app/component/admin/list-run/list-run.component.html","webpack:///src/app/component/admin/list-run/list-run.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-todo/meaningful-site-tour-todo.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-todo/meaningful-site-tour-todo.component.html","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/component/forms/spot-check-safety/state/spot-check-safety.model.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-erp-planning/worksite-safety-erp-planning.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-erp-planning/worksite-safety-erp-planning.component.ts","webpack:///src/app/component/voice/voice.component.html","webpack:///src/app/component/voice/voice.component.ts","webpack:///src/app/state/auth/auth.state.ts","webpack:///src/app/state/notification/notification.state.ts","webpack:///src/app/component/admin/signup-bottom/signup-bottom.component.ts","webpack:///src/app/component/admin/signup-bottom/signup-bottom.component.html","webpack:///src/app/component/comment/state/comment.state.ts","webpack:///src/app/component/forms/worksite-safety-inspection/state/worksite-safety-inspection.state.ts","webpack:///src/app/service-idb/idb-crud.service.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-key-positive-finding/worksite-key-positive-finding.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-key-positive-finding/worksite-key-positive-finding.component.html","webpack:///src/app/service/api.service.ts","webpack:///src/app/component/forms/vehicle-inspection/detail-comments/detail-comments.component.ts","webpack:///src/app/component/forms/vehicle-inspection/detail-comments/detail-comments.component.html","webpack:///src/app/component/admin/pin/pin.component.ts","webpack:///src/app/component/admin/pin/pin.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/component/contact/contact.component.ts","webpack:///src/app/component/contact/contact.component.html","webpack:///src/app/component/pic-delete/pic-delete.component.ts","webpack:///src/app/component/pic-delete/pic-delete.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/component/run-controls/checkbox-run/checkbox-run.component.ts","webpack:///src/app/component/run-controls/checkbox-run/checkbox-run.component.html","webpack:///src/app/component/forms/vehicle-inspection/header/header.component.ts","webpack:///src/app/component/forms/vehicle-inspection/header/header.component.html","webpack:///src/app/component/run-controls/radio-run/radio-run.component.ts","webpack:///src/app/component/run-controls/radio-run/radio-run.component.html","webpack:///src/app/component/terms/terms.component.ts","webpack:///src/app/component/terms/terms.component.html","webpack:///src/app/component/admin/data/data.component.html","webpack:///src/app/component/admin/data/data.component.ts","webpack:///src/app/component/forms/vehicle-inspection/vehicle-inspection.component.html","webpack:///src/app/component/forms/vehicle-inspection/vehicle-inspection.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-inspection.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-inspection.component.ts","webpack:///src/app/component/layout/layout.component.html","webpack:///src/app/component/layout/layout.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-confined-space/worksite-safety-confined-space.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-confined-space/worksite-safety-confined-space.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/state/worksite-safety-inspection-state.model.ts","webpack:///src/app/component/run-controls/fileupload-run/fileupload-run.component.html","webpack:///src/app/component/run-controls/fileupload-run/fileupload-run.component.ts","webpack:///src/app/component/discrepancy/discrepancy.component.html","webpack:///src/app/component/discrepancy/discrepancy.component.ts","webpack:///src/app/pipe/replace-underscore.pipe.ts","webpack:///src/app/app.module.ts","webpack:///src/app/state/auth/auth-state.actions.ts","webpack:///src/app/component/forms/meaningful-site-tour/state/meaningful-site-tour.model.ts","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety-header/spot-check-safety-header.component.html","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety-header/spot-check-safety-header.component.ts","webpack:///src/app/component/notification/notification.component.html","webpack:///src/app/component/notification/notification.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-equipment/worksite-safety-equipment.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-equipment/worksite-safety-equipment.component.html","webpack:///src/app/component/run/run.component.html","webpack:///src/app/component/run/run.component.ts","webpack:///src/app/state/notification/notification-state.actions.ts","webpack:///src/app/component/forms/spot-check-safety/incident-reporting/incident-reporting.component.ts","webpack:///src/app/component/forms/spot-check-safety/incident-reporting/incident-reporting.component.html","webpack:///src/app/component/forms/spot-check-safety/state/spot-check-safety.actions.ts","webpack:///src/app/component/forms/spot-check-safety/rules-work-procedures/rules-work-procedures.component.ts","webpack:///src/app/component/forms/spot-check-safety/rules-work-procedures/rules-work-procedures.component.html","webpack:///src/app/component/pics/pics.component.html","webpack:///src/app/component/pics/pics.component.ts","webpack:///src/app/component/whyus/whyus.component.ts","webpack:///src/app/component/whyus/whyus.component.html","webpack:///src/app/component/admin/menu/menu.component.ts","webpack:///src/app/component/admin/menu/menu.component.html","webpack:///src/app/component/forms/vehicle-inspection/state/vehicle-inspection-state.actions.ts","webpack:///src/app/component/forms/worksite-safety-inspection/bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component.html","webpack:///src/app/component/run-controls/textarea-run/textarea-run.component.ts","webpack:///src/app/component/run-controls/textarea-run/textarea-run.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/component/admin/signin/signin.component.ts","webpack:///src/app/component/admin/signin/signin.component.html","webpack:///src/app/component/run-controls/barcode-run/barcode-run.component.ts","webpack:///src/app/component/run-controls/barcode-run/barcode-run.component.html","webpack:///src/app/interceptor/httpconfig.interceptor.ts","webpack:///src/app/state/device/device.state.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hot-work/worksite-safety-hot-work.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hot-work/worksite-safety-hot-work.component.ts","webpack:///src/app/component/forms/vehicle-inspection/detail/detail.component.ts","webpack:///src/app/component/forms/vehicle-inspection/detail/detail.component.html","webpack:///src/app/component/run-controls/textbox-run/textbox-run.component.ts","webpack:///src/app/component/run-controls/textbox-run/textbox-run.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-jobsite/worksite-safety-jobsite.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-jobsite/worksite-safety-jobsite.component.html","webpack:///src/app/component/run-controls/label-run/label-run.component.html","webpack:///src/app/component/run-controls/label-run/label-run.component.ts","webpack:///src/app/component/run-controls/slider-run/slider-run.component.ts","webpack:///src/app/component/run-controls/slider-run/slider-run.component.html","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/component/layout-admin/layout-admin.component.html","webpack:///src/app/component/layout-admin/layout-admin.component.ts","webpack:///src/app/component/corrective-action/state/corrective-action.actions.ts","webpack:///src/app/component/forms/spot-check-safety/corrective-actions/corrective-actions.component.ts","webpack:///src/app/component/forms/spot-check-safety/corrective-actions/corrective-actions.component.html","webpack:///src/app/component/forms/vehicle-inspection/state/vehicle-inspection.state.ts","webpack:///src/app/component/admin/list-edit/list-edit.component.ts","webpack:///src/app/component/admin/list-edit/list-edit.component.html","webpack:///src/app/component/notification/notification-action/notification-action.component.html","webpack:///src/app/component/notification/notification-action/notification-action.component.ts","webpack:///src/app/component/forms/spot-check-safety/safety-equipment/safety-equipment.component.ts","webpack:///src/app/component/forms/spot-check-safety/safety-equipment/safety-equipment.component.html","webpack:///src/app/component/forms/spot-check-safety/personal-protective-equipment/personal-protective-equipment.component.ts","webpack:///src/app/component/forms/spot-check-safety/personal-protective-equipment/personal-protective-equipment.component.html","webpack:///src/app/component/admin/kioske/kioske.component.ts","webpack:///src/app/component/admin/kioske/kioske.component.html","webpack:///src/app/component/comment/comment.component.ts","webpack:///src/app/component/comment/comment.component.html","webpack:///src/app/service/auto-complete.service.ts","webpack:///src/app/component/comment/service/comment.service.ts","webpack:///src/app/component/run-controls/scanner-qrcode-run/scanner-qrcode-run.component.ts","webpack:///src/app/component/run-controls/scanner-qrcode-run/scanner-qrcode-run.component.html","webpack:///src/app/model/forms.ts","webpack:///src/app/component/admin/admin.component.html","webpack:///src/app/component/admin/admin.component.ts","webpack:///src/app/component/admin/sdk/sdk.component.ts","webpack:///src/app/component/admin/sdk/sdk.component.html","webpack:///src/app/component/admin/profile/profile.component.html","webpack:///src/app/component/admin/profile/profile.component.ts","webpack:///src/app/pipe/pipe.module.ts","webpack:///src/app/component/sign-off/sign-off.component.ts","webpack:///src/app/component/sign-off/sign-off.component.html","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety.component.ts","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety.component.html","webpack:///src/app/pipe/split-camel-case.pipe.ts","webpack:///src/app/component/admin/data-forms/data-forms.component.html","webpack:///src/app/component/admin/data-forms/data-forms.component.ts","webpack:///src/app/component/forms/spot-check-safety/state/spot-check-safety.state.ts","webpack:///src/app/component/pricing/pricing.component.ts","webpack:///src/app/component/pricing/pricing.component.html","webpack:///src/app/component/admin/label/label.component.ts","webpack:///src/app/component/admin/label/label.component.html","webpack:///src/app/component/forms/spot-check-safety/communication-training/communication-training.component.html","webpack:///src/app/component/forms/spot-check-safety/communication-training/communication-training.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/component/admin/settings/settings.component.ts","webpack:///src/app/component/admin/settings/settings.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-ground/worksite-safety-ground.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-ground/worksite-safety-ground.component.ts","webpack:///src/app/component/form/form.component.html","webpack:///src/app/component/form/form.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hazard/worksite-safety-hazard.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hazard/worksite-safety-hazard.component.html","webpack:///src/app/component/run-controls/scanner-barcode-run/scanner-barcode-run.component.ts","webpack:///src/app/component/run-controls/scanner-barcode-run/scanner-barcode-run.component.html","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-suggestions/meaningful-site-tour-suggestions.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-suggestions/meaningful-site-tour-suggestions.component.html","webpack:///src/app/model/speech.ts","webpack:///src/main.ts","webpack:///src/app/component/run-controls/qrcode-run/qrcode-run.component.ts","webpack:///src/app/component/run-controls/qrcode-run/qrcode-run.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TruncateStraightPipe","value","args","limit","length","parseInt","substring","EmailEditComponent","store","appService","authService","successService","data","dialogRef","kioske","selectSnapshot","name","disabled","required","email","id","dataSource","idx","admin","worker","enabled","supervisor","setValue","disabledName","disabledEmail","obj","update","subscribe","sort","close","popSnackbar","disable","enable","reset","EmailService","http","emailUrl","post","VEHICLE_INSPECTION","icon","type","is_published","is_data","is_manager","is_list","lists","description","LABEL","CorrectiveActionState","ctx","correctiveActions","patchState","state","defaults","SignupComponent","fb","errorService","emailService","step","notContinue","terms","logo","linkedinUrl","githubUrl","emailSignupForm","group","compose","password","signupEmail","auth","message","signup","user","_","subscription","NotificationService","notificationUrl","tenant","now","Date","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","notificationObj","date","form_name","email_from","worker_name","email_to","supervisor_name","form_id","data_id","pdf","correctiveAction","comment","from","to","toString","tenant_id","addTenantId","put","ErrorService","snackBar","msg","open","duration","TransformRunService","columnArray","formValues","form","formArray","Object","entries","forEach","element","Array","isArray","multiSelect","JSON","stringify","substr","slice","push","unshift","details","columnObj","columns","formControlName","lat","checkboxArray","toggleArray","replace","comma","BottomSheetCommentComponent","bottomSheetRef","event","dismiss","preventDefault","field","comments","index","findIndex","item","splice","dispatch","deleteComment","AppService","dialog","apiService","formService","idbCrudService","overlayContainer","notificationService","className","fileArray","detailArray","apiUrl","messageUrl","LIST_FORM","notificationOpen","notificationSigned","notifications","email_signed","formField","title","controls","dialogConfig","height","width","maxWidth","maxHeight","afterClosed","transcription","get","selectedForm","listName","userCreated","date_created","pin","date_last_access","user_created","select","getLists","lookupLists","filter","list","rows","getEmailList","emailList","workers","supervisors","getForms","forms","clear","ele","readAll","formsPublished","initializeMyNotifications","getMyNotifications","setNotifications","getMyNotificationCount","notification","count","undefined","getAllNotifications","read","darkClassName","getContainerElement","classList","add","remove","darkMode","prefs","isDarkMode","userObj","find","createNotification","myNotifications","toName","messageID","url","subject","emailTo","emailFrom","sendNotificationEmail","verticalPosition","window","webkitSpeechRecognition","SpeechRecognitionService","ngZone","isListening","recognition","continuous","interimResults","start","initialize","observer","onstart","run","next","Start","onend","End","onresult","interimContent","finalContent","i","resultIndex","results","isFinal","transcript","FinalContent","content","InterimContent","onerror","eventError","error","NoSpeech","AudioCapture","NotAllowed","Unknown","stop","WorksiteFireExtinguisherComponent","bottomSheet","label","fireExtinguisherForm","patchValue","toggle","commentsByType","openComment","TwentyPoundMinimumFireExtinguisherAvailable","isFireExtinguisher","WorksiteSafetyHeaderComponent","autoCompleteService","speechRecognitionService","checkValidHeader","customYearValues","customDayShortNames","years","makes","models","divisions","stakeholders","headerForm","toISOString","lookupListData","d","map","navigator","geolocation","getCurrentPosition","position","coords","latitude","long","longitude","emit","popVoiceDialog","validHeaderCheck","openVoice","AuthService","authUrl","loginStatus","CorrectiveActionComponent","formBuilder","correctiveActionForm","CorrectiveActionRequired","DateCorrectiveActionToBeCompleted","PersonResonsibleCorrectiveAction","DateCorrectiveActionCompleted","PersonResonsible","c","dateToComplete","correctiveActionRequired","personResponsible","dateCompleted","signature","correctiveActionIdx","actionItem","personResonsibleCorrectiveActionControl","CameraComponent","viewContainerRef","webcamImage","trigger","WIDTH","innerWidth","HEIGHT","innerHeight","isDelete","asObservable","pics","imageAsDataUrl","handleImage","States","Formloco","Summit","SummitForms","Rumzer","LabelsComponent","FormService","formUrl","formData","isOnline","userUpdated","idbData","res","HazardIdentificationControlComponent","commentService","hazardForm","isCommentOnly","bottomSheetComment","openCommentOnly","NotificationSignedComponent","save","pic","msgSigned","SetComments","SetComment","SetText","text","SetLabel","SetTypeFilter","ResetTypeComments","environment","production","designUrl","homeUrl","signinUrl","redirectForgotPasswordUrl","assetUrl","version","idbName","IdbPersistenceService","upgrade","db","createObjectStore","keyPath","autoIncrement","idb","storeName","key","getAll","MeaningfulSiteTourComponent","isEdit","MEANINGFUL_SITE_TOUR","Name","Location","todoForm","SiteOrientation","DailySafetyMeeting","SiteTour","SiteTourWithWorker","ReviewDiscuss","PositiveInterventionRecognition","EngageWithContractors","HousekeepingInspection","CompleteBBO","OpenTeamDiscussion","SafetyAlert","ProvideFeedback","FormalAuditInspection","notesForm","PositiveObservations","ImprovementOpportunities","FeedbackSummary","setFormData","header","workersControl","Worker","supervisorsControl","Supervisor","todo","notes","updateForm","resetForm","getWorker","getSupervisor","idObj","formDataID","sendNotification","setStep","nextStep","prevStep","QuillRunComponent","quillConfig","toolbar","theme","GpsRunComponent","isPosition","runForm","addControl","SelectRunComponent","multi","multiple","tenantID","getData","selectArray","appearance","EmailListComponent","isSync","displayedColumns","emailForm","assign","create","keys","control","setErrors","lookupListName","IdentificationComponent","router","idbPersistenceService","idForm","getTenant","setIndexedDbUser","registerUser","registerOfflineUser","register","row","initializeUser","navigate","initializeOfflineUser","deleteDb","getEmail","MeaningfulSiteTourHeaderComponent","HomeComponent","changeTheme","kioskeTenant","setInterval","initializeAdminNotifications","tabIndex","userIdb","openNotifications","openProfile","isSignIn","childPageLabel","background","notificationMyCount","FormListsComponent","selectChild","isLookupOpen","lookupListForm","createList","createForm","closeOverlay","lookupListArray","lookupList","isListMenu","lookupListNames","ToggleRunComponent","SuccessService","SendPasswordComponent","forgotPassword","childPage","MeaningfulSiteTourNotesComponent","FormsComponent","formObjClone","registerForm","formObj","accessDate","checked","is_deployed","date_last_accessed","statusToggle","response","updateIdb","setPermissions","formsDeployed","date_archived","NotificationOpenComponent","picArray","customExpandedHeight","messageForm","messageObj","notificationID","updateNotificationMessage","sendTo","f","getFormData","page","updateNotificationRead","notificationIdx","SetLat","SetLong","SetBackground","SetScreenSize","screenSize","SetScreenWidth","screenWidth","SetIsIOS","isIOS","SetIsSafari","isSafari","SetPics","SetIsDarkMode","SetVoice","voice","SetTranscription","SetIsOnline","ResetPasswordComponent","route","hide","passwordForm","queryParams","params","setMode","resetPassword","SetIsWorksiteSafetyHeaderValid","isWorksiteSafetyHeaderValid","SetIsFireExtinguisher","SetIsErpPlanning","isErpPlanning","SetIsGroundwork","isGroundwork","SetIsHotwork","isHotwork","SetIsConfinedSpace","isConfinedSpace","ListFormsComponent","selectData","selectSharedLists","TruncatePipe","trail","ListRunComponent","saveList","selectedIdx","openMenu","MeaningfulSiteTourTodoComponent","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","webpackAsyncContextKeys","module","exports","SPOT_CHECK_SAFETY","WorksiteSafetyErpPlanningComponent","EmergencyResponsePlanOnSite","VoiceComponent","isDone","defaultError$","voiceForm","totalTranscript","webSpeechReady","initRecognition","errorMessage$","input","nativeElement","transcript$","onResult","pipe","processNotification","listening$","onStart","onEnd","onError","trim","selectedVoiceFieldLabel","AuthState","isIdentified","isAdmin","formLabels","notificationId","childPageIcon","NotificationState","notificationAllOpen","notificationAllSigned","notificationAdminCount","notificationTab","SignupBottomComponent","matBottomSheetRef","CommentState","WorksiteSafetyInspectionState","IdbCrudService","WorksiteKeyPositiveFindingComponent","keyPositiveFindingsForm","ApiService","headers","set","responseType","blob","Blob","fileName","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","DetailCommentsComponent","commentForm","detailForm","selectedComments","isSaved","fieldName","currentDetailForm","snapShot","PinComponent","pinForm","loginPIN","webpackContext","webpackContextResolve","webpackContextKeys","ContactComponent","PicDeleteComponent","deletePhoto","AppComponent","platform","breakpointObserver","networkStatus$","EMPTY","destroyed","myInnerWidth","displayNameMap","Map","XSmall","Small","Medium","Large","XLarge","observe","result","breakpoints","query","checkNetworkStatus","networkStatus","onLine","status","token","localStorage","setItem","complete","CheckboxRunComponent","HeaderComponent","RadioRunComponent","TermsComponent","Year","DataComponent","isData","getCloud","records","replacer","csv","join","csvArray","VehicleInspectionComponent","history","isPanelOpen","apiURL","Stakeholder","Division","Mileage","LicensePlate","UnitNumber","Make","Model","RegistrationDate","CurrentRegistrationInVehicle","CurrentInsuranceInVehicle","IgnitionKey","IgnitionKeyComments","OilLevel","OilLevelComments","WasherFluidLevel","WasherFluidLevelComments","CoolantLevel","CoolantLevelComments","PowerSteeringFluidLevel","PowerSteeringFluidLevelComments","AirGauge","AirGaugeComments","Horn","HornComments","HeaterDefroster","HeaterDefrosterComments","WindshieldWipersWashers","WindshieldWipersWashersComments","AllSignalLights","AllSignalLightsComments","InteriorLights","InteriorLightsComments","MirrorsDamageAdjustments","MirrorsDamageAdjustmentsComments","WindshieldVisibility","WindshieldVisibilityComments","VisualInspectionExterior","VisualInspectionExteriorComments","InsideEngineCompartment","InsideEngineCompartmentComments","TransmissionFluidLevel","TransmissionFluidLevelComments","HighlightSignal4wayTailBackup","HighlightSignal4wayTailBackupComments","FuelLevel","FuelLevelComments","FirstAidKit","FirstAidKitComments","FireExtinguisher","FireExtinguisherComments","SurvivalKit","SurvivalKitComments","FuelKey","FuelKeyComments","TwoWayRadio","TwoWayRadioComments","Tires","TiresComments","SpillKit","SpillKitComments","makesControl","modelsControl","detail","format","isHeaderValid","WorksiteSafetyInspectionComponent","WORKSITE_SAFETY_INSPECTION","isERP","isERPDisabled","Client","LSDUWI","Latitude","Longitude","SupervisorPhone","JobNumber","STARSSiteNumber","ScopeOfWork","SiteHazardAssessmentCompleted","ScopeOfWorkClearlyDefined","PotentialHazardsAndMitigationRequirementsIdentified","SummitHealthAndSafetyManualAvailable","OccupationalHealthAndSafetyLegislationAvailable","DailySafetyMeetingsConductedDocumented","AllSitePersonalTrainingAndSafetyTickets","AllSitePersonnelSiteSpecificWearingPPE","jobsiteForm","WorkAreaClearlyIdentified","AppropriateAccessAndEgressRoutesAreEstablished","SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns","AllOpenExcavationsAreClearlyMarked","PublicAccessToTheSiteControlled","PrimeContractorClearlyIdentifiedWithSignage","IsThereEmergencyEquipmentOnSite","FirstAidKitAvailable","BlanketsAndStretcherAvailable","EyeWashBottleAvailable","SpillKitAvailable","H2SPersonalGasMonitorsOnsiteHaveBeenBumped","FireExtinguisherInspected","FireExtinguisherVisibleUnobstructed","FireExtinguisherCharged","FireExtinguisherSafetyPinSecured","FireExtinguisherOperatingInstructions","FireExtinguisherNoVisibleDamage","FireExtinguisherCertification","erpPlanningForm","MusterPointsIdentified","STARSNumber","ERPIncludesDirectionsToNearestHospital","ERPResponderRolesAndResponsibilitiesIdentified","CellularOrRadioCoverageConfirmed","groundForm","DoesTheProjectInvolveGroundDisturbance","GroundDisturbanceChecklistIsInPlace","OneCallNotificationHasBeenRegistered","AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed","ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined","ThirdPartyLineLocatesCompletedWithinTheSearchArea","AllRequiredCrossingOrProximityAgreementsInPlace","confinedSpaceForm","DoesTheProjectInvolveConfinedSpaceEntry","ConfinedSpacePermitIssued","ConfinedSpaceSafetyTraining","SafetyWatchInPlace","RescuePlanAvailable","hotWorkForm","DoesTheProjectInvolveHotWork","HotWorkPermitIssued","FireHazardsIdentifiedControls","FireSafetyWatchAvailable","equipmentForm","ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects","InteriorOfVehicleKeptTidyAndClean","VehicleWindshieldFreeOfMajorChipsAndCracks","DailyPreUseVehicleInspectionCompleted","EquipmentPreUseInspectionCompleted","CargoIinternalAndExternalProperlyStowedAndSecured","HornIsInProperWorkingCondition","HeadlightsAreInProperWorkingCondition","SignalLightsAreInProperWorkingCondition","EmergencyWarningStrobeLightEquippedOnVehicle","SafetyBuggyWhipEquippedOnVehicle","FirstAidKitEquippedInVehicle","EmergencySurvivalKitEquippedInVehicle","KeyPositiveFindings","discrepancyForm","Discrepancy","clientsControl","hazard","jobsite","fireExtinguisher","erpPlanning","ground","confinedSpace","hotWork","equipment","keyPositiveFindings","LayoutComponent","snapshot","paramMap","not","date_signed","setUser","location","reload","darkModeToggle","WorksiteSafetyConfinedSpaceComponent","HazardFormLabels","JobsiteFormLabels","FireExtinguisherFormLabels","ErpPlanningFormLabels","GroundFormLabels","ConfinedSpaceLabels","HotWorkLabels","EquipmentLabels","FileuploadRunComponent","addedFiles","readFile","fileContents","getItem","file","reject","reader","FileReader","onload","target","console","readAsDataURL","files","onSelect","DiscrepancyComponent","commentLabel","ReplaceUnderscorePipe","AppModule","provide","useClass","useFactory","connect","deps","forRoot","developmentMode","registrationStrategy","SetIsIdentified","SetIsSignIn","SetIsAdmin","SetIsListMenu","SetPage","SetEmailList","SetWorkers","SetSupervisors","SetLookupListData","SetLookupListName","SetLookupListNames","SetChildPage","SetChildPageLabel","SetTenant","SetUser","SetUserIdb","SetSelectedForm","ResetAuth","SetForms","SetSelectedVoiceFieldLabel","SetFormLabels","SetCurrentFormId","currentFormId","SetFormData","SetNotificationId","SetChildPageIcon","SetKioske","SetFormsPublished","SpotCheckSafetyHeaderComponent","NotificationComponent","getPDF","WorksiteSafetyEquipmentComponent","RunComponent","transformRunService","parseDataCloud","parseColumns","saveCloud","SetNotification","SetNotificationMyCount","SetNotificationAdminCount","SetNotificationTab","SetNotificationOpen","SetNotificationSigned","SetNotificationAllOpen","SetNotificationAllSigned","SetNotificationIdx","IncidentReportingComponent","incidentForm","SetIsSafetyEquipment","IsSafetyEquipment","SetIsAppropriateTraining","isAppropriateTraining","RulesWorkProceduresComponent","rulesForm","PicsComponent","hidden","isChangedBlock","WhyusComponent","contact","MenuComponent","child","selectMenu","SetIsHeaderValid","SetSelectedComments","BottomSheetWorksiteSafetyInspectionComponent","commentType","deleteComments","TextareaRunComponent","MaterialModule","SigninComponent","signinForm","signinEmail","signin","BarcodeRunComponent","HttpConfig","request","clone","has","handle","DeviceState","WorksiteSafetyHotWorkComponent","DetailComponent","yAxis","xAxis","isHistory","isSave","TextboxRunComponent","WorksiteSafetyJobsiteComponent","LabelRunComponent","SliderRunComponent","all","LayoutAdminComponent","SetCorrectiveActions","SetCorrectiveAction","CorrectiveActionsComponent","VehicleInspectionState","ListEditComponent","NotificationActionComponent","docID","signForm","openPdf","SafetyEquipmentComponent","safetyEquipmentForm","PersonalProtectiveEquipmentComponent","personalEquipmentForm","KioskeComponent","whyus","pricing","testdrive","CommentComponent","commentIdx","correctiveActionsIdx","AutoCompleteService","clients","filteredWorkers$","valueChanges","_filterWorkers","filteredSupervisors$","_filterSupervisors","filteredMakes$","_filterMakes","filteredModels$","_filterModels","filteredClients$","_filterClients","filterValue","toLowerCase","includes","m","CommentService","afterDismissed","isSatisfactory","ScannerQrcodeRunComponent","formatsEnabled","EAN_13","EAN_8","UPC_A","UPC_E","UPC_EAN_EXTENSION","CODE_128","CODE_39","torchEnabled","torchAvailable$","tryHarder","isEnabled","isCompatible","hasPermission","resultString","qrResultString","devices","availableDevices","hasDevices","Boolean","labels","LISTS","AdminComponent","myInnerHeight","isError","isMainMenu","isRightMenu","isImportOpen","isLookuplist","templateForm","templateArray","array","emailLists","b","localeCompare","reason","sidenav","signout","selectList","SdkComponent","rawForm","ProfileComponent","toggleTheme","PipeModule","SignOffComponent","submitForm","SpotCheckSafetyComponent","CompanyName","EmployeeName","JobDescription","InspectionFrequency","HazardAssessmentSystem","HazardComments","Procedures","EmergencyPlan","RulesComments","IncidentReporting","NearMissReporting","ProblemFixed","SolvingIssues","IncidentComments","communicationForm","SafetyOrientation","SafetyMeetingFrequency","AppropriateTraining","FirstAidTraining","H2STraining","WHMISTraining","TDGTraining","GroundDisturbanceTraining","EGSOCSOTraining","JobSpecificTraining","CommunicationComments","PPEAvailable","HardHat","SafetyGlasses","Footwear","ProtectiveClothing","HearingProtection","RespiratoryProtection","PersonalGasMonitor","CommunicationEquipment","OtherEquipment","PersonalEquipmentComments","SafetyEquipmentAvailable","FireFightingEquipment","RotatingEquimentGuards","FallArrestEquipment","EmergencySystems","Other","SafetyEquipmentComments","rules","incident","communication","personalEquipment","safetyEquipment","discrepancyComments","SplitCamelCasePipe","split","DataFormsComponent","SpotCheckSafetyState","PricingComponent","LabelComponent","CommunicationTrainingComponent","toggleAppropriateTraining","routes","path","redirectTo","pathMatch","component","AppRoutingModule","relativeLinkResolution","SettingsComponent","settingsForm","WorksiteSafetyGroundComponent","FormComponent","WorksiteSafetyHazardComponent","ScannerBarcodeRunComponent","DATA_MATRIX","QR_CODE","MeaningfulSiteTourSuggestionsComponent","SpeechError","SpeechEvent","bootstrapModule","err","QrcodeRunComponent","begin","end","elementType","correctionLevel","HIGH","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'truncateStraight'\n})\nexport class TruncateStraightPipe implements PipeTransform {\n\n  transform(value: string, args: string[]): string {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20\n    return value.length > limit ? value.substring(0, limit) : value\n   }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\n    <span *ngIf=\"enabled\">\n      <mat-icon class=\"material-icons-outlined\" color=\"primary\">check_circle</mat-icon>\n    </span>\n    <span *ngIf=\"enabled === false\">\n      <mat-icon class=\"material-icons-outlined\" color=\"warn\">cancel</mat-icon>\n    </span>\n    <span *ngIf=\"enabled === null\">\n      <mat-icon class=\"material-icons-outlined\">do_not_disturb_on</mat-icon>\n    </span>\n    <span *ngIf=\"enabled\">Registered</span>\n    <span *ngIf=\"enabled === false\">Disabled</span>\n    <span *ngIf=\"enabled === null\">Not Registered</span>\n  </div>\n  <div fxLayoutAlign=\"start center\" class=\"hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<br>\n<div *ngIf=\"enabled\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" [formControl]=\"name\" placeholder=\"Name\" required>\n  </mat-form-field>\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" value=\"{{disabledEmail}}\" disabled>\n  </mat-form-field>\n</div>\n<!-- registered-->\n<span *ngIf=\"enabled\">\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"admin\" color=\"primary\" [disabled]=\"kioske$ | async\">Admin</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"manager\" color=\"primary\" [disabled]=\"kioske$ | async\">Manager</mat-checkbox>\n  </div>\n  <br>\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"worker\" color=\"primary\" [disabled]=\"kioske$ | async\">Worker</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"supervisor\" color=\"primary\" [disabled]=\"kioske$ | async\">Supervisor</mat-checkbox>\n  </div>\n</span>\n\n<!-- not registered-->\n<span *ngIf=\"enabled === null\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div>\n    <mat-form-field fxFlex>\n      <input matInput type=\"text\" [formControl]=\"name\" placeholder=\"Name\" required [disabled]=\"kioske$ | async\">\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field fxFlex>\n      <input matInput type=\"text\" [formControl]=\"email\" placeholder=\"Email\" required [disabled]=\"kioske$ | async\">\n    </mat-form-field>\n  </div>\n</span>\n<span *ngIf=\"enabled === null\">\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"admin\" color=\"primary\" [disabled]=\"kioske$ | async\">Admin</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"manager\" color=\"primary\" [disabled]=\"kioske$ | async\">Manager</mat-checkbox>\n  </div>\n  <br>\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"worker\" color=\"primary\" [disabled]=\"kioske$ | async\">Worker</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"supervisor\" color=\"primary\" [disabled]=\"kioske$ | async\">Supervisor</mat-checkbox>\n  </div>\n</span>\n\n<!-- disabled -->\n<div *ngIf=\"enabled === false\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" value=\"{{disabledName}}\" disabled>\n  </mat-form-field>\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" value=\"{{disabledEmail}}\" disabled>\n  </mat-form-field>\n</div>\n<span *ngIf=\"enabled === false\">\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"admin\" color=\"primary\" disabled>Admin</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"manager\" color=\"primary\" disabled>Manager</mat-checkbox>\n  </div>\n  <br>\n  <div>\n    <mat-checkbox [(ngModel)]=\"worker\" color=\"primary\" disabled>Worker</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"supervisor\" color=\"primary\" disabled>Supervisor</mat-checkbox>\n  </div>\n</span>\n\n<br>\n<div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n  <div *ngIf=\"enabled || enabled === null\">\n    <button (click)=\"update()\" mat-stroked-button color=\"primary\" [disabled]=\"kioske$ | async\">Save</button>\n  </div>\n  <div *ngIf=\"enabled\">\n    <button (click)=\"reset()\" mat-stroked-button color=\"accent\" [disabled]=\"kioske$ | async\">Reset</button>\n  </div>\n  <div *ngIf=\"enabled === false\">\n    <button (click)=\"enable()\" mat-stroked-button color=\"accent\" [disabled]=\"kioske$ | async\">Enable</button>\n  </div>\n  <div *ngIf=\"enabled || enabled ===  null\">\n    <button (click)=\"disable()\" mat-stroked-button color=\"warn\" [disabled]=\"kioske$ | async\">Disable</button>\n  </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\nimport { FormControl, Validators } from '@angular/forms'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n@Component({\n  selector: 'app-email-edit',\n  templateUrl: './email-edit.component.html',\n  styleUrls: ['./email-edit.component.scss']\n})\nexport class EmailEditComponent implements OnInit {\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  id\n  name\n  email\n  kioske\n  enabled\n  admin\n  worker\n  supervisor\n  disabledName\n  disabledEmail\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private authService: AuthService,\n    private successService: SuccessService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<EmailEditComponent>\n  ) { \n\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.name = new FormControl({value: null, disabled: this.kioske}, [Validators.required])\n    this.email = new FormControl({value: null, disabled: this.kioske}, [Validators.required, Validators.email])\n  \n    this.id = this.appService.dataSource.data[this.data.idx][\"id\"]\n    this.admin = this.appService.dataSource.data[this.data.idx][\"admin\"]\n    this.worker = this.appService.dataSource.data[this.data.idx][\"worker\"]\n    this.enabled = this.appService.dataSource.data[this.data.idx][\"enabled\"]\n    this.supervisor = this.appService.dataSource.data[this.data.idx][\"supervisor\"]\n    this.name.setValue(this.appService.dataSource.data[this.data.idx][\"name\"])\n    this.email.setValue(this.appService.dataSource.data[this.data.idx][\"email\"])\n    this.disabledName = this.appService.dataSource.data[this.data.idx][\"name\"]\n    this.disabledEmail = this.appService.dataSource.data[this.data.idx][\"email\"]\n  }\n\n  update() {\n    let obj = {\n      id: this.id,\n      admin: this.admin,\n      worker: this.worker,\n      supervisor: this.supervisor,\n      name: this.name.value,\n      email: this.email.value\n    }\n    this.authService.update(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email updated.')\n    })\n  }\n\n  disable() {\n    let obj = {\n      id: this.id\n    }\n    this.authService.disable(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email disabled.')\n    })\n  }\n\n  enable() {\n    let obj = {\n      id: this.id\n    }\n    this.authService.enable(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email enabled.')\n    })\n  }\n\n  reset() {\n    let obj = {\n      id: this.id\n    }\n    this.authService.reset(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email reset.')\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  emailUrl = environment.emailUrl\n\n  constructor(private http: HttpClient) { }\n\n  sendNotificationEmail(obj) {\n    return this.http.post(this.emailUrl + 'message/', obj)\n  }\n\n  forgotPassword(obj) {\n    return this.http.post(this.emailUrl + 'forgot/password/', obj)\n  }\n\n  signup(obj) {\n    return this.http.post(this.emailUrl + 'signup', obj)\n  }\n  \n}\n\n","export const VEHICLE_INSPECTION = {\n  id: \"vehicle-inspection\",\n  name: \"Vehicle Inspection\",\n  icon: \"directions_car\",\n  type: \"custom\",\n  is_published: false,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: ['stakeholders', 'models', 'years', 'divisions', 'makes'],\n  description: \"Monthly vehicle inspection\"\n}\nexport interface VehicleInspectionStateModel {\n  isHeaderValid: boolean\n  selectedComments: []\n}\n\nexport const LABEL = `As you drive, continually check for any strange smells, sounds, vibrations, or Anything that does not feel right. **Vehicles should be serviced as per manufacturer’s recommendations and repairs made only by competent accredited personnel. For monthly inspections done by the employee: This vehicle inspection was done by myself and not by an accredited mechanic. There were no issues or problems identified at the time of inspection and therefore, no corrective actions are necessary to be undertaken. The employee completing this form takes full responsibility of the completeness and accuracy of this inspection as per Summit's Inspection Policy.`","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as CorrectiveActionActions from './corrective-action.actions'\nimport { CorrectiveActionStateModel, CorrectiveAction } from './corrective-action.model'\n\n@Injectable()\n@State<CorrectiveActionStateModel>({\n  name: 'correctiveAction',\n  defaults: {\n    correctiveActions: []\n  }\n})\n\nexport class CorrectiveActionState {\n\n  @Selector()\n  static correctiveActions(state: CorrectiveActionStateModel): CorrectiveAction[] {\n    return state.correctiveActions\n  }\n\n  @Action(CorrectiveActionActions.SetCorrectiveActions)\n  onSetCorrectiveAction(ctx: StateContext<CorrectiveActionStateModel>, { correctiveActions }: CorrectiveActionActions.SetCorrectiveActions) {\n    ctx.patchState({\n      correctiveActions: correctiveActions\n    });\n  }\n\n}\n\n","import { Component } from '@angular/core'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AuthService } from \"../../../service/auth.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n\n  auth\n  step = 0\n  notContinue = true\n  terms = false\n  subscription\n\n  logo = environment.logo\n  linkedinUrl = environment.linkedinUrl\n  githubUrl = environment.githubUrl\n\n  emailSignupForm: FormGroup\n  forgotPasswordForm: FormGroup\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private emailService: EmailService) {\n    this.emailSignupForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.required]\n    })\n  }\n\n  close() {\n    \n  }\n\n  signupEmail() {\n    this.authService.signupEmail(this.emailSignupForm.value).subscribe(auth => {\n      this.auth = auth\n\n      if (this.auth.message === 'Signup sucessful.') {\n        this.step = 1\n        this.emailService.signup({ email: this.auth.user.email }).subscribe(_ => {})\n      }\n      else this.errorService.popSnackbar(this.auth.message)\n    })\n  }\n\n  checkTerms(terms) {\n    this.terms = terms\n    if (!this.terms) this.notContinue = true\n    else if (this.subscription) this.notContinue = false\n  }\n\n  selectSubscription() {\n    if (this.terms) this.notContinue = false\n    else this.notContinue = true\n  }\n\n}\n","<div fxLayout=\"column\">\n  <div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>Sign Up</div>\n    <div fxLayoutGap=\"20px\">\n      <button mat-icon-button (click)=\"close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"container-padding\">\n    <div *ngIf=\"step === 0\" fxLayout=\"column\">\n      <form [formGroup]=\"emailSignupForm\">\n        <div fxLayout=\"column\" class=\"form-padding\">\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Email Address</mat-label>\n            <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"text\" required>\n            <mat-error>\n              Email address is required!\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Password</mat-label>\n            <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" required>\n            <mat-error>\n              Password is required!\n            </mat-error>\n          </mat-form-field>\n          <button (click)=\"signupEmail()\" mat-stroked-button color=\"primary\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"step === 1\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div>\n        <app-terms></app-terms>\n      </div>\n      <div class=\"text-color\">\n        <mat-checkbox (change)=\"checkTerms($event.checked)\" color=\"primary\" [checked]=\"terms\">Accept terms and conditions</mat-checkbox>\n      </div>\n      <h3 class=\"text-color\">Monthly Subscription</h3>\n      <div class=\"text-color\">\n        <mat-radio-group (change)=\"selectSubscription()\" [(ngModel)]=\"subscription\">\n          <mat-radio-button value=\"paypal\">Credit Card</mat-radio-button>\n          <mat-radio-button value=\"invoice\">Invoice or EFT</mat-radio-button>\n          <mat-radio-button value=\"free\">Free</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <br>\n      <div>\n        <button (click)=\"step = 2\" mat-stroked-button color=\"primary\" fxFlex [disabled]=\"notContinue\">\n          Continue\n        </button>\n      </div>\n      <br><br>\n    </div>\n    <div *ngIf=\"step === 2\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div *ngIf=\"subscription === 'invoice'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/MonthlySubscriptionInvoiceEFT/formperma/DPyidrkamlSTiR52sfYCU82m7h2MZZzREanwDfrQQy4'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'paypal'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/contactus/formperma/4cYAlnbRcWnLrjP9pBkPFnCCTKGrtP6gHMrEsteGIow'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'free'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/FreeSubscription/formperma/ekqZGlUJ2Q6fESOo2EYdj6y13302mqTvK895Wb6_hx0'></iframe>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\nimport { environment } from '../../environments/environment'\nimport { AppService } from './app.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  emailUrl = environment.emailUrl\n  notificationUrl = environment.notificationUrl\n\n  constructor(\n    private store: Store,\n    private http: HttpClient) { }\n\n  createNotification(obj) {\n\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    let now = new Date().toLocaleString(\"en-US\", {timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone})\n\n    let notificationObj = {\n      date: now,\n      form_name: obj.name,\n      email_from: obj.worker.email,\n      worker_name: obj.worker.name,\n      email_to: obj.supervisor.email,\n      supervisor_name: obj.supervisor.name,\n      form_id: obj.form_id,\n      data_id: obj.data_id,\n      description: obj.description,\n      pdf: obj.pdf,\n      correctiveAction: false,\n      comment: [{\n        from: obj.worker.name,\n        to: obj.supervisor.name,\n        date: now.toString(),\n        message: obj.message\n      }]\n    }\n    notificationObj[\"tenant_id\"] = tenant.tenant_id\n    return this.http.post(this.notificationUrl + 'notification/', notificationObj)\n  }\n\n  addTenantId(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    obj[\"tenant_id\"] = tenant.tenant_id\n    return obj \n  }\n\n  getAllNotifications() {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    const obj = { tenant_id: tenant.tenant_id }\n    return this.http.post(this.notificationUrl+'notifications/', obj)\n  }\n\n  getMyNotifications(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.notificationUrl + 'notification/' + obj.email + '/', obj)\n  }\n\n  getMyNotificationCount(email) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    const obj = { tenant_id: tenant.tenant_id }\n    return this.http.post(this.notificationUrl + 'notification/count/' + email + '/', obj)\n  }\n\n  updateNotificationMessage(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.notificationUrl + 'notification/', obj)\n  }\n\n  updateNotificationRead(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.notificationUrl+'notification/read/', obj)\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  popSnackbar(message) {\n    let msg = \"Whoa, something went wrong\"\n    if (message) msg = message\n    this.snackBar.open(msg, \"Heads Up!\", {duration: 3000})\n  }\n  \n}\n\n","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransformRunService {\n\n  columnArray = []\n\n  constructor(\n    private store: Store) { }\n\n  public parseDataCloud(formValues, form) {\n    \n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    let formArray = Object.entries(formValues)\n    \n    if (formArray.length > 0) {\n      let data = []\n      formArray.forEach(element => {\n        if (Array.isArray(element[1])) {\n          let multiSelect = JSON.stringify(element[1])\n          multiSelect = multiSelect.substr(1)\n          multiSelect = multiSelect.slice(0, -1)\n          multiSelect = '{'+multiSelect+'}'\n          data.push(multiSelect)\n        }\n        else\n          data.push(element[1])\n      })\n      data.unshift(new Date())\n      data.unshift(tenant.email)\n      return data\n    }\n  }\n\n\n  // prepare columns string\n  public parseColumns(details) {\n    this.columnArray = []\n    let columnObj = {\n      columns: null\n    }\n\n    details.forEach(element => {\n      \n      if (element.type === \"Textbox\" || element.type === \"Textarea\" || element.type === \"Radio\" \n        || element.type === \"Select\" || element.type === \"SelectMulti\" || element.type === \"Slider\" || element.type === \"List\") {\n        this.columnArray.push(element.formControlName)\n      }\n\n      if (element.type === \"GPS\") {\n        this.columnArray.push(element.lat.formControlName)\n        this.columnArray.push(element.long.formControlName)\n      }\n\n      if (element.type === \"Checkbox\") {\n        element.checkboxArray.forEach(element => {\n          this.columnArray.push(element.formControlName)\n        })\n      }\n\n      if (element.type === \"Toggle\") {\n        element.toggleArray.forEach(element => {\n          this.columnArray.push(element.formControlName)\n        })\n      }\n    })\n    columnObj.columns = JSON.stringify(this.columnArray)\n    \n    columnObj.columns = columnObj.columns.substr(2)\n    columnObj.columns = columnObj.columns.slice(0, -2)\n    columnObj.columns = columnObj.columns.replace(/['\"]+/g, '')\n    columnObj.columns = 'date_created, ' + columnObj.columns\n    columnObj.columns = 'user_created, ' + columnObj.columns\n\n    let comma = columnObj.columns.slice(-2)\n\n    if (comma === ', ') {\n      columnObj.columns = columnObj.columns.substring(0, columnObj.columns.length - 2)\n      columnObj.columns = columnObj.columns + ' '\n    }\n    \n    return columnObj.columns\n  }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport * as _ from 'lodash'\nimport { Store } from '@ngxs/store'\n\nimport { CommentState } from '../state/comment.state'\nimport { SetComments } from '../state/comment.actions'\n\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\n@Component({\n  selector: 'app-bottom-sheet-comment',\n  templateUrl: './bottom-sheet-comment.component.html',\n  styleUrls: ['./bottom-sheet-comment.component.scss']\n})\nexport class BottomSheetCommentComponent {\n\n  comment\n\n  constructor(\n    private store: Store, \n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any, \n    private bottomSheetRef: MatBottomSheetRef<BottomSheetCommentComponent>) { }\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss()\n    event.preventDefault()\n  }\n\n  close() {\n    this.bottomSheetRef.dismiss(false)\n  }\n\n  deleteComment(field) {\n    let comments: any = _.cloneDeep(this.store.selectSnapshot(CommentState.comments))\n    const index = comments.findIndex(item => item.field === field)\n    comments.splice(index, 1)\n    this.store.dispatch(new SetComments(comments))\n    this.bottomSheetRef.dismiss(true)\n  }\n\n}\n","<div class=\"mat-headline3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ data.comment[0].label }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<br>\n<p style=\"text-align:center\"><b>Click continue to set satisfactory and delete related comments.</b></p>\n<br>\n<div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"2rem\">\n  <button (click)=\"deleteComment(data.comment[0].field)\" mat-raised-button color=\"warn\">\n    Delete\n  </button>\n  <button mat-stroked-button (click)=\"close()\">\n    Cancel\n  </button>\n</div>\n","import { Injectable, HostBinding } from '@angular/core'\n\nimport { OverlayContainer } from '@angular/cdk/overlay'\n\nimport { HttpClient } from '@angular/common/http'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { environment } from '../../environments/environment'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\nimport { SetBackground, SetIsDarkMode } from '../state/device/device-state.actions'\nimport { SetPage, SetChildPage, SetLookupListData, SetWorkers, SetSupervisors, SetFormsPublished, SetForms, SetIsSignIn, SetChildPageLabel } from '../state/auth/auth-state.actions'\nimport { SetNotificationOpen, SetNotificationSigned, SetNotificationAllOpen, SetNotificationAllSigned, SetNotificationMyCount, SetNotificationAdminCount } from '../state/notification/notification-state.actions'\n\nimport { ApiService } from \"../service/api.service\"\nimport { AuthService } from \"../service/auth.service\"\nimport { FormService } from \"../service/form.service\"\nimport { EmailService } from \"../service/email.service\"\nimport { NotificationService } from \"../service/notification.service\"\nimport { IdbCrudService } from \"../service-idb/idb-crud.service\"\n\nimport { LISTS, LIST_FORM } from '../model/forms'\n\nimport { SetTranscription } from 'src/app/state/device/device-state.actions'\nimport { SetSelectedVoiceFieldLabel, SetUserIdb } from 'src/app/state/auth/auth-state.actions'\nimport { VoiceComponent } from '../component/voice/voice.component'\nimport { DeviceState } from '../state/device/device.state'\n\nimport * as uuid from 'uuid'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  @HostBinding('class') className = 'darkMode'\n\n  private data\n\n  public isNew\n  public now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n  public isListMenu\n  public lookupLists\n  public fileArray = []\n  public detailArray = []\n  public currentDetailForm\n  public isFileUploadRunning\n\n  public dataSource = new MatTableDataSource()\n\n  apiUrl = environment.apiUrl\n  tenant = environment.tenant\n  kioske = environment.kioske\n  messageUrl = environment.messageUrl\n\n  LIST_FORM = LIST_FORM\n\n  private notificationOpen: any = []\n  private notificationSigned: any = []\n\n  private setNotifications(data) {\n    this.notificationOpen = []\n    this.notificationSigned = []\n    const notifications: any = data\n\n    notifications.forEach(element => {\n      if (element.email_signed) this.notificationSigned.push(element)\n      else this.notificationOpen.push(element)\n    })\n  }\n\n  public popVoiceDialog(form, formField, title) {\n    this.store.dispatch(new SetTranscription(form.controls[formField].value))\n    this.store.dispatch(new SetSelectedVoiceFieldLabel(title))\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n      dialogConfig.maxHeight = '100vh',\n      this.dialog.open(VoiceComponent, dialogConfig).afterClosed().subscribe(() => {\n        form.controls[formField].setValue(this.store.selectSnapshot(DeviceState.transcription))\n      })\n  }\n\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private formService: FormService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    private overlayContainer: OverlayContainer,\n    private notificationService: NotificationService) {\n  }\n\n  create(obj) {\n    return this.http.post(this.apiUrl, obj)\n  }\n\n  getCloud() {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    return this.http.get(this.apiUrl + tenant.tenant_id + '/' + this.store.selectSnapshot(AuthState.selectedForm[\"form_id\"]) + '/')\n  }\n\n  createList(listName) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    this.LIST_FORM.form.name = listName\n    let userCreated = { email: 'polly@formloco.com', date_created: new Date() }\n\n    let form = ({\n      pin: '369',\n      name: listName,\n      form: this.LIST_FORM.form,\n      form_id: uuid.v4(),\n      tenant_id: tenant.tenant_id,\n      date_created: new Date(),\n      date_last_access: new Date(),\n      user_created: userCreated,\n      is_data: true,\n      is_list: true,\n      is_published: true,\n      type: 'dynamic'\n    })\n    return form\n  }\n\n  saveSettings(obj) {\n    return this.idbCrudService.put('data', obj)\n  }\n\n  initializeUser(email) {\n    // kioske email is used to get forms and notifications\n    // get lookuplists array and dispatch to lookuplist state\n    this.store.select(AuthState.tenant).subscribe(tenant => {\n      this.apiService.getLists({ tenant_id: tenant.tenant_id }).subscribe(lists => {\n        const lookupLists: any = lists\n        LISTS.forEach(element => {\n          if (lookupLists.filter(list => list.name != element))\n            lookupLists.push({ name: element, rows: [] })\n        })\n        this.store.dispatch(new SetLookupListData(lookupLists))\n        this.idbCrudService.put('lists', lookupLists)\n      })\n      // get worker and supervisor lists and dispatch to state\n      this.apiService.getEmailList({ tenant_id: tenant.tenant_id }).subscribe(lists => {\n        const emailList: any = lists\n        let workers: any[] = []\n        let supervisors: any[] = []\n        emailList.forEach(element => {\n          if (element.worker) {\n            workers.push({ name: element.name, email: element.email })\n          }\n          if (element.supervisor) {\n            supervisors.push({ name: element.name, email: element.email })\n          }\n        })\n\n        workers.sort()\n        supervisors.sort()\n        this.store.dispatch(new SetWorkers(workers))\n        this.store.dispatch(new SetSupervisors(supervisors))\n        this.idbCrudService.put('workers', workers)\n        this.idbCrudService.put('supervisors', supervisors)\n      })\n\n      this.formService.getForms({ email: email }).subscribe((forms: any) => {\n        this.idbCrudService.clear('form')\n        \n        // form_id needs to be added idb form\n        forms.forEach((ele) => {\n          ele.form[\"form_id\"] = ele.form_id\n          this.idbCrudService.put('form', ele.form)\n        })\n\n        this.idbCrudService.readAll('form').subscribe((forms: any) => {\n          this.store.dispatch(new SetForms(forms))\n          const formsPublished = forms.filter(form => form.is_published === true)\n          this.store.dispatch(new SetFormsPublished(formsPublished))\n        })\n      })\n      this.initializeMyNotifications(email)\n    })\n  }\n\n  initializeOfflineUser() {\n    this.idbCrudService.readAll('lists').subscribe((lookupLists: any) => {\n      this.store.dispatch(new SetLookupListData(lookupLists))\n    })\n    this.idbCrudService.readAll('workers').subscribe((workers: any) => {\n      this.store.dispatch(new SetWorkers(workers))\n    })\n    this.idbCrudService.readAll('supervisors').subscribe((supervisors: any) => {\n      this.store.dispatch(new SetSupervisors(supervisors))\n    })\n    this.idbCrudService.readAll('form').subscribe((forms: any) => {\n      this.store.dispatch(new SetForms(forms))\n      const formsPublished = forms.filter(form => form.is_published === true)\n      this.store.dispatch(new SetFormsPublished(formsPublished))\n    })\n\n    this.store.dispatch(new SetPage('home'))\n    this.store.dispatch(new SetIsSignIn(true))\n    this.store.dispatch(new SetIsDarkMode(true))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n  }\n\n  initializeMyNotifications(email) {\n    this.notificationService.getMyNotifications({ email: email }).subscribe(data => {\n      this.setNotifications(data)\n      this.store.dispatch(new SetNotificationOpen(this.notificationOpen))\n      this.store.dispatch(new SetNotificationSigned(this.notificationSigned))\n    })\n    this.notificationService.getMyNotificationCount(email).subscribe((notification: any) => {\n      if (notification.count == 0) this.store.dispatch(new SetNotificationMyCount(undefined))\n      else this.store.dispatch(new SetNotificationMyCount(notification.count))\n    })\n  }\n\n  initializeAdminNotifications() {\n    this.notificationService.getAllNotifications().subscribe(data => {\n      this.setNotifications(data)\n      this.store.dispatch(new SetNotificationAllOpen(this.notificationOpen))\n      this.store.dispatch(new SetNotificationAllSigned(this.notificationSigned))\n      let count = 0\n      this.notificationOpen.forEach(element => {\n        if (element.read === false) count = count + 1\n      })\n      this.store.dispatch(new SetNotificationAdminCount(count))\n    })\n  }\n\n  setMode(darkClassName) {\n    this.className = 'darkMode' ? darkClassName : ''\n\n    if (darkClassName === 'darkMode') {\n      this.store.dispatch(new SetBackground('#3b3b3b'))\n      this.overlayContainer.getContainerElement().classList.add(darkClassName)\n    }\n    else {\n      this.store.dispatch(new SetBackground(''))\n      this.overlayContainer.getContainerElement().classList.remove('darkMode')\n    }\n  }\n\n  setIndexedDbUser(email, tenant_id) {\n    let darkMode = true\n    this.idbCrudService.readAll('prefs').subscribe((prefs: any) => {\n      if (prefs.length > 0) darkMode = prefs.isDarkMode\n    })\n    let userObj = {\n      isDarkMode: darkMode,\n      email: email\n    }\n    let obj = {\n      user: {\n        isDarkMode: darkMode,\n        email: email,\n        tenant_id: tenant_id\n      }\n    }\n    this.store.dispatch(new SetUserIdb(userObj))\n    this.idbCrudService.clear('prefs')\n    this.idbCrudService.put('prefs', obj)\n  }\n\n  getWorker(name) {\n    const workers: any = this.store.selectSnapshot(AuthState.workers)\n    const worker = workers.find(worker => worker.name === name)\n    if (!worker) {\n      worker[\"name\"] = worker.name\n      worker[\"email\"] = worker.email\n    }\n    return worker\n  }\n\n  getSupervisor(name) {\n    const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n    const supervisor = supervisors.find(worker => worker.name === name)\n    if (!supervisor) {\n      supervisor[\"name\"] = supervisor.name\n      supervisor[\"email\"] = supervisor.email\n    }\n    return supervisor\n  }\n\n  sendNotification(notificationObj) {\n    this.notificationService.createNotification(notificationObj).subscribe((myNotifications: any) => {\n      if (myNotifications) {\n        this.store.dispatch(new SetNotificationOpen(myNotifications.data))\n\n        const obj = {\n          toName: notificationObj.supervisor.name,\n          messageID: myNotifications.data[0][\"id\"],\n          url: this.messageUrl,\n          subject: notificationObj.subject,\n          emailTo: notificationObj.supervisor.email,\n          emailFrom: notificationObj.worker.email\n        }\n  \n        this.emailService.sendNotificationEmail(obj).subscribe(() => {\n          this.store.dispatch(new SetPage('home'))\n          this.store.dispatch(new SetChildPage('Forms'))\n          this.snackBar.open(myNotifications.message, 'Success', {\n            duration: 3000,\n            verticalPosition: 'bottom'\n          })\n        })\n      }\n    })\n    this.idbCrudService.put('pics', [])\n    // const pics = this.store.selectSnapshot(DeviceState.pics)\n    // const selectedForm = this.store.selectSnapshot(AuthState.selectedForm)\n\n    // const picObj = {\n    //   id: selectedForm[\"id\"] + notificationObj.data_id,\n    //   pics: pics\n    // }\n    // this.idbCrudService.put('pics', picObj)\n  }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs'\n\nimport { Store } from '@ngxs/store'\n\nimport { SpeechNotification, SpeechError, SpeechEvent, AppWindow } from '../model/speech';\n\n// tslint:disable-next-line:no-any\nconst { webkitSpeechRecognition }: AppWindow = (window as any) as AppWindow;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeechRecognitionService {\n\n  recognition!: SpeechRecognition;\n  language!: string;\n  isListening = false;\n\n  constructor(\n    private ngZone: NgZone,\n    private store: Store,\n    // private dialog: MatDialog\n    ) { }\n\n  initialize(): boolean {\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new webkitSpeechRecognition();\n      this.recognition.continuous = true;\n      this.recognition.interimResults = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  start(): void {\n    if (!this.recognition) {\n      return;\n    }\n\n    this.recognition.start();\n    this.isListening = true;\n  }\n\n  onStart(): Observable<SpeechNotification<never>> {\n    if (!this.recognition) {\n      this.initialize();\n    }\n\n    return new Observable(observer => {\n      this.recognition.onstart = () => {\n        this.ngZone.run(() => {\n          observer.next({\n            event: SpeechEvent.Start\n          });\n        });\n      };\n    });\n  }\n\n  onEnd(): Observable<SpeechNotification<never>> {\n    return new Observable(observer => {\n      this.recognition.onend = () => {\n        this.ngZone.run(() => {\n          observer.next({\n            event: SpeechEvent.End\n          });\n          this.isListening = false;\n        });\n      };\n    });\n  }\n\n  onResult(): Observable<SpeechNotification<string>> {\n    return new Observable(observer => {\n      this.recognition.onresult = (event: SpeechRecognitionEvent) => {\n        let interimContent = '';\n        let finalContent = '';\n\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalContent += event.results[i][0].transcript;\n            this.ngZone.run(() => {\n              observer.next({\n                event: SpeechEvent.FinalContent,\n                content: finalContent\n              });\n            });\n          } else {\n            interimContent += event.results[i][0].transcript;\n            this.ngZone.run(() => {\n              observer.next({\n                event: SpeechEvent.InterimContent,\n                content: interimContent\n              });\n            });\n          }\n        }\n      };\n    });\n  }\n\n  onError(): Observable<SpeechNotification<never>> {\n    return new Observable(observer => {\n      this.recognition.onerror = (event) => {\n        // tslint:disable-next-line:no-any\n        const eventError: string = (event as any).error;\n\n        let error: SpeechError;\n        switch (eventError) {\n          case 'no-speech':\n            error = SpeechError.NoSpeech;\n            break;\n          case 'audio-capture':\n            error = SpeechError.AudioCapture;\n            break;\n          case 'not-allowed':\n            error = SpeechError.NotAllowed;\n            break;\n          default:\n            error = SpeechError.Unknown;\n            break;\n        }\n\n        this.ngZone.run(() => {\n          observer.next({\n            error\n          });\n        });\n      };\n    });\n  }\n\n  stop(): void {\n    this.recognition.stop();\n  }\n\n\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"fireExtinguisherForm\">\n    <div class=\"text-color radio-center\">{{label.TwentyPoundMinimumFireExtinguisherAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"TwentyPoundMinimumFireExtinguisherAvailable\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false)\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isFireExtinguisher$ | async)\">\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherInspected}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherInspected\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherInspected,'FireExtinguisherInspected')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherVisibleUnobstructed}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherVisibleUnobstructed\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherVisibleUnobstructed,'FireExtinguisherVisibleUnobstructed')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherCharged}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherCharged\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherCharged,'FireExtinguisherCharged')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherSafetyPinSecured}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherSafetyPinSecured\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherSafetyPinSecured,'FireExtinguisherSafetyPinSecured')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherOperatingInstructions}}s</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherOperatingInstructions\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherOperatingInstructions,'FireExtinguisherOperatingInstructions')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherNoVisibleDamage}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherNoVisibleDamage\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherNoVisibleDamage,'FireExtinguisherNoVisibleDamage')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherCertification}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherCertification\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherCertification,'FireExtinguisherCertification')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsFireExtinguisher } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { FireExtinguisherFormLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n@Component({\n  selector: 'app-worksite-fire-extinguisher',\n  templateUrl: './worksite-fire-extinguisher.component.html',\n  styleUrls: ['./worksite-fire-extinguisher.component.scss']\n})\nexport class WorksiteFireExtinguisherComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isFireExtinguisher) isFireExtinguisher$: Observable<string>\n\n  @Input() fireExtinguisherForm\n\n  label = FireExtinguisherFormLabels\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetTypeFilter('isFireExtinguisher'))\n    this.fireExtinguisherForm.controls['TwentyPoundMinimumFireExtinguisherAvailable'].patchValue('yes')\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsFireExtinguisher(toggle))\n    if (toggle) {\n      const comments:any = this.store.selectSnapshot(CommentState.commentsByType)\n      if (comments.length > 0) this.bottomSheet.open(BottomSheetWorksiteSafetyInspectionComponent)\n    }\n    if (!toggle) {\n      this.openComment(this.label.TwentyPoundMinimumFireExtinguisherAvailable, 'TwentyPoundMinimumFireExtinguisherAvailable')\n    }\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Fire Extinguisher', label: label, field: field, type: 'isFireExtinguisher' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core'\n\nimport { MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { AuthState } from '../../../../state/auth/auth.state'\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\nimport { SpeechRecognitionService } from \"../../../../service/speech-recognition.service\"\n\n@Component({\n  selector: 'app-worksite-safety-header',\n  templateUrl: './worksite-safety-header.component.html',\n  styleUrls: ['./worksite-safety-header.component.scss']\n})\nexport class WorksiteSafetyHeaderComponent implements OnInit {\n\n  @Input() headerForm\n  @Output() checkValidHeader = new EventEmitter<any>()\n\n  header\n  lookupLists\n\n  customYearValues = [2025, 2024, 2023, 2022, 2021, 2016, 2008, 2004, 2000, 1996];\n  customDayShortNames = ['s\\u00f8n', 'man', 'tir', 'ons', 'tor', 'fre', 'l\\u00f8r'];\n  customPickerOptions: any;\n\n  years: string[] = []\n  makes: string[] = []\n  models: string[] = []\n  divisions: string[] = []\n  stakeholders: string[] = []\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public autoCompleteService: AutoCompleteService,\n    public speechRecognitionService: SpeechRecognitionService) { }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n    this.lookupLists = this.store.selectSnapshot(AuthState.lookupListData)\n\n    if (this.lookupLists) {\n      this.divisions = this.lookupLists.filter(d => { return d.name == \"divisions\" })[0][\"rows\"].map(d => { return d.data })\n      this.divisions.sort()\n    }\n\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude\n      const long = position.coords.longitude\n      this.headerForm.controls['Latitude'].setValue(lat)\n      this.headerForm.controls['Longitude'].setValue(long)\n    })\n\n  }\n\n  validHeaderCheck() {\n    this.checkValidHeader.emit()\n  }\n\n  openVoice(formField) {\n    this.appService.popVoiceDialog(this.headerForm, formField, 'Scope of Work')\n  }\n\n}\n\n","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Date Inspection Completed</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\" required>\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <mat-form-field class=\"bot-pad full-width-field\" fxFlex>\n    <mat-label>Worker Completing Inspection</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Inspection Completed By\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-autocomplete (optionSelected)=validHeaderCheck() #autoWorkers=\"matAutocomplete\">\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Site Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Site Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete (optionSelected)=validHeaderCheck() #autoSupervisors=\"matAutocomplete\">\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\">\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Site Supervisor Phone Number</mat-label>\n    <input matInput (change)=validHeaderCheck() placeholder=\"Site Supervisor Phone Number\"\n      formControlName=\"SupervisorPhone\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Client Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Client Name\" matInput\n      [formControl]=\"autoCompleteService.clientsControl\" [matAutocomplete]=\"autoClients\" required>\n    <mat-autocomplete (optionSelected)=validHeaderCheck() #autoClients=\"matAutocomplete\">\n      <mat-option *ngFor=\"let client of autoCompleteService.filteredClients$ | async\" [value]=\"client\">\n        {{client}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Worksite Location</mat-label>\n    <input matInput placeholder=\"Worksite Location\" formControlName=\"Location\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>LSD/UWI</mat-label>\n    <input matInput placeholder=\"LSD/UWI\" formControlName=\"LSDUWI\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Latitude</mat-label>\n    <input matInput placeholder=\"Latitude\" formControlName=\"Latitude\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Longitude</mat-label>\n    <input matInput placeholder=\"Longitude\" formControlName=\"Longitude\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Job/Project#</mat-label>\n    <input matInput (change)=validHeaderCheck() placeholder=\"Job/Project#\" formControlName=\"JobNumber\" type=\"text\"\n      required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Division</mat-label>\n    <mat-select (selectionChange)=validHeaderCheck() panelClass=\"select-panel\" formControlName=\"Division\" required>\n      <mat-option *ngFor=\"let division of divisions\" [value]=\"division\" required>{{division}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>STARS Site # (if applicable)</mat-label>\n    <input matInput placeholder=\"STARS Site # (if applicable)\" formControlName=\"STARSSiteNumber\" type=\"text\">\n  </mat-form-field>\n  <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n    <div>\n      <mat-label>Scope of Work</mat-label>\n    </div>\n    <div>\n      <button (click)=\"openVoice('ScopeOfWork')\" mat-mini-fab color=\"primary\">\n        <mat-icon matSuffix>mic_none</mat-icon>\n      </button>\n    </div>\n  </div>\n  <mat-form-field fxFlex>\n    <textarea (change)=validHeaderCheck() cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n      formControlName=\"ScopeOfWork\" fxFlex required></textarea>\n  </mat-form-field>\n</form>","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authUrl = environment.authUrl;\n  loginStatus = false;\n\n  constructor(\n    private store: Store,\n    private http: HttpClient) { \n  }\n\n  token() {\n    return this.http.get(this.authUrl+'token/')\n  }\n\n  addTenantId(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    obj[\"tenant_id\"] = tenant.tenant_id\n    return obj \n  }\n\n  user(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'user/', obj)\n  }\n\n  register(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'register/', obj)\n  }\n\n  create(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'create/', obj)\n  }\n\n  update(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'update/', obj)\n  }\n\n  enable(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'enable/', obj)\n  }\n\n  disable(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'disable/', obj)\n  }\n\n  reset(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'reset/', obj)\n  }\n  \n  resetPassword(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'resetpassword/', obj)\n  }\n\n  getPermissions(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'permissions/', obj)\n  }\n\n  signupEmail(obj) {\n    return this.http.post(this.authUrl+'email/', obj)\n  }\n\n  getTenant(obj) {\n    return this.http.post(this.authUrl+'tenant/', obj)\n  }\n\n  signinEmail(obj) {\n    return this.http.post(this.authUrl, obj)\n  }\n\n}\n","import { Component, Inject, Input, OnInit } from '@angular/core'\nimport { FormBuilder } from '@angular/forms'\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'\nimport { Store } from '@ngxs/store'\nimport { AppService } from 'src/app/service/app.service'\nimport { AuthState } from '../../state/auth/auth.state'\n\nimport { CorrectiveActionState } from '../corrective-action/state/corrective-action.state'\n\nimport * as _ from 'lodash'\nimport { SetCorrectiveActions } from './state/corrective-action.actions'\nimport { AutoCompleteService } from \"../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-corrective-action',\n  templateUrl: './corrective-action.component.html',\n  styleUrls: ['./corrective-action.component.scss']\n})\nexport class CorrectiveActionComponent implements OnInit {\n\n  @Input() correctiveActionForm\n  \n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private formBuilder: FormBuilder,\n    public autoCompleteService: AutoCompleteService,\n    public dialogRef: MatDialogRef<CorrectiveActionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.correctiveActionForm = this.formBuilder.group({\n      CorrectiveActionRequired: [],\n      DateCorrectiveActionToBeCompleted: [],\n      PersonResonsibleCorrectiveAction: [],\n      DateCorrectiveActionCompleted: [],\n      PersonResonsible: []\n    })\n  }\n\n  ngOnInit(): void {\n    const correctiveActions = this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    const correctiveAction = correctiveActions.filter(c => c.field == this.data.field)\n    \n    if (correctiveAction.length > 0) {\n      this.correctiveActionForm.controls['DateCorrectiveActionToBeCompleted'].setValue(correctiveAction[0].dateToComplete)\n      this.correctiveActionForm.controls['CorrectiveActionRequired'].setValue(correctiveAction[0].correctiveActionRequired)\n      this.correctiveActionForm.controls['PersonResonsibleCorrectiveAction'].setValue(correctiveAction[0].personResponsible)\n      this.correctiveActionForm.controls['DateCorrectiveActionCompleted'].setValue(correctiveAction[0].dateCompleted)\n      this.correctiveActionForm.controls['PersonResonsible'].setValue(correctiveAction[0].signature)\n    }\n  }\n\n  save() {\n    const correctiveActions = _.cloneDeep(this.store.selectSnapshot(CorrectiveActionState.correctiveActions))\n    const correctiveActionIdx = correctiveActions.findIndex(c => c.field == this.data.field)\n    \n    if (correctiveActionIdx == -1) \n      correctiveActions.push({\n        label: this.data.label,\n        dateToComplete: this.correctiveActionForm.controls['DateCorrectiveActionToBeCompleted'].value,\n        actionItem: this.data.actionItem,\n        correctiveActionRequired: this.correctiveActionForm.controls['CorrectiveActionRequired'].value,\n        personResponsible: this.autoCompleteService.personResonsibleCorrectiveActionControl.value,\n        dateCompleted: this.correctiveActionForm.controls['DateCorrectiveActionCompleted'].value,\n        field: this.data.field,\n        type: this.data.type\n      })\n    else {\n      correctiveActions[correctiveActionIdx].dateToComplete = this.correctiveActionForm.controls['DateCorrectiveActionToBeCompleted'].value\n      correctiveActions[correctiveActionIdx].correctiveActionRequired = this.correctiveActionForm.controls['CorrectiveActionRequired'].value\n      correctiveActions[correctiveActionIdx].personResponsible = this.autoCompleteService.personResonsibleCorrectiveActionControl.value\n      correctiveActions[correctiveActionIdx].dateCompleted = this.correctiveActionForm.controls['DateCorrectiveActionCompleted'].value\n      correctiveActions[correctiveActionIdx].signature = this.store.selectSnapshot(AuthState.user).email\n    }  \n    \n    this.store.dispatch(new SetCorrectiveActions(correctiveActions))\n    this.dialogRef.close()\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.correctiveActionForm, formField, title)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div>\n    <div class=\"header-font\" fxLayoutAlign=\"start center\">{{ data.label }}</div>\n  </div>\n  <div class=\"header-font\" fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<br><br>\n<form fxLayout=\"column\" [formGroup]=\"correctiveActionForm\">\n  <ion-label position=\"stacked\">Date for corrective actions to be completed</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\"\n    formControlName=\"DateCorrectiveActionToBeCompleted\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Corrective Action Required</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('CorrectiveActionRequired','Hazard Identification & Control Comments')\" mat-mini-fab\n          color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"CorrectiveActionRequired\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <br>\n  <mat-form-field>\n    <mat-label>Person Responsible</mat-label>\n    <input type=\"text\" placeholder=\"Person Responsible\" matInput\n      [formControl]=\"autoCompleteService.personResonsibleCorrectiveActionControl\" [matAutocomplete]=\"autoWorkers\"\n      required>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <ion-label position=\"stacked\">Date corrective actions were complete</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"DateCorrectiveActionCompleted\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <div class=\"hand\" fxLayoutAlign=\"center\">\n    <mat-icon *ngIf=\"!correctiveActionForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n    <mat-icon *ngIf=\"correctiveActionForm.valid\" class=\"icon-169px-action\" (click)=\"save()\">fingerprint</mat-icon>\n  </div>\n</form>","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ data.name }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<div fxLayoutAlign=\"center\">\n  <webcam [height]=\"HEIGHT\" [width]=\"WIDTH\" [trigger]=\"triggerObservable\"\n    (imageCapture)=\"handleImage($event)\" [imageQuality]=\"1\"></webcam>\n</div>\n<div [ngClass]=\"((pics$ | async).length > 0 ? 'float-left':'float')\" *ngIf=\"!isDelete\">\n  <mat-icon (click)=\"triggerSnapshot()\" class=\"icon-120px-action hand\">radio_button_checked</mat-icon>\n</div>\n<div *ngIf=\"(pics$ | async).length > 0\" class=\"float-right\">\n  <mat-icon color=\"primary\" class=\"material-icons-outlined icon-select-files hand\" (click)=\"showPhotos()\" matBadge=\"{{ (pics$ | async)?.length }}\" matBadgeColor=\"warn\">perm_media</mat-icon>\n</div>\n","import { Component, ViewContainerRef, Inject } from \"@angular/core\"\n\nimport * as _ from 'lodash'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\n\nimport { Subject, Observable } from 'rxjs'\nimport { WebcamImage } from 'ngx-webcam'\n\nimport { PicsComponent } from '../pics/pics.component'\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../state/device/device.state'\nimport { SetPics } from '../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-camera',\n  templateUrl: './camera.component.html',\n  styleUrls: ['./camera.component.scss']\n})\nexport class CameraComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n\n  public webcamImage: WebcamImage = null;\n  private trigger: Subject<void> = new Subject<void>();\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n  \n  WIDTH = window.innerWidth\n  HEIGHT = window.innerHeight\n\n  idx\n  pics\n  isDelete = false\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet,\n    public viewContainerRef: ViewContainerRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<CameraComponent>) {}\n\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    this.webcamImage = webcamImage\n    this.pics = _.cloneDeep(this.store.selectSnapshot(DeviceState.pics))\n    this.pics.push(this.webcamImage.imageAsDataUrl)\n    this.store.dispatch(new SetPics(this.pics))\n  }\n\n  deletePhoto() {\n    this.pics = this.store.selectSnapshot(DeviceState.pics)\n    this.pics.splice(this.idx,1)\n    this.store.dispatch(new SetPics(this.pics))\n    this.isDelete = false\n  }\n\n  selectPhoto(idx: number) {\n    this.idx = idx\n    this.isDelete = true\n  }\n\n  showPhotos() {\n    this.bottomSheet.open(PicsComponent)\n  }\n\n}\n","import { AuthState } from './auth/auth.state'\nimport { DeviceState } from './device/device.state'\nimport { NotificationState } from './notification/notification.state'\nimport { CommentState } from '../component/comment/state/comment.state'\nimport { CorrectiveActionState } from '../component/corrective-action/state/corrective-action.state'\nimport { SpotCheckSafetyState } from '../component/forms/spot-check-safety/state/spot-check-safety.state'\nimport { VehicleInspectionState } from '../component/forms/vehicle-inspection/state/vehicle-inspection.state'\nimport { WorksiteSafetyInspectionState } from '../component/forms/worksite-safety-inspection/state/worksite-safety-inspection.state'\n\nexport const States = [\n  AuthState,\n  DeviceState,\n  CommentState,\n  NotificationState,\n  SpotCheckSafetyState,\n  CorrectiveActionState,\n  VehicleInspectionState,\n  WorksiteSafetyInspectionState\n]\n\nexport enum Formloco {\n  pin = '111111',\n  tenant = 'formloco',\n  linkedinUrl = 'https://www.linkedin.com/in/formloco',\n  githubUrl = 'https://github.com/formloco/',\n  designUrl = 'https://design.formloco.com/',\n  designKioskeUrl = 'https://design.formloco.com/kioske/true',\n  idbName = 'formlocoMobileDB',\n  email = 'brock@formloco.com',\n  logo = 'assets/logo-light.png',\n  version = '2.0',\n  homeUrl = 'https://formloco.com/',\n  apiUrl = 'https://api.formloco.com/api/',\n  authUrl = 'https://api.formloco.com/auth/',\n  formUrl = 'https://api.formloco.com/form/',\n  emailUrl = 'https://api.formloco.com/email/',\n  assetUrl = 'https://api.formloco.com/asset/',\n  messageUrl = 'https://mobile.formloco.com/message/',\n  notificationUrl = 'https://api.formloco.com/',\n  signinUrl = 'https://mobile.formloco.com/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl = 'https://mobile.formloco.com/O451fd2702f54a00b1007f6e80b32e45/'\n}\n\nexport enum Summit {\n  pin = '999999',\n  tenant = 'summmit',\n  idbName = 'summitEarthDB',\n  kioskeEmail = 'brock@formloco.com',\n  kioskePassword = 'simple',\n  kioskeTenant = 'formloco',\n  email = 'HSE@Summitearth.com',\n  logo = 'assets/logo-summit.svg',\n  version = '2.0',\n  apiUrl = 'https://forms.summitearth.com/api/',\n  authUrl = 'https://forms.summitearth.com/auth/',\n  formUrl = 'https://forms.summitearth.com/form/',\n  emailUrl = 'https://forms.summitearth.com/email/',\n  assetUrl = 'https://forms.summitearth.com/asset/',\n  messageUrl = 'https://forms.summitearth.com/message/',\n  notificationUrl = 'https://forms.summitearth.com/',\n  signinUrl = 'https://forms.summitearth.com/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl = 'https://forms.summitearth.com/O451fd2702f54a00b1007f6e80b32e45/'\n}\n\nexport enum SummitForms {\n  pin = '333333'}\n\nexport enum Rumzer {\n  pin = '333333',\n  tenant = 'rumzer',\n  idbName = 'rumzerMobileDB',\n  kioskeEmail = 'brock@formloco.com',\n  kioskePassword = 'simple',\n  kioskeTenant = 'formloco',\n  version = '2.0',\n  email = 'rumzerbot@rumzer.com',\n  logo = 'assets/logo-rumzer.svg',\n  apiUrl = 'https://api.formloco.com/api/',\n  authUrl = 'https://api.formloco.com/auth/',\n  formUrl = 'https://api.formloco.com/form/',\n  emailUrl = 'https://api.formloco.com/email/',\n  assetUrl = 'https://api.formloco.com/asset/',\n  notificationUrl = 'https://api.formloco.com/',\n  messageUrl = 'https://mobile.formloco.com/message/',\n  signinUrl = 'https://mobile.formloco.com/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl = 'https://mobile.formloco.com/O451fd2702f54a00b1007f6e80b32e45/'\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-labels',\n  templateUrl: './labels.component.html',\n  styleUrls: ['./labels.component.scss']\n})\nexport class LabelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>labels works!</p>\n","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\nimport { DeviceState } from '../state/device/device.state'\n\nimport { ApiService } from \"../service/api.service\"\nimport { IdbCrudService } from \"../service-idb/idb-crud.service\"\n\nimport { Form } from \"../state/auth/auth-state.model\"\nimport { SetPage, SetChildPageLabel } from '../state/auth/auth-state.actions'\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  formUrl = environment.formUrl\n\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private idbCrudService: IdbCrudService) { }\n\n  addTenantId(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    obj[\"tenant_id\"] = tenant.tenant_id\n    return obj \n  }\n\n  getForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.get(this.formUrl + obj.form_id+'/'+obj.data_id+'/')\n  }\n\n  getForms(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'forms/', obj)\n  }\n\n  createForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl, obj)\n  }\n\n  registerForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'register/', obj)\n  }\n\n  statusToggle(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'status/', obj)\n  }\n\n  setPermissions(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'permission/', obj)\n  }\n\n  update(form: Form) {\n    form = this.addTenantId(form)\n    return this.http.put(this.formUrl, form)\n  }\n\n  updateForm(form, formData, data) {\n    const user = this.store.selectSnapshot(AuthState.user)\n\n    const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n    const now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n    let userUpdated = {\n      email: user.email,\n      date_created: now\n    }\n\n    if (!isOnline) {\n      const obj = {\n        id: form[\"id\"],\n        data: data,\n        user: userUpdated,\n        data_id: null,\n        form_id: form[\"form_id\"],\n        date: now,\n        pics: this.store.selectSnapshot(DeviceState.pics)\n      }\n      this.idbCrudService.readAll('data').subscribe((data: any) => {\n        const idbData = data.find(data => data.id === form['id'])\n        obj.data = idbData\n        this.idbCrudService.put('data', obj)\n      })\n    }\n    else {\n      const obj = {\n        id: form[\"id\"],\n        data: data,\n        user: userUpdated,\n        data_id: formData[\"id\"],\n        form_id: form[\"form_id\"],\n        date: now,\n        pics: this.store.selectSnapshot(DeviceState.pics)\n      }\n\n      this.apiService.update(obj).subscribe((res) => {\n        this.store.dispatch(new SetPage('notification'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n        this.snackBar.open(res[\"data\"].message, 'Success', {\n          duration: 3000,\n          verticalPosition: 'bottom'\n        })\n      })\n    }\n    return this.http.put(this.formUrl, form)\n  }\n\n  // getPermissions(obj) {\n  //   obj = this.addTenantId(obj)\n  //   return this.http.get(this.formUrl + 'permission/', obj)\n  // }\n  \n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\nimport { CommentComponent } from '../../../comment/comment.component'\n\n@Component({\n  selector: 'app-hazard-identification-control',\n  templateUrl: './hazard-identification-control.component.html',\n  styleUrls: ['./hazard-identification-control.component.scss']\n})\nexport class HazardIdentificationControlComponent {\n\n  @Input() hazardForm\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField) {\n    this.appService.popVoiceDialog(this.hazardForm, formField, 'Hazard Identification & Control Comments')\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isHazardIdentification' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n  \n  openCommentOnly(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isHazardIdentification', isCommentOnly: true }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.hazardForm)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"hazardForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Are equipment and vehicles inspected, and at what frequency? (Examples and documentation)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"InspectionFrequency\">\n                <!-- <mat-radio-button (click)=\"toggle('InspectionFrequency')\" value=\"satisfactory\">S</mat-radio-button> -->\n\n        <mat-radio-button (click)=\"openCommentOnly('Are equipment and vehicles inspected, and at what frequency?','InspectionFrequency')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Are equipment and vehicles inspected, and at what frequency?','InspectionFrequency')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Is there a system for hazard assessment, reporting and follow-up? (Written or verbal)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HazardAssessmentSystem\">\n        <mat-radio-button (click)=\"toggle('HazardAssessmentSystem')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Is there a system for hazard assessment, reporting and follow-up?','HazardAssessmentSystem')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Hazard Identification & Control Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('HazardComments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"HazardComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n","<mat-accordion multi [togglePosition]=\"'before'\" *ngFor=\"let notification of (notificationSigned$ | async)\">\n  <mat-expansion-panel class=\"panel-margin\">\n    <mat-expansion-panel-header class=\"accordion-margin right-aligned-header\">\n      <mat-panel-title>\n        {{notification.form_name}}\n        <br>Signed:&nbsp;{{notification.date_signed | date: 'mediumDate'}}<br>By:&nbsp;{{notification.signed_name}}\n      </mat-panel-title>\n      <mat-panel-description>\n          <button color=\"primary\" mat-mini-fab>\n            <mat-icon class=\"material-icons-outlined\" (click)=\"openPdf(notification)\">picture_as_pdf</mat-icon>\n          </button>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <br>\n    <div>Messages</div>\n    <mat-accordion>\n      <div class=\"form-padding\" *ngFor=\"let comment of notification.comment\">\n        <mat-card class=\"custom hand\">\n          {{ comment.from }}<br>\n          <br>{{comment.message}}\n        </mat-card>\n      </div>\n    </mat-accordion>\n  </mat-expansion-panel>\n</mat-accordion>\n<h4 class=\"text-color padding-left\" *ngIf=\"(notificationSigned$ | async)?.length === 0\">No signed notificaitions</h4>","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { FormControl } from \"@angular/forms\"\nimport { Store, Select } from '@ngxs/store'\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { NotificationState } from '../../../state/notification/notification.state'\nimport { SetNotification } from '../../../state/notification/notification-state.actions'\n\nimport { PicsComponent } from '../../pics/pics.component'\n\n@Component({\n  selector: 'app-notification-signed',\n  templateUrl: './notification-signed.component.html',\n  styleUrls: ['./notification-signed.component.scss']\n})\nexport class NotificationSignedComponent {\n\n  @Output() save = new EventEmitter<any>()\n  @Output() pdf = new EventEmitter<any>()\n  @Output() pic = new EventEmitter<any>()\n\n  @Select(NotificationState.notificationSigned) notificationSigned$: Observable<string>\n\n  public msgSigned = new FormControl([''])\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet,\n    private idbCrudService: IdbCrudService) {}\n\n  openPdf(notification) {\n    this.store.dispatch(new SetNotification(notification))\n    this.pdf.emit()\n  }\n\n}\n\n","import { Comment } from './comment.model'\n\nexport class SetComments {\n  static type = '[CommentStateModel] SetComments'\n  constructor(public comments: Comment[]) {}\n}\n\nexport class SetComment {\n  static type = '[CommentStateModel] SetComment'\n  constructor(public comment: Comment) {}\n}\n\nexport class SetText {\n  static type = '[CommentStateModel] SetText'\n  constructor(public text: string) {}\n}\n\nexport class SetLabel {\n  static type = '[CommentStateModel] SetLabel'\n  constructor(public label: string) {}\n}\n\nexport class SetTypeFilter {\n  static type = '[CommentStateModel] SetTypeFilter'\n  constructor(public type: string) {}\n}\n\nexport class ResetTypeComments {\n  static type = '[CommentStateModel] ResetTypeComments'\n  constructor(public type: string) {}\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport { Formloco } from '../app/state/app.state'\n\nexport const environment = {\n  production: false,\n\n  kioske: true,\n  designUrl: 'http://localhost:4201/kioske/true',\n\n  // kioske: false,\n  // designUrl: 'http://localhost:4201',\n  \n  homeUrl: 'http://localhost:4200',\n  // designUrl: 'http://localhost:4201',\n  // apiUrl: 'http://localhost:9001/api/',\n  // authUrl: 'http://localhost:9000/auth/',\n  // formUrl: 'http://localhost:9002/form/',\n  // emailUrl: 'http://localhost:9003/email/',\n  // assetUrl: 'http://localhost:9005/asset/',\n  // notificationUrl: 'http://localhost:9004/',\n\n  // router re-directs, message comes from email link\n  signinUrl: 'http://localhost:4200/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl: 'http://localhost:4200/O451fd2702f54a00b1007f6e80b32e45/',\n  messageUrl: 'http://localhost:4200/message/',\n  \n\n  // design is an external app\n  // designUrl: Formloco.designUrl,\n\n  // kioske links\n  linkedinUrl: Formloco.linkedinUrl,\n  githubUrl: Formloco.githubUrl,\n  \n  apiUrl: Formloco.apiUrl,\n  authUrl: Formloco.authUrl,\n  formUrl: Formloco.formUrl,\n  emailUrl: Formloco.emailUrl,\n  assetUrl: Formloco.assetUrl,\n  notificationUrl: Formloco.notificationUrl,\n  \n  tenant: { email: Formloco.email, tenant_id: Formloco.tenant },\n  logo: Formloco.logo,\n  version: Formloco.version,\n  idbName: Formloco.idbName,\n  pin: Formloco.pin\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core'\nimport { openDB, deleteDB } from 'idb'\nimport { Observable, from } from 'rxjs'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdbPersistenceService {\n\n  private idb;\n  idbName = environment.idbName\n\n  async connect(): Promise<void> {\n    this.idb = await openDB(this.idbName, 1, {\n      upgrade(db) {\n        db.createObjectStore('prefs', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('form', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('pics', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('voice', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('data', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('lists', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('workers', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('supervisors', { keyPath: 'id', autoIncrement: true })\n      }\n    })\n\n    // this.idb = await deleteDB(this.idbName)\n  }\n\n  read(storeName: string, key): Observable<any> {\n    return from(this.idb.get(storeName, key))\n  }\n\n  readAll(storeName: string): Observable<any> {\n    return from(this.idb.getAll(storeName))\n  }\n\n  add(storeName: string, item: any): Observable<any> {\n    return from(this.idb.add(storeName, item))\n  }\n  \n  // update, create for auto-increment store\n  put(storeName: string, item: any): Observable<any> {\n    return from(this.idb.put(storeName, item))\n  }\n\n  delete(storeName: string, key: any): Observable<any> {\n    return from(this.idb.delete(storeName, key))\n  }\n\n  deleteDb(): Observable<any> {\n    return from(this.idb.delete(this.idbName))\n  }\n\n  clear(storeName: string): Observable<any> {\n    return from(this.idb.clear(storeName))\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core'\n\nimport * as _moment from 'moment'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { ApiService } from \"../../../service/api.service\"\nimport { AppService } from \"../../../service/app.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { AutoCompleteService } from \"../../../service/auto-complete.service\"\n\nimport { MEANINGFUL_SITE_TOUR } from './state/meaningful-site-tour.model'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\n\nimport { SetPics } from '../../../state/device/device-state.actions'\n@Component({\n  selector: 'app-meaningful-site-tour',\n  templateUrl: './meaningful-site-tour.component.html',\n  styleUrls: ['./meaningful-site-tour.component.scss']\n})\nexport class MeaningfulSiteTourComponent implements OnInit {\n\n  pics\n  kioske\n  formData\n  formDataID\n  step = 0\n  isEdit = false\n  isOnline\n\n  headerForm: FormGroup\n  notesForm: FormGroup\n  todoForm: FormGroup\n\n  messageUrl = environment.messageUrl\n\n  MEANINGFUL_SITE_TOUR = MEANINGFUL_SITE_TOUR\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private idbCrudService: IdbCrudService,\n    private autoCompleteService: AutoCompleteService) {\n    this.headerForm = this.formBuilder.group({\n      Date: [null, Validators.required],\n      Name: [null, Validators.required],\n      Location: [],\n    })\n    this.todoForm = this.formBuilder.group({\n      SiteOrientation: [],\n      DailySafetyMeeting: [],\n      SiteTour: [],\n      SiteTourWithWorker: [],\n      ReviewDiscuss: [],\n      PositiveInterventionRecognition: [],\n      EngageWithContractors: [],\n      HousekeepingInspection: [],\n      CompleteBBO: [],\n      OpenTeamDiscussion: [],\n      SafetyAlert: [],\n      ProvideFeedback: [],\n      FormalAuditInspection: []\n    })\n    this.notesForm = this.formBuilder.group({\n      PositiveObservations: [null, Validators.required],\n      ImprovementOpportunities: [null, Validators.required],\n      FeedbackSummary: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n    this.store.select(AuthState.formData).subscribe(formData => {\n      this.formData = formData\n      if (this.formData && formData[\"data\"]) {\n        this.isEdit = true\n        this.setFormData(formData[\"data\"])\n      }\n    })\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  showSnackBar(msg) {\n    this.snackBar.open(msg.message, 'Success', {\n      duration: 3000,\n      verticalPosition: 'bottom'\n    })\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date)\n      this.headerForm.controls['Name'].setValue(data.header.Name)\n      this.headerForm.controls['Location'].setValue(data.header.Location)\n      this.autoCompleteService.workersControl.setValue(data.header.Worker)\n      this.autoCompleteService.supervisorsControl.setValue(data.header.Supervisor)\n    }\n\n    if (data.todo) {\n      this.todoForm.controls['SiteOrientation'].setValue(data.todo.SiteOrientation)\n      this.todoForm.controls['DailySafetyMeeting'].setValue(data.todo.DailySafetyMeeting)\n      this.todoForm.controls['SiteTour'].setValue(data.todo.SiteTour)\n      this.todoForm.controls['SiteTourWithWorker'].setValue(data.todo.SiteTourWithWorker)\n      this.todoForm.controls['ReviewDiscuss'].setValue(data.todo.ReviewDiscuss)\n      this.todoForm.controls['PositiveInterventionRecognition'].setValue(data.todo.PositiveInterventionRecognition)\n      this.todoForm.controls['EngageWithContractors'].setValue(data.todo.EngageWithContractors)\n      this.todoForm.controls['HousekeepingInspection'].setValue(data.todo.HousekeepingInspection)\n      this.todoForm.controls['CompleteBBO'].setValue(data.todo.CompleteBBO)\n      this.todoForm.controls['OpenTeamDiscussion'].setValue(data.todo.OpenTeamDiscussion)\n      this.todoForm.controls['SafetyAlert'].setValue(data.todo.SafetyAlert)\n      this.todoForm.controls['ProvideFeedback'].setValue(data.todo.ProvideFeedback)\n      this.todoForm.controls['FormalAuditInspection'].setValue(data.todo.FormalAuditInspection)\n    }\n\n    if (data.notes) {\n      this.notesForm.controls['PositiveObservations'].setValue(data.notes.PositiveObservations)\n      this.notesForm.controls['ImprovementOpportunities'].setValue(data.notes.ImprovementOpportunities)\n      this.notesForm.controls['FeedbackSummary'].setValue(data.notes.FeedbackSummary)\n    }\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    let header = this.headerForm.value\n    let todo = this.todoForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      todo: todo,\n      notes: this.notesForm.value\n    }\n\n    this.formService.updateForm(form, this.formData, data).subscribe(_ => {\n      this.resetForm()\n    })\n\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n    \n    // const now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n    let userCreated = {\n      email: user.email,\n      date_created: this.appService.now\n    }\n\n    let header = this.headerForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let todo = this.todoForm.value\n\n    let data = {\n      header: header,\n      todo: todo,\n      notes: this.notesForm.value\n    }\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      date: this.appService.now,\n      name: form[\"name\"],\n      pics: this.store.selectSnapshot(DeviceState.pics)\n    }\n\n    if (!this.isOnline) {\n      let notificationObj = {\n        name: form[\"name\"],\n        worker: this.appService.getWorker(header.Worker),\n        supervisor: this.appService.getSupervisor(header.Supervisor),\n        description: 'Meaningful Site Tour ' + this.appService.now,\n        message: 'Meaningful site tour completed for ' + this.headerForm.controls['Name'].value,\n        subject: 'New Meaningful Site Tour from ' + this.headerForm.controls['Name'].value + ', ' + this.appService.now,\n        form_id: form[\"form_id\"],\n        data_id: null,\n        pdf: 'meaningful-site-tour'\n      }\n      obj['nofification'] = notificationObj\n      this.idbCrudService.put('data', obj)\n    }\n    else {\n      this.apiService.save(obj).subscribe(idObj => {\n        this.formDataID = idObj\n\n        const workers: any = this.store.selectSnapshot(AuthState.workers)\n        const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n\n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\"Notifications not setup, please add workers and supervisors.\", 'Attention', {\n            duration: 3000,\n            verticalPosition: 'bottom'\n          })\n        else {\n          const worker: any = this.appService.getWorker(header.Worker)\n          const supervisor: any = this.appService.getSupervisor(header.Supervisor)\n\n          let notificationObj = {\n            name: form[\"name\"],\n            worker: worker,\n            supervisor: supervisor,\n            description: 'Meaningful Site Tour ' + this.appService.now,\n            message: 'Meaningful site tour completed for ' + this.headerForm.controls['Name'].value,\n            subject: 'New Meaningful Site Tour from ' + this.headerForm.controls['Name'].value + ', ' + this.appService.now,\n            form_id: form[\"form_id\"],\n            data_id: this.formDataID,\n            pdf: 'meaningful-site-tour' + this.formDataID\n          }\n          this.appService.sendNotification(notificationObj)\n        }\n      })\n    }\n  }\n\n  resetForm() {\n    this.headerForm.reset()\n    this.notesForm.reset()\n    this.store.dispatch(new SetPics([]))\n    this.autoCompleteService.workersControl.setValue('')\n    this.autoCompleteService.supervisorsControl.setValue('')\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Conducting Your Tour\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-header [headerForm]=headerForm></app-meaningful-site-tour-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Things To Do/Check\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-todo [todoForm]=todoForm></app-meaningful-site-tour-todo>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Tour Etiquette Plan for Success\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-suggestions></app-meaningful-site-tour-suggestions>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Observations, Improvement & Feedback\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-notes [notesForm]=notesForm></app-meaningful-site-tour-notes>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!notesForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 4\" (opened)=\"setStep(4)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"text-color\"><b>Signs of a great site tour:</b></div>\n    <div class=\"text-color\">\n      <ul>\n        <li>You have included a member of the work crew in your tour, not just management or client</li>\n        <li>You made it personal - you know the crew by their names and hobbies</li>\n        <li>You know you have been respectful, sincere, honest and focused</li>\n        <li>You have walked the work site, met our people, observed operations, understood the hazards, risks and\n          controls</li>\n        <li>You have listened more than you have talked</li>\n        <li>You personally thanked someone or the crew for being a safety leader and recognized that person / crew\n          before you leave the site</li>\n        <li>You have a clear picture of the follow-up conversation with the executive group or peers following the\n          visit. Be prepared to talk at weekly or monthly meetings about your site visit</li>\n        <li>You have sent a “Thank-You” email or message and detailed your key findings, both positive take-aways and\n          opportunities for improvement</li>\n        <li>You plan to visit again to follow up</li>\n      </ul>\n    </div>\n    <br>\n    <div *ngIf=\"kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon class=\"icon-169px text-color\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"!isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!headerForm.valid && !notesForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"headerForm.valid && notesForm.valid\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">\n        fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"headerForm.valid && notesForm.valid\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">\n        fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-quill-run',\n  templateUrl: './quill-run.component.html',\n  styleUrls: ['./quill-run.component.scss']\n})\nexport class QuillRunComponent {\n\n  @Input() index;\n  \n  content;\n  quillConfig = {\n    toolbar: false,\n    theme: 'bubble'\n  };\n\n  constructor(public appService: AppService) { }\n\n}\n","<quill-view-html [content]=\"appService.detailArray[index].html\" theme=\"snow\"></quill-view-html>\n","import { Component, OnInit, Input } from '@angular/core'\n\nimport { FormControl, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-gps-run',\n  templateUrl: './gps-run.component.html',\n  styleUrls: ['./gps-run.component.scss']\n})\nexport class GpsRunComponent implements OnInit {\n\n  @Input() index\n  @Input() runForm\n\n  lat\n  long\n  isPosition = true\n\n  constructor() {}\n\n  ngOnInit() {\n    this.runForm.addControl('Latitude', new FormControl(''))\n    this.runForm.addControl('Longitude', new FormControl(''))  \n  }\n\n}\n","<div fxLayout=\"row\" class=\"text-color control-padding\" fxLayoutGap=\"20px\" fxFlexAlign=\"center center\">\n  <div>Latitude: </div>\n  <div>Longitude: </div>\n</div>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ApiService } from \"../../../service/api.service\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { FormControl, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-select-run',\n  templateUrl: './select-run.component.html',\n  styleUrls: ['./select-run.component.scss']\n})\nexport class SelectRunComponent implements OnInit {\n\n  multi: boolean\n  data\n  lists\n\n  @Input() index\n  @Input() runForm\n\n  constructor(\n    public appService: AppService,\n    private authService: AuthService,\n    private apiService: ApiService,\n    private idbCrudService: IdbCrudService) { }\n\n  ngOnInit() {\n    // if (this.appService.detailArray[this.index].list !== undefined) {\n    //  this.getListsCloud()\n    // }\n\n    this.multi = this.appService.detailArray[this.index].multiple\n    if (this.appService.detailArray[this.index].required)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n        .formControlName, new FormControl(null, Validators.required))\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index]\n        .formControlName, new FormControl(''))\n  }\n\n  getListsCloud() {\n    let obj = ({\n      form_id: this.appService.detailArray[this.index].list.form_id,\n      tenant_id: this.appService.detailArray[this.index].list.tenantID\n    })\n    this.apiService.getData(obj).subscribe(data => {\n      this.data = data\n      if (this.data.length === 0) this.appService.detailArray[this.index].selectArray = []\n      this.appService.detailArray[this.index].selectArray = this.data\n    })\n  }\n\n}\n\n","<div [formGroup]=\"runForm\" class=\"control-padding\" fxFlex>\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex>\n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <span *ngIf=\"multi\">\n      <mat-select multiple formControlName=\"{{appService.detailArray[index].formControlName}}\" [required]=\"appService.detailArray[index].required\">\n        <mat-option *ngFor=\"let select of appService.detailArray[index].selectArray\" [value]=\"select.value\">\n          {{select.value}}\n        </mat-option>\n      </mat-select>\n    </span>\n    <span *ngIf=\"!multi\">\n      <mat-select formControlName=\"{{appService.detailArray[index].formControlName}}\" [required]=\"appService.detailArray[index].required\">\n        <mat-option *ngFor=\"let select of appService.detailArray[index].selectArray\" [value]=\"select.value\">\n          {{select.value}}\n        </mat-option>\n      </mat-select>\n    </span>\n    <mat-error>\n      {{appService.detailArray[index].error}}\n    </mat-error>\n  </mat-form-field>\n</div>","<div class=\"container-padding\">\n  <form fxLayout=\"column\" fxLayoutGap=\"5px\" [formGroup]=\"emailForm\">\n    <mat-form-field fxFlex>\n      <mat-label>Enter Name</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\" placeholder=\"Enter Name\" required>\n      <mat-error>You must enter a name</mat-error>\n    </mat-form-field>\n    <mat-form-field fxFlex>\n      <mat-label>Enter Email</mat-label>\n      <input matInput type=\"text\" formControlName=\"email\" placeholder=\"Enter Email\" required>\n      <mat-error>You must enter a valid email</mat-error>\n    </mat-form-field>\n    <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n      <mat-checkbox formControlName=\"worker\" color=\"primary\">Worker</mat-checkbox>\n      <mat-checkbox formControlName=\"supervisor\" color=\"primary\">Supervisor</mat-checkbox>\n    </div>\n    <br>\n    <button *ngIf=\"!(kioske$ | async)\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=\"!emailForm.valid\" runForm.type=\"submit\">\n      Add Email to List\n    </button>\n    <button *ngIf=\"(kioske$ | async)\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=\"true\" runForm.type=\"submit\">\n      Add Email to List\n    </button>\n  </form>\n  <br>\n  <div>\n    <table mat-table [dataSource]=\"appService.dataSource\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let element;\">\n          <span *ngIf=\"element.enabled\">\n            <mat-icon class=\"material-icons-outlined\" color=\"primary\">check_circle</mat-icon>\n          </span>\n          <span *ngIf=\"element.enabled === false\">\n            <mat-icon class=\"material-icons-outlined\" color=\"warn\">cancel</mat-icon>\n          </span>\n          <span *ngIf=\"element.enabled === null\">\n            <mat-icon class=\"material-icons-outlined\">do_not_disturb_on</mat-icon>\n          </span>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>Email</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let element;\">\n          {{element.email}}\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row (click)=\"edit(i)\" *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\nimport { Observable } from 'rxjs'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { EmailEditComponent } from '../email-edit/email-edit.component'\n\nimport { environment } from '../../../../environments/environment'\n\n@Component({\n  selector: 'app-email-list',\n  templateUrl: './email-list.component.html',\n  styleUrls: ['./email-list.component.scss']\n})\nexport class EmailListComponent implements OnInit{\n\n  @Select(AuthState.lookupListName) lookupListName$: Observable<string>\n  emailForm: FormGroup\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  user\n  data\n  kioske\n  allData\n  selectedIdx\n  isSync = false\n  lookupListWorkers\n  lookupListSupervisors\n\n  displayedColumns: string[] = ['status', 'email']\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public authService: AuthService,\n    private formBuilder: FormBuilder,\n    private errorService: ErrorService) {\n    this.emailForm = this.formBuilder.group({\n      name: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      worker: [null],\n      supervisor: [null]\n    })\n  }\n\n  ngOnInit() {\n    const emailList:any = this.store.selectSnapshot(AuthState.emailList)\n    this.appService.dataSource.data = emailList\n  }\n\n  edit(idx) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {idx: idx}\n    this.dialog.open(EmailEditComponent, dialogConfig)\n  }\n\n  save() {\n    let obj = Object.assign(this.emailForm.value)\n    this.authService.create(obj).subscribe(data => {\n      this.data = data\n      if (this.data.rows.length == 0)\n        this.errorService.popSnackbar(this.data.msg)\n      else {\n        this.emailForm.reset()\n        Object.keys(this.emailForm.controls).forEach((key) => {\n          const control = this.emailForm.controls[key];\n          control.setErrors(null);\n      });\n        this.appService.dataSource.data = this.data.rows\n      }\n    })\n  }\n\n}\n\n","<div *ngIf=\"kioske\" class=\"padding\" fxLayout=\"row\">\n  <div class=\"text-color mat-h1\">\n    Sign In\n  </div>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-icon-button (click)=\"close()\">\n    <mat-icon class=\"text-color\">close</mat-icon>\n  </button>\n</div>\n<div fxLayout=\"column\">\n  <form class=\"container-padding\" [formGroup]=\"idForm\">\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label>Company Email</mat-label>\n        <input matInput placeholder=\"Company Email\" formControlName=\"email\" type=\"text\" required>\n        <mat-error>\n          Proper email is required!\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label>Password</mat-label>\n        <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" required>\n        <mat-error>\n          Password is required!\n        </mat-error>\n      </mat-form-field>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <mat-icon *ngIf=\"!idForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n        <mat-icon *ngIf=\"idForm.valid\" class=\"icon-169px-action\" (click)=\"signin()\">fingerprint</mat-icon>\n      </div>\n    </div>\n  </form>\n  <br>\n  <div>\n    <button (click)=\"getEmail()\" mat-stroked-button color=\"primary\" fxFlex>Reset Password</button>\n  </div>\n</div>","import { Component } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Router } from '@angular/router'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { environment } from '../../../../environments/environment'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage, SetUser, SetChildPageLabel, SetTenant, SetIsSignIn, SetKioske } from '../../../state/auth/auth-state.actions'\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\nimport { IdbPersistenceService } from '../../../service-idb/idb-persistence.service';\n@Component({\n  selector: 'app-identification',\n  templateUrl: './identification.component.html',\n  styleUrls: ['./identification.component.scss']\n})\nexport class IdentificationComponent {\n\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n\n  version = environment.version\n  logo = environment.logo\n  kioske = environment.kioske\n  tenant = environment.tenant\n\n  data\n  idForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService,\n    private idbCrudService: IdbCrudService,\n    private idbPersistenceService: IdbPersistenceService,) {\n    this.idForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required,]]\n    })\n  }\n\n  signin() {\n    if (this.kioske) {\n      // tenant running from formloco kioske signin\n      // endpoint runs against kioske user db\n      this.authService.getTenant(this.idForm.value).subscribe((tenant: any) => {\n        this.store.dispatch(new SetTenant({\n          email: this.idForm.value['email'],\n          tenant_id: tenant.tenant_id\n        }))\n        this.store.dispatch(new SetKioske(false))\n        this.appService.setIndexedDbUser(this.idForm.value['email'], tenant.tenant_id)\n        this.registerUser(tenant.tenant_id)\n      })\n    }\n    // tenant running from mobile environment\n    // endpoint runs against tenant user db\n    else {\n      this.appService.setIndexedDbUser(this.idForm.value['email'], this.tenant.tenant_id)\n\n      const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n      if (isOnline) this.registerUser(this.tenant.tenant_id)\n      else this.registerOfflineUser()\n    }\n  }\n\n  registerUser(tenant_id) {\n    this.authService.register(this.idForm.value).subscribe(_ => {\n      this.authService.user({ email: this.idForm.value['email'] }).subscribe((user: any) => {\n        this.store.dispatch(new SetUser(user.row))\n        this.appService.initializeUser(this.idForm.value['email'])\n\n        if (this.kioske) this.router.navigate(['forms/' + this.idForm.value['email'] + '/' + tenant_id])\n        else this.store.dispatch(new SetPage('home'))\n\n        this.store.dispatch(new SetIsSignIn(true))\n        this.store.dispatch(new SetIsDarkMode(true))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n      })\n    })\n  }\n\n  registerOfflineUser() {\n    this.appService.initializeOfflineUser()\n  }\n\n  getEmail() {\n    this.store.dispatch(new SetPage('send-password'))\n  }\n\n  upGradeIndexDB() {\n    this.idbPersistenceService.deleteDb()\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('kioske'))\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Choose a date</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"Client Name\" formControlName=\"Name\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Location</mat-label>\n    <input matInput placeholder=\"\" formControlName=\"Location\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field class=\"bot-pad full-width-field\">\n    <mat-label> First & Last Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter First Name & Last Name\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-hint>Worker Completing the Tour</mat-hint>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete #autoSupervisors=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n        required>\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <div class=\"text-color\">\n    <p class=\"text-color\"><b>10 Questions to Ask:</b></p>\n    <p class=\"text-color\">How does it work here?&nbsp;How does the day start?&nbsp;How are daily safety meetings\n      conducted?&nbsp;What is discussed?<br>\n      What are the top 3 things that Summit should focus on or fix?<br>\n      What are the main hazards to this operation or site/location and how well do we mitigate them?<br>\n      How would you describe Summit's safety culture to your coworkers/family/friends - would you encourage people to\n      work for Summit?<br>\n      Do you, your crew or site believe that Summit is fully committed to putting people's safety before profits?<br>\n      When was the last time you/we intervened at this site?<br>\n      How comfortable is everyone with intervention?<br>\n      What are you proud of at this site?<br>\n      Make it personal.<br>\n      Start conversation - How long with Summit? Family? Hobbies?<br>\n      Do you believe you have support to STOP work or refuse unsafe work?<br>\n      Is there a short service worker program in place?<br>\n      Does it work?<br>\n      Competency process?</p>\n  </div>\n</form>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\n\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-meaningful-site-tour-header',\n  templateUrl: './meaningful-site-tour-header.component.html',\n  styleUrls: ['./meaningful-site-tour-header.component.scss']\n})\nexport class MeaningfulSiteTourHeaderComponent implements OnInit {\n\n  @Input() headerForm\n\n  header\n  lookupLists\n\n  customYearValues = [2025, 2024, 2023, 2022, 2021, 2016, 2008, 2004, 2000, 1996];\n  customDayShortNames = ['s\\u00f8n', 'man', 'tir', 'ons', 'tor', 'fre', 'l\\u00f8r'];\n  customPickerOptions: any;\n  \n  constructor(\n    public autoCompleteService: AutoCompleteService) { \n     }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n  }\n\n}\n","<mat-toolbar>\n  <mat-toolbar-row>\n    <div fxLayoutAlign=\"space-around center\">\n      <mat-icon color=\"primary\" class=\"material-icons-outlined\">dynamic_form</mat-icon>\n      <div class=\"primary\">&nbsp;Forms</div>\n    </div>\n    <span class=\"toolbar-spacer\"></span>\n    <div class=\"text-color\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"15px\">\n      <a *ngIf=\"(isOnline$ | async)\" mat-icon-button (click)=\"openNotifications(0)\" color=\"primary\">\n        <mat-icon class=\"material-icons-outlined\" matBadgeColor=\"warn\" matBadge=\"{{notificationCount$ | async}}\">notifications</mat-icon>\n      </a>\n      <a mat-icon-button (click)=\"openProfile()\" color=\"primary\">\n        <mat-icon class=\"material-icons-outlined\">person</mat-icon>\n      </a>\n      <a *ngIf=\"kioske\" mat-icon-button color=\"primary\" href=\"{{homeUrl}}\">\n        <mat-icon class=\"material-icons-outlined\">home</mat-icon>\n      </a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"form-padding\" *ngFor=\"let formObj of (formsPublished$ | async)\">\n  <mat-card *ngIf=\"formObj.is_published\" class=\"hand\" (click)=selectForm(formObj)>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon text-color material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title class=\"text-color\">{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <div fxLayoutAlign=\"space-around center\">\n      <div *ngIf=\"(isOnline$ | async)\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"10px\">\n        <a mat-stroked-button color=\"accent\" href='{{designUrl}}'>\n          <mat-icon>design_services</mat-icon>&nbsp;Design\n        </a>\n        <a *ngIf=\"user?.admin\" mat-stroked-button (click)=\"signin()\" color=\"primary\">\n          <mat-icon class=\"material-icons-outlined\">admin_panel_settings</mat-icon>&nbsp;Admin\n        </a>\n      </div>\n    </div>\n    <span class=\"toolbar-spacer\"></span>\n    <img src=\"assets/parrot.svg\" height=\"28px\">&nbsp;<span class=\"mat-small text-color\">{{version}}</span>\n  </mat-toolbar>\n</div>","import { Component, Output, EventEmitter, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { AppService } from \"../../service/app.service\"\nimport { NotificationService } from '../../service/notification.service'\n\nimport { environment } from '../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\n\nimport { AuthState } from '../../state/auth/auth.state'\nimport { SetPage, SetSelectedForm, SetIsSignIn, SetChildPageLabel, SetFormData, SetChildPage, SetChildPageIcon } from '../../state/auth/auth-state.actions'\nimport { DeviceState } from '../../state/device/device.state'\nimport { Form } from '../../state/auth/auth-state.model'\n\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetNotificationTab, SetNotificationMyCount, SetNotificationOpen } from '../../state/notification/notification-state.actions'\n\nimport { IdbPersistenceService } from '../../service-idb/idb-persistence.service';\n\nimport { SignupComponent } from \"../admin/signup/signup.component\"\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  @Output() changeTheme = new EventEmitter()\n\n  @Select(AuthState.isSignIn) isSignIn$: Observable<boolean>\n  @Select(AuthState.formsPublished) formsPublished$: Observable<Form[]>\n  @Select(AuthState.childPageLabel) childPageLabel$: Observable<string>\n\n  @Select(DeviceState.isOnline) isOnline$: Observable<boolean>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n\n  @Select(NotificationState.notificationMyCount) notificationCount$: Observable<number>\n\n  user\n  form\n  prefs\n  tenant\n  checkform\n  notificationCount\n\n  kioske = environment.kioske\n  version = environment.version\n  signinUrl = environment.signinUrl\n  homeUrl = environment.homeUrl\n  designUrl = environment.designUrl\n  kioskeTenant = environment.tenant\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private bottomSheet: MatBottomSheet,\n    private idbPersistenceService: IdbPersistenceService,\n    private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.user = this.store.selectSnapshot(AuthState.user)\n    this.tenant = this.store.selectSnapshot(AuthState.tenant)\n\n    setInterval(() => {\n      if (this.user) {\n        this.notificationService.getMyNotificationCount(this.user.email).subscribe((notification: any) => {\n          if (notification.count == 0) this.store.dispatch(new SetNotificationMyCount(undefined))\n          else this.store.dispatch(new SetNotificationMyCount(notification.count))\n        })\n      }\n    }, 120000)\n  }\n\n  selectForm(form) {\n    this.store.dispatch(new SetFormData([]))\n    this.store.dispatch(new SetSelectedForm(form))\n    this.store.dispatch(new SetChildPage(null))\n    this.store.dispatch(new SetPage('form'))\n  }\n\n  goPIN() {\n    this.store.dispatch(new SetPage('pin'))\n  }\n\n  goAdmin() {\n    this.store.dispatch(new SetPage('pin'))\n  }\n\n  signin() {\n    this.store.dispatch(new SetPage('admin'))\n    this.store.dispatch(new SetChildPage('forms'))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n    this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n    this.store.dispatch(new SetIsSignIn(true))\n    this.appService.initializeAdminNotifications()\n  }\n\n  signup() {\n    this.bottomSheet.open(SignupComponent)\n  }\n\n  toggleTheme() {\n    this.changeTheme.emit()\n  }\n\n  openNotifications(tabIndex) {\n    if (tabIndex === 0) {\n      const user = this.store.selectSnapshot(AuthState.userIdb)\n      this.notificationService.getMyNotifications({ email: user.email }).subscribe((notifications: any) => {\n        let openNotifications: any = []\n        notifications.forEach(element => {\n          if (!element.email_signed) openNotifications.push(element)\n        })\n        this.store.dispatch(new SetNotificationOpen(openNotifications))\n      })\n    }\n    this.store.dispatch(new SetPage('notification'))\n    this.store.dispatch(new SetChildPageLabel('Notifications'))\n    this.store.dispatch(new SetNotificationTab(tabIndex))\n  }\n\n  openProfile() {\n    this.store.dispatch(new SetPage('profile'))\n  }\n\n  upGradeIndexDB() {\n    this.idbPersistenceService.deleteDb()\n  }\n\n}\n","<div class=\"responsive-container\">\n  <!-- purposely commented out - used to add list for each mobile form app -->\n  <!-- <div class=\"lookup-bnt\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-stroked-button (click)=\"isLookupOpen = !isLookupOpen\" cdkOverlayOrigin\n      #lookupTrigger=\"cdkOverlayOrigin\">\n      Create List\n    </button>\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"lookupTrigger\"\n      [cdkConnectedOverlayOpen]=\"isLookupOpen\" (backdropClick)=\"closeOverlay()\" [cdkConnectedOverlayHasBackdrop]=true\n      cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" cdkConnectedOverlayOffsetX\n      cdkConnectedOverlayOffsetY>\n      <form [formGroup]=\"lookupListForm\">\n        <div [ngStyle]=\"{'background-color': (background$ | async)}\" class=\"link-overlay\" fxLayout=\"column\">\n          <div>\n            <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n              <mat-label>List</mat-label>\n              <input matInput placeholder=\"Lookup List Name\" formControlName=\"lookupListName\" type=\"text\" required>\n              <mat-error>\n                List is required!\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"1rem\">\n            <button (click)=\"createLookuplist()\" mat-raised-button color=\"primary\" [disabled]=\"!lookupListForm.valid\">\n              Create List\n            </button>\n            <button mat-stroked-button color=\"primary\" (click)=\"closeOverlay()\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </form>\n    </ng-template>\n  </div> -->\n  <div fxLayout=\"row wrap\">\n    <mat-card (click)=run(name) class=\"custom hand\" *ngFor=\"let name of (lookupListNames$ | async)\">\n      <div class=\"action-label\" fxLayoutAlign=\"center\">{{name}}</div>\n      <div>\n        <mat-icon class=\"card-icon\">list</mat-icon>\n      </div>\n    </mat-card>\n  </div>\n</div>","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Validators, FormGroup, FormBuilder } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { ApiService } from \"../../../service/api.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetChildPage, SetChildPageLabel , SetLookupListName } from '../../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../../environments/environment'\n\n@Component({\n  selector: 'app-form-lists',\n  templateUrl: './form-lists.component.html',\n  styleUrls: ['./form-lists.component.scss']\n})\nexport class FormListsComponent {\n\n  @Select(AuthState.lookupListNames) lookupListNames$: Observable<any>\n  @Select(DeviceState.background) background$: Observable<string>\n\n  @Output() selectChild = new EventEmitter<any>()\n\n  token\n  lookupLists\n  isLookupOpen = false\n\n  lookupListForm: FormGroup\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private apiService: ApiService) {\n    this.lookupListForm = this.formBuilder.group({\n      lookupListName: ['', Validators.required]\n    })\n  }\n\n  createLookuplist() {\n    let form = this.appService.createList(this.lookupListForm.get('lookupListName').value)\n    this.formService.createForm(form).subscribe(res => {\n      this.closeOverlay()\n      this.lookupListForm.reset()\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n      this.apiService.getLists({tenant_id: tenant.tenant_id}).subscribe(lists => {\n        this.appService.lookupLists = lists\n      })\n    })\n  }\n\n  run(name) {\n    this.store.dispatch(new SetLookupListName(name))\n    this.store.dispatch(new SetChildPage('list'))\n    this.store.dispatch(new SetChildPageLabel('Form Lists'))\n    const lookupListArray = this.store.selectSnapshot(AuthState.lookupListData)\n    const lookupList = lookupListArray.find(list => list[\"name\"] == name)\n    \n    if (lookupList) this.appService.dataSource.data = lookupList[\"rows\"]\n    else this.appService.dataSource.data = []\n    this.appService.isListMenu = false\n  }\n\n  closeOverlay() {\n    this.isLookupOpen = false\n  }\n\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-toggle-run',\n  templateUrl: './toggle-run.component.html',\n  styleUrls: ['./toggle-run.component.scss']\n})\nexport class ToggleRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    this.appService.detailArray[this.index].toggleArray.forEach(element => {\n      if (element.required)\n        this.runForm.addControl(element.formControlName, \n            new FormControl(false, Validators.required));\n      else\n        this.runForm.addControl(element.formControlName, new FormControl(false));\n    });\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding\" fxLayoutGap=\"10px\">\n  <div fxLayout=\"row\">\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <mat-slide-toggle *ngFor=\"let toggle of appService.detailArray[index].toggleArray\"\n      formControlName=\"{{toggle.formControlName}}\"\n      [labelPosition]=\"toggle.labelPosition\" \n      [required]=\"toggle.required\">\n      {{toggle.label}}\n    </mat-slide-toggle>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuccessService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  popSnackbar(message) {\n    this.snackBar.open(message, \"Success:\", {duration: 3000})\n  }\n\n}\n","<div class=\"padding\" fxLayoutAlign=\"center space-between\" fxLayout=\"row\">\n  <div fxLayoutAlign=\"start center\" class=\"text-color\">Reset Password</div>\n  <span class=\"toolbar-spacer\"></span>\n  <div>\n    <button (click)=close() mat-icon-button>\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </div>\n</div>\n<div fxLayout=\"column\">\n  <form class=\"container-padding\" [formGroup]=\"emailForm\">\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"assets/logo.svg\"></div>\n      </div>\n      <br>\n      <h3 class=\"text-color text-center\">Send Password Reset Email</h3>\n      <br>\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>Company Email</mat-label>\n        <input matInput placeholder=\"Company Email\" formControlName=\"email\" type=\"text\" required>\n        <mat-error>\n          Proper email is required!\n        </mat-error>\n      </mat-form-field>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <mat-icon *ngIf=\"!emailForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n        <mat-icon *ngIf=\"emailForm.valid\" class=\"icon-169px-action\" (click)=\"forgotPasswordEmail()\">fingerprint\n        </mat-icon>\n      </div>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { SetPage } from '../../../state/auth/auth-state.actions'\n@Component({\n  selector: 'app-send-password',\n  templateUrl: './send-password.component.html',\n  styleUrls: ['./send-password.component.scss']\n})\nexport class SendPasswordComponent {\n\n  @Select(AuthState.childPage) childPage$: Observable<string>\n\n  emailForm: FormGroup\n\n  redirectForgotPasswordUrl = environment.redirectForgotPasswordUrl\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private emailService: EmailService,\n    private errorService: ErrorService,\n    private successService: SuccessService) { \n    this.emailForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email]]\n    })\n  }\n\n  forgotPasswordEmail() {\n    let obj = {\n      email: this.emailForm.value['email'],\n      url: this.redirectForgotPasswordUrl\n    }\n    if (obj.email !== null)\n    this.emailService.forgotPassword(obj).subscribe(() => {\n      this.successService.popSnackbar('Email Sent.')\n      this.store.dispatch(new SetPage('identify'))\n    })\n    else this.errorService.popSnackbar('Please Enter a Valid Email.')\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('identify'))\n  }\n\n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\nimport { DeviceState } from '../../../../state/device/device.state'\n\nimport { SetSelectedVoiceFieldLabel } from '../../../../state/auth/auth-state.actions'\nimport { SetTranscription } from '../../../../state/device/device-state.actions'\nimport { VoiceComponent } from '../../../voice/voice.component'\nimport { AppService } from \"../../../../service/app.service\"\n\n@Component({\n  selector: 'app-meaningful-site-tour-notes',\n  templateUrl: './meaningful-site-tour-notes.component.html',\n  styleUrls: ['./meaningful-site-tour-notes.component.scss']\n})\nexport class MeaningfulSiteTourNotesComponent {\n\n  @Input() notesForm\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.notesForm, formField, title)\n  }\n}\n","<form [formGroup]=\"notesForm\">\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Positive Obervations</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('PositiveObservations','Positive Obervations')\" mat-mini-fab color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"PositiveObservations\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <br>\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Opportunities for Improvement</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('ImprovementOpportunities','Opportunities for Improvement')\" mat-mini-fab\n          color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"ImprovementOpportunities\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <br>\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Summary & Feedback</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('FeedbackSummary','Summary & Feedback')\" mat-mini-fab color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"FeedbackSummary\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n</form>","/**\n * adminstration of the forms is run from the json model locally\n * to add a form \n * users consume forms from indexedDB\n */\nimport { Component } from '@angular/core'\nimport { Observable } from 'rxjs'\n\nimport * as _ from 'lodash'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { ErrorService } from '../../../service/error.service'\nimport { FormService } from \"../../../service/form.service\"\nimport { SuccessService } from \"../../../service/success.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { LISTS } from \"../../../model/forms\"\nimport { Form } from '../../../state/auth/auth-state.model'\n\n// custom forms\nimport { VEHICLE_INSPECTION } from '../../forms/vehicle-inspection/state/vehicle-inspection-state.model'\nimport { MEANINGFUL_SITE_TOUR } from '../../forms/meaningful-site-tour/state/meaningful-site-tour.model'\nimport { WORKSITE_SAFETY_INSPECTION } from '../../forms/worksite-safety-inspection/state/worksite-safety-inspection-state.model'\nimport { SPOT_CHECK_SAFETY } from '../../forms/spot-check-safety/state/spot-check-safety.model'\n\nimport { SetSelectedForm, SetLookupListNames } from '../../../state/auth/auth-state.actions'\nimport { SetPage, SetChildPageLabel, SetForms, SetFormsPublished } from '../../../state/auth/auth-state.actions'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss']\n})\nexport class FormsComponent {\n\n  @Select(AuthState.forms) forms$: Observable<Form[]>\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  form: Form\n  forms = []\n  lists: any = LISTS\n\n  constructor(\n    private store: Store,\n    private appService: AppService,\n    private formService: FormService,\n    private errorService: ErrorService,\n    private idbCrudService: IdbCrudService,\n    private successService: SuccessService) {\n    this.forms.push(VEHICLE_INSPECTION)\n    // this.forms.push(MEANINGFUL_SITE_TOUR)\n    this.forms.push(WORKSITE_SAFETY_INSPECTION)\n    this.forms.push(SPOT_CHECK_SAFETY)\n  }\n\n  selectForm(form) {\n    let formObjClone = _.cloneDeep(form)\n    if (!form.type) this.errorService.popSnackbar('Form is not Configured')\n    else if (form.type === 'custom') {\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n      formObjClone[\"user_created\"] = { email: tenant.email, date_created: this.appService.now }\n\n      // forms are taken from local json and registered to the database\n      this.formService.registerForm(formObjClone).subscribe(_ => {\n        this.runForm(formObjClone)\n      })\n    }\n    else {\n      this.appService.detailArray = form.details\n      this.runForm(form)\n    }\n  }\n\n  runForm(form) {\n    this.store.dispatch(new SetSelectedForm(form))\n    this.store.dispatch(new SetChildPageLabel(form.name))\n    this.store.dispatch(new SetPage('form'))\n  }\n\n  selectSharedLists() {\n    this.store.dispatch(new SetLookupListNames(this.lists))\n    this.appService.isListMenu = true\n  }\n\n  publish(formObj, event) {\n    let formObjClone = _.cloneDeep(formObj)\n\n    const accessDate = this.appService.now\n    formObjClone['is_published'] = event.checked\n    formObjClone['date_last_access'] = accessDate\n\n    let obj = {\n      form_id: formObj.form_id,\n      formObj: formObjClone,\n      is_deployed: true,\n      is_published: event.checked,\n      date_last_accessed: accessDate\n    }\n    this.formService.statusToggle(obj).subscribe((response: any) => {\n      this.updateIdb(formObjClone, response)\n      this.idbCrudService.readAll('form').subscribe((forms: any) => {\n        const formsPublished = forms.filter(form => form.is_published === true)\n        this.store.dispatch(new SetFormsPublished(formsPublished))\n      })\n    })\n  }\n\n  setPermission(formObj, event) {\n    let formObjClone = _.cloneDeep(formObj)\n\n    const accessDate = this.appService.now\n    formObjClone['is_manager'] = event.checked\n    formObjClone['date_last_access'] = accessDate\n\n    let obj = {\n      formObj: formObjClone,\n      is_manager: event.checked,\n      form_id: formObj.form_id\n    }\n    this.formService.setPermissions(obj).subscribe((response: any) => {\n      this.updateIdb(formObjClone, response)\n    })\n  }\n\n  archive(formObj) {\n    let formObjClone = _.cloneDeep(formObj)\n    formObjClone['date_archived'] = this.appService.now\n    formObjClone['user_archived'] = this.store.selectSnapshot(AuthState.user)\n    formObjClone['is_deployed'] = false\n\n    this.formService.update(formObjClone).subscribe((response: any) => {\n      this.updateIdb(formObjClone, response)\n    })\n  }\n\n  updateIdb(formObjClone, response) {\n    this.idbCrudService.put('form', formObjClone).subscribe(_ => {\n      this.idbCrudService.readAll('form').subscribe((forms: any) => {\n        const formsDeployed = forms.filter(form => !form.date_archived)\n        this.store.dispatch(new SetForms(formsDeployed))\n      })\n      this.successService.popSnackbar(response.message)\n    })\n  }\n\n}","<div class=\"form-padding\" *ngFor=\"let formObj of (forms$ | async)\">\n  <mat-card class=\"hand\">\n    <mat-card-header (click)=selectForm(formObj)>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon32 material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n    <div class=\"publish\" fxLayoutAlign=\"space-between center\">\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"25px\">\n        <div>\n          <mat-slide-toggle (change)=\"publish(formObj, $event)\" color=\"primary\" [checked]=formObj.is_published\n            [disabled]=\"kioske$ | async\">\n          </mat-slide-toggle>&nbsp;&nbsp;\n          <span class=\"action-label-pub\" *ngIf=\"formObj.is_published\">Published</span>\n          <span class=\"action-label-pub\" *ngIf=\"!formObj.is_published\">Unpublished</span>\n        </div>\n        <div>\n          <mat-slide-toggle (change)=\"setPermission(formObj,$event)\" color=\"primary\" [checked]=formObj.is_manager\n            [disabled]=\"kioske$ | async\">\n          </mat-slide-toggle>&nbsp;&nbsp;\n          <span class=\"action-label-pub\" *ngIf=\"formObj.is_manager\">Manager</span>\n          <span class=\"action-label-pub\" *ngIf=\"!formObj.is_manager\">Everyone</span>\n        </div>\n      </div>\n      <span class=\"toolbar-spacer\"></span>\n      <div *ngIf=\"formObj.type === 'dynamic' && !formObj.is_published\">\n        <button (click)=\"archive(formObj)\" mat-icon-button>\n          <mat-icon color=\"warn\" class=\"material-icons-outlined\">delete</mat-icon>\n        </button>\n      </div>\n    </div>\n  </mat-card>\n</div>","<mat-accordion multi [togglePosition]=\"'before'\" *ngFor=\"let notification of (notificationOpen$ | async);  index as i\">\n  <mat-expansion-panel (click)=\"setNotification(notification)\" class=\"accordion-padding\" [expanded]=\"i == (notificationIdx$ | async)\">\n    <mat-expansion-panel-header (click)=\"setRead(notification)\">\n      <mat-panel-title fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n        <mat-icon *ngIf=\"!notification.read\" class=\"material-icons-outlined icon-orange\">mark_as_unread</mat-icon>\n        <mat-icon *ngIf=\"notification.read\" class=\"material-icons-outlined\">mail</mat-icon>\n        <div>{{notification.description}}</div>\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"form-padding\" *ngFor=\"let comment of notification.comment\">\n      <mat-card class=\"custom hand\">\n        <b>{{comment.from}} - {{comment.date | date: 'short'}}</b>\n        <br>{{comment.message}}\n      </mat-card>\n    </div>\n    <br>\n    <form class=\"container-padding\" [formGroup]=\"messageForm\">\n      <div>\n        <mat-form-field class=\"text-color\" fxFlex>\n          <mat-label>Send Message to {{sendTo}}</mat-label>\n          <input matInput placeholder=\"New Message\" formControlName=\"message\" type=\"text\">\n        </mat-form-field>\n      </div>\n    </form>\n    <div fxLayoutAlign=\"space-between center\">\n      <div>\n        <button *ngIf=\"!kioske\" color=\"primary\" mat-mini-fab [disabled]=\"!messageForm.valid\">\n          <mat-icon class=\"material-icons-outlined\" (click)=\"sendMessage(i)\">send</mat-icon>\n        </button>\n        <button *ngIf=\"kioske\" color=\"primary\" mat-mini-fab [disabled]=\"kioske$ | async\">\n          <mat-icon class=\"material-icons-outlined\">send</mat-icon>\n        </button>\n      </div>\n      <div fxLayoutGap=\"30px\">\n        <button color=\"primary\" mat-mini-fab>\n          <mat-icon class=\"material-icons-outlined\" (click)=\"openPdf(notification)\">picture_as_pdf</mat-icon>\n        </button>\n        <button color=\"primary\" mat-mini-fab>\n          <mat-icon class=\"material-icons-outlined\" (click)=\"openForm(notification, i)\">dynamic_form</mat-icon>\n        </button>\n        <button *ngIf=\"notification.email_from !== user?.email\" color=\"primary\" mat-mini-fab>\n          <mat-icon class=\"material-icons-outlined\" (click)=\"openSign(notification)\">border_color</mat-icon>\n        </button>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n<h4 class=\"text-color padding-left\" *ngIf=\"(notificationOpen$ | async)?.length === 0\">No open notifications</h4>","import { Component, Output, EventEmitter, OnInit } from '@angular/core'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport * as _ from 'lodash'\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { NotificationActionComponent } from '../notification-action/notification-action.component'\n\nimport { ApiService } from \"../../../service/api.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { NotificationService } from \"../../../service/notification.service\"\n\nimport { AuthState } from \"../../../state/auth/auth.state\"\nimport { SetPics } from '../../../state/device/device-state.actions'\nimport { SetSelectedForm, SetPage, SetFormData, SetChildPage } from '../../../state/auth/auth-state.actions'\nimport { NotificationState } from '../../../state/notification/notification.state'\nimport { SetNotification, SetNotificationIdx } from '../../../state/notification/notification-state.actions'\nimport { SetIsWorksiteSafetyHeaderValid } from '../../forms/worksite-safety-inspection/state/worksite-safety-inspection-state.actions'\n\nimport { PicsComponent } from '../../pics/pics.component'\nimport { CameraComponent } from '../../camera/camera.component'\n\n@Component({\n  selector: 'app-notification-open',\n  templateUrl: './notification-open.component.html',\n  styleUrls: ['./notification-open.component.scss']\n})\nexport class NotificationOpenComponent implements OnInit {\n\n  @Output() pdf = new EventEmitter<any>()\n\n  @Select(NotificationState.notificationOpen) notificationOpen$: Observable<string>\n  @Select(NotificationState.notificationIdx) notificationIdx$: Observable<number>\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  kioske = environment.kioske\n  messageUrl = environment.messageUrl\n\n  data\n  user\n  sendTo\n  formData\n  picArray = []\n  customExpandedHeight: string = '80px'\n\n  messageForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private emailService: EmailService,\n    private bottomSheet: MatBottomSheet,\n    private idbCrudService: IdbCrudService,\n    private notificationService: NotificationService) {\n    this.messageForm = this.fb.group({\n      message: [{ value: null, disabled: this.kioske }, [Validators.required]]\n    })\n  }\n\n  ngOnInit() {\n    this.user = this.store.selectSnapshot(AuthState.user)\n  }\n\n  sendMessage(idx) {\n    const notifications = this.store.selectSnapshot(NotificationState.notificationOpen)\n\n    const notification = notifications[idx]\n    const user = this.store.selectSnapshot(AuthState.user)\n\n    const subject = notification.form_name + ' form message from ' + user.name + 'date:' + new Date()\n\n    const message = this.messageForm.get('message').value\n\n    this.messageForm.reset()\n    let messageObj = {\n      notificationID: notification.id,\n      date: new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }),\n      email_to: notification.email_from,\n      email_from: user.email,\n      subject: subject,\n      message: message\n    }\n\n    this.notificationService.updateNotificationMessage(messageObj).subscribe((response: any) => {\n      this.snackBar.open(\"Message Submitted!\", 'Success', {\n        duration: 3000,\n        verticalPosition: 'bottom'\n      })\n\n      const obj = {\n        toName: response.data.toName,\n        messageID: response.data.notificationID,\n        url: this.messageUrl,\n        subject: subject,\n        emailTo: notification.email_from,\n        emailFrom: user.email\n      }\n      this.emailService.sendNotificationEmail(obj).subscribe(() => { })\n    })\n  }\n\n  setNotification(notification) {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const workers = this.store.selectSnapshot(AuthState.workers)\n    const worker = workers.find(worker => worker.email == notification.email_from)\n    const supervisors = this.store.selectSnapshot(AuthState.supervisors)\n    const supervisor = supervisors.find(supervisor => supervisor.email == notification.email_to)\n\n    if (worker.email !== user.email) this.sendTo = worker.name\n    if (supervisor.email !== user.email) this.sendTo = supervisor.name\n\n    this.idbCrudService.readAll('form').subscribe((forms: any) => {\n      const form = forms.find(f => f.form_id == notification.form_id)\n      this.store.dispatch(new SetSelectedForm(form))\n      // this.idbCrudService.readAll('pics').subscribe((pics:any) => {\n      //   if (pics[0].length > 0) {\n      //     this.picArray = pics[0].find(p => p.id == notification.pdf)\n      //     this.store.dispatch(new SetPics(this.picArray[\"pics\"]))\n      //   }\n      // })\n    })\n  }\n\n  openSign(notification) {\n    this.store.dispatch(new SetNotification(notification))\n    this.apiService.getFormData(notification.form_id, notification.data_id).subscribe(form => {\n      const obj = {\n        form: form,\n        notification: notification\n      }\n      const dialogConfig = new MatDialogConfig()\n      dialogConfig.height = '100%'\n      dialogConfig.width = '100%'\n      dialogConfig.maxWidth = '100vw',\n      dialogConfig.maxHeight = '100vh',\n      dialogConfig.data = obj\n      this.dialog.open(NotificationActionComponent, dialogConfig)\n    })\n  }\n\n  openPdf(notification) {\n    this.store.dispatch(new SetNotification(notification))\n    this.pdf.emit()\n  }\n\n  openForm(notification, idx) {\n    this.store.dispatch(new SetNotification(notification))\n    this.store.dispatch(new SetNotificationIdx(idx))\n    const page = this.store.selectSnapshot(AuthState.page)\n    const childPage = this.store.selectSnapshot(AuthState.childPage)\n    this.apiService.getFormData(notification.form_id, notification.data_id).subscribe(data => {\n      const selectedForm: any = this.store.selectSnapshot(AuthState.selectedForm)\n      this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false))\n      this.store.dispatch(new SetSelectedForm(selectedForm))\n      this.store.dispatch(new SetFormData(data))\n      this.store.dispatch(new SetChildPage('notification'))\n      this.store.dispatch(new SetPage('form'))\n    })\n  }\n\n  openImage() {\n    this.bottomSheet.open(PicsComponent)\n  }\n\n  snapShot() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n      dialogConfig.maxHeight = '100vh',\n      dialogConfig.data = this.store.selectSnapshot(AuthState.selectedForm)\n    this.dialog.open(CameraComponent, dialogConfig)\n  }\n\n  setRead(notification) {\n    const user = this.store.selectSnapshot(AuthState.user)\n    if (notification.email_from !== user.email) {\n      let obj = {\n        notificationID: notification.id,\n        email_from: user.email\n      }\n      this.notificationService.updateNotificationRead(obj).subscribe(() => { })\n    }\n  }\n\n}\n","export class SetLat {\n  static type = '[Device] SetLat'\n  constructor(public lat: number) {}\n}\n\nexport class SetLong {\n  static type = '[Device] SetLong'\n  constructor(public long: number) {}\n}\n\nexport class SetBackground {\n  static type = '[Device] SetBackground'\n  constructor(public background: string) {}\n}\n\nexport class SetScreenSize {\n  static type = '[Device] SetScreenSize'\n  constructor(public screenSize: string) {}\n}\n\nexport class SetScreenWidth {\n  static type = '[Device] SetScreenWidth'\n  constructor(public screenWidth: string) {}\n}\n\nexport class SetIsIOS {\n  static type = '[Device] SetIsIOS'\n  constructor(public isIOS: boolean) {}\n}\n\nexport class SetIsSafari {\n  static type = '[Device] SetIsSafari'\n  constructor(public isSafari: boolean) {}\n}\n\nexport class SetPics {\n  static type = '[Device] SetPics'\n  constructor(public pics: []) {}\n}\n\nexport class SetIsDarkMode {\n  static type = '[Device] SetIsDarkMode'\n  constructor(public isDarkMode: boolean) {}\n}\n\nexport class SetVoice {\n  static type = '[Device] SetVoice'\n  constructor(public voice: any[]) {}\n}\n\nexport class SetTranscription {\n  static type = '[Device] SetTranscription'\n  constructor(public transcription: string) {}\n}\n\nexport class SetIsOnline {\n  static type = '[Device] SetIsOnline'\n  constructor(public isOnline: boolean) {}\n}\n\n\n\n\n","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { SuccessService } from \"../../../service/success.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage } from '../../../state/auth/auth-state.actions'\n\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  @Select(DeviceState.background) background$: Observable<string>\n\n  prefs\n  email\n  token\n  hide = true\n  passwordForm: FormGroup;\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    public appService: AppService,\n    private authService: AuthService,\n    private successService: SuccessService,\n    private idbCrudService: IdbCrudService) { \n    this.passwordForm = this.fb.group({\n      password: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      this.email = params.email\n    })\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.appService.setMode('darkMode')\n        else this.appService.setMode('')\n\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n        this.email = this.prefs[0][\"user\"][\"email\"]\n      }\n      else {\n        this.appService.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true)) \n      }\n    })\n  }\n\n  resetPassword() {\n    const obj = this.passwordForm.value\n    obj[\"email\"] = this.email\n    this.authService.resetPassword(obj).subscribe((res:any) => {\n      this.successService.popSnackbar(res.message)\n      this.router.navigate([''])\n    });  \n  }\n\n  close() {\n    this.router.navigate(['identify'])\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"padding\" fxLayoutAlign=\"center space-between\" fxLayout=\"row\">\n    <div fxLayoutAlign=\"start center\" class=\"text-color\">Reset Password</div>\n    <span class=\"toolbar-spacer\"></span>\n    <div>\n      <button (click)=close() mat-icon-button>\n        <mat-icon class=\"text-color\">close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <form class=\"container-padding text-color\" [formGroup]=\"passwordForm\">\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"assets/logo.svg\"></div>\n      </div>\n      <br>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label class=\"text-color\">Password</mat-label>\n        <input class=\"text-color\" matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n        <mat-icon class=\"hand\" matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </mat-form-field>\n      <button (click)=\"resetPassword()\" color=\"primary\" mat-flat-button>\n        Reset Password\n      </button>\n    </div>\n  </form>\n</div>\n","export class SetIsWorksiteSafetyHeaderValid {\n  static type = '[WorksiteSafetyStateModel] SetHeader'\n  constructor(public isWorksiteSafetyHeaderValid: boolean) {}\n}\n\nexport class SetIsFireExtinguisher {\n  static type = '[WorksiteSafetyStateModel] SetIsFireExtinguisher'\n  constructor(public isFireExtinguisher: boolean) {}\n}\n\nexport class SetIsErpPlanning {\n  static type = '[WorksiteSafetyStateModel] SetIsErpPlanning'\n  constructor(public isErpPlanning: boolean) {}\n}\n\nexport class SetIsGroundwork {\n  static type = '[WorksiteSafetyStateModel] SetIsGround'\n  constructor(public isGroundwork: boolean) {}\n}\n\nexport class SetIsHotwork {\n  static type = '[WorksiteSafetyStateModel] SetIsHotwork'\n  constructor(public isHotwork: boolean) {}\n}\n\nexport class SetIsConfinedSpace {\n  static type = '[WorksiteSafetyStateModel] SetIsConfinedSpace'\n  constructor(public isConfinedSpace: boolean) {}\n}\n\n\n\n\n","<div class=\"form-padding\">\n  <mat-card class=\"custom hand\" (click)=selectSharedLists()>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon material-icons-outlined\">fact_check</mat-icon>\n      </div>\n      <mat-card-title>All Lists</mat-card-title>\n      <mat-card-subtitle>Lists Accross All Forms</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n<div class=\"form-padding\" *ngFor=\"let formObj of (forms$ | async)\">\n  <mat-card class=\"custom hand\" (click)=selectForm(formObj)>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n\n","import { Component, Output, EventEmitter  } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { Store, Select } from '@ngxs/store'\nimport { LISTS } from \"../../../model/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { SetSelectedForm, SetLookupListNames } from '../../../state/auth/auth-state.actions'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-list-forms',\n  templateUrl: './list-forms.component.html',\n  styleUrls: ['./list-forms.component.scss']\n})\nexport class ListFormsComponent {\n\n  @Select(AuthState.forms) forms$: Observable<any[]>\n\n  @Output() selectData = new EventEmitter<any>()\n\n  lists:any = LISTS\n\n  constructor(\n    private store: Store,\n    private appService: AppService) { }\n\n  selectForm(formObj) {\n    this.store.dispatch(new SetSelectedForm(formObj))\n    this.store.dispatch(new SetLookupListNames(formObj.lists))\n    this.selectData.emit()\n  }\n\n  selectSharedLists() {\n    this.store.dispatch(new SetLookupListNames(this.lists))\n    this.appService.isListMenu = true\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, args: string[]): string {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20\n    const trail = args.length > 1 ? args[1] : '...'\n    return value.length > limit ? value.substring(0, limit) + trail : value\n   }\n\n}\n","<div class=\"container-padding\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>\n      <h2>{{ lookupListName$ | async }}</h2>\n    </div>\n    <div>\n      <button color=\"primary\" (click)=\"openMenu()\" mat-flat-button>Lists</button>\n    </div>\n  </div>\n  <div fxLayout=\"column\">\n    <form [formGroup]=\"runForm\">\n      <mat-form-field fxFlex>\n        <mat-label>Enter new List Item</mat-label>\n        <input matInput type=\"text\" formControlName=\"item\" placeholder=\"Enter new List Item\" required>\n      </mat-form-field>\n    </form>\n    <button *ngIf=\"kioske\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=true runForm.type=\"submit\">\n      Add Item to List\n    </button>\n    <button *ngIf=\"!kioske\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=\"!runForm.valid\" runForm.type=\"submit\">\n      Add Item to List\n    </button>\n  </div>\n  <br>\n  <div>\n    <table mat-table [dataSource]=\"appService.dataSource\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Item</th>\n        <td (click)=\"edit(i, element)\" class=\"hand\" mat-cell *matCellDef=\"let element; let i = index\">\n          <div>{{element.data}}</div>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\nimport { Observable } from 'rxjs'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ApiService } from \"../../../service/api.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { ListEditComponent } from '../list-edit/list-edit.component'\n\nimport { LIST_FORM } from '../../../model/forms'\n\n@Component({\n  selector: 'app-list-run',\n  templateUrl: './list-run.component.html',\n  styleUrls: ['./list-run.component.scss']\n})\nexport class ListRunComponent implements OnInit {\n\n  kioske\n\n  @Select(AuthState.lookupListName) lookupListName$: Observable<string>\n  runForm: FormGroup\n\n  id\n  user\n  data\n  allData\n  selectedIdx\n  lookupLists\n  isSync = false\n  LIST_FORM = LIST_FORM\n\n  displayedColumns: string[] = ['id']\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    private apiService: ApiService,\n    public authService: AuthService,\n    private formBuilder: FormBuilder,\n    private successService: SuccessService) {\n    this.runForm = this.formBuilder.group({\n      item: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.id = new FormControl({value: null, disabled: this.kioske})\n  }\n\n  edit(idx, element) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { id: idx, element: element }\n    const dialogRef = this.dialog.open(ListEditComponent, dialogConfig)\n  }\n\n  save() {\n    let obj = {\n      value: this.runForm.controls['item'].value,\n      name: this.store.selectSnapshot(AuthState.lookupListName)\n    }\n    this.apiService.saveList(obj).subscribe((data:any) => {\n      this.runForm.controls['item'].reset()\n      this.appService.dataSource = data.rows\n      this.successService.popSnackbar('Item Saved')\n    })\n  }\n\n  openMenu() {\n    this.runForm.reset()\n    this.selectedIdx = undefined\n    this.appService.isListMenu = true\n  }\n\n}\n\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-meaningful-site-tour-todo',\n  templateUrl: './meaningful-site-tour-todo.component.html',\n  styleUrls: ['./meaningful-site-tour-todo.component.scss']\n})\nexport class MeaningfulSiteTourTodoComponent {\n\n  @Input() todoForm\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"header-form\" [formGroup]=\"todoForm\">\n  <div fxLayout=\"column\" color=\"primary\" fxLayoutAlign=\"center start\" fxLayoutGap=\"20px\">\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SiteOrientation\">SiteOrientation</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"DailySafetyMeeting\">Attend a Daily Safety\n      Meeting / Toolbox Talk</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SiteTour\">Site tour (2 hrs)</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SiteTourWithWorker\">Site tour with worker\n    </mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"ReviewDiscuss\">Complete/review and discuss\n      <br>FLHA/JSA,HA etc.\n    </mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"PositiveInterventionRecognition\">Positive\n      intervention/recognition</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"EngageWithContractors\">Engage with contractors\n    </mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"HousekeepingInspection\">Housekeeping inspection\n    </mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"CompleteBBO\">Complete a BBO</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"OpenTeamDiscussion\">Hold an open discussion with\n      the team</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SafetyAlert\">Share a recent “Safety Alert”\n      <br>verbally if required\n    </mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"ProvideFeedback\">Provide feedback and follow-up\n    </mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"FormalAuditInspection\">Participate in a formal\n      audit/inspection <br>if available or applicable</mat-checkbox>\n  </div>\n</form>","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"jDxf\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"37vE\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"cJxf\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"eGHz\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"fHjd\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"KwcL\";\nmodule.exports = webpackAsyncContext;","export interface SpotCheckSafeyModel {\n  isWorksiteSafetyHeaderValid: boolean\n  isAppropriateTraining?: boolean\n  isSpotCheckSafeyCompleted?: boolean // used to display message in descrepancies\n}\n\nexport const SPOT_CHECK_SAFETY = {\n  id: \"spot-check-safety\",\n  name: \"Spot Check Safety\",\n  icon: \"grading\",\n  type: \"custom\",\n  is_published: true,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: [],\n  description: \"Worksite Safety Management Review\"\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"erpPlanningForm\">\n    <div class=\"text-color radio-center\">Emergency Response Plan (ERP) onsite</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencyResponsePlanOnSite\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false)\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isErpPlanning$ | async)\">\n      <div class=\"text-color radio-center\">Muster point(s) identified</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"MusterPointsIdentified\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.MusterPointsIdentified,'MusterPointsIdentified')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">ERP includes directions to nearest hospital</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ERPIncludesDirectionsToNearestHospital\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ERPIncludesDirectionsToNearestHospital,'ERPIncludesDirectionsToNearestHospital')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">STARS # (if applicable)</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"STARSNumber\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.STARSNumber,'STARSNumber')\" value=\"no\">No</mat-radio-button>\n          <mat-radio-button value=\"na\">N/A</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">ERP responder roles and <br>responsibilities identified</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ERPResponderRolesAndResponsibilitiesIdentified\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ERPResponderRolesAndResponsibilitiesIdentified,'ERPResponderRolesAndResponsibilitiesIdentified')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n    <div class=\"text-color radio-center\">Cellular or radio coverage confirmed. <br>If no, what communication is in\n      place?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"CellularOrRadioCoverageConfirmed\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openCommentOnly(label.CellularOrRadioCoverageConfirmed,'CellularOrRadioCoverageConfirmed')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsErpPlanning } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { ErpPlanningFormLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n@Component({\n  selector: 'app-worksite-safety-erp-planning',\n  templateUrl: './worksite-safety-erp-planning.component.html',\n  styleUrls: ['./worksite-safety-erp-planning.component.scss']\n})\nexport class WorksiteSafetyErpPlanningComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isErpPlanning) isErpPlanning$: Observable<string>\n\n  @Input() erpPlanningForm\n\n  label = ErpPlanningFormLabels\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(new SetTypeFilter('isErpPlanning'))\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsErpPlanning(toggle))\n    if (toggle) {\n      const comments:any = this.store.selectSnapshot(CommentState.commentsByType)\n      if (comments.length > 0) this.bottomSheet.open(BottomSheetWorksiteSafetyInspectionComponent)\n    }\n    if (!toggle) {\n      this.openComment(this.label.EmergencyResponsePlanOnSite, 'EmergencyResponsePlanOnSite')\n    }\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'ERP Planning', label: label, field: field, type: 'isErpPlanning' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  openCommentOnly(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety', isCommentOnly: true }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ selectedVoiceFieldLabel$ | async }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<section>\n  <mat-card *ngIf=\"errorMessage$| async as errorMessage\" class=\"notification\">{{errorMessage}}</mat-card>\n</section>\n<div fxLayout=\"column\" class=\"hand\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\">\n  <mat-icon class=\"icon-169px recorder-running-color soundwave\" *ngIf=\"listening$ | async; else mic\" (click)=\"stop()\">mic</mat-icon>\n  <ng-template #mic>\n    <mat-icon class=\"hand icon-169px-action\" (click)=\"start()\">mic</mat-icon>\n  </ng-template>\n</div>\n<div *ngIf=\"transcript$ | async\">\n<mat-card class=\"mat-elevation-z4\">{{transcript$ | async}}</mat-card>\n</div>\n<div>\n<mat-form-field class=\"speech-result-width\">\n  <textarea #transcriptInput matInput [value]=\"totalTranscript || ''\" rows=\"5\"></textarea>\n</mat-form-field>\n<div *ngIf=\"this.isDone\">\n  <button color=\"primary\" (click)=\"save()\" mat-flat-button fxFlex>Done</button>\n</div>\n</div>\n\n","import { ChangeDetectionStrategy, Component, OnInit, ViewChild, ElementRef } from '@angular/core'\nimport { merge, Observable, of, Subject } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { SpeechError, SpeechEvent, SpeechNotification } from '../../model/speech'\n\nimport { MatDialogRef } from \"@angular/material/dialog\"\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { SpeechRecognitionService } from '../../service/speech-recognition.service'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\nimport { SetTranscription } from '../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-voice',\n  templateUrl: './voice.component.html',\n  styleUrls: ['./voice.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class VoiceComponent implements OnInit {\n\n  @Select(AuthState.selectedVoiceFieldLabel) selectedVoiceFieldLabel$: Observable<string>\n\n  @ViewChild('transcriptInput') input:ElementRef; \n\n  isDone = false\n  totalTranscript?: string\n\n  voiceForm: FormGroup\n\n  transcript$?: Observable<string>\n  listening$?: Observable<boolean>\n  errorMessage$?: Observable<string>\n  defaultError$ = new Subject<string | undefined>()\n\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<VoiceComponent>,\n    private speechRecognitionService: SpeechRecognitionService,\n  ) {\n    this.voiceForm = this.formBuilder.group({\n      transcription: [null]\n    })\n  }\n\n  ngOnInit(): void {\n    this.totalTranscript = this.store.selectSnapshot(DeviceState.transcription)\n    if (this.totalTranscript) this.isDone = true\n\n    const webSpeechReady = this.speechRecognitionService.initialize()\n    if (webSpeechReady) {\n      this.initRecognition()\n    }else {\n      this.errorMessage$ = of('Your Browser is not supported. Please try Google Chrome.')\n    }\n  }\n\n  start(): void {\n    this.isDone = false\n    if (this.speechRecognitionService.isListening) {\n      this.stop()\n      return\n    }\n\n    this.defaultError$.next(undefined)\n    this.speechRecognitionService.start()\n  }\n\n  stop(): void {\n    this.isDone = true\n    this.speechRecognitionService.stop()\n  }\n\n  save(): void {\n    this.store.dispatch(new SetTranscription(this.input.nativeElement.value)) \n    this.dialogRef.close()\n  }\n\n  private initRecognition(): void {\n    this.transcript$ = this.speechRecognitionService.onResult().pipe(\n      tap((notification) => {\n        this.processNotification(notification)\n      }),\n      map((notification) => notification.content || '')\n    )\n\n    this.listening$ = merge(\n      this.speechRecognitionService.onStart(),\n      this.speechRecognitionService.onEnd()\n    ).pipe(map((notification) => notification.event === SpeechEvent.Start))\n\n    this.errorMessage$ = merge(\n      this.speechRecognitionService.onError(),\n      this.defaultError$\n    ).pipe(\n      map((data) => {\n        if (data === undefined) {\n          return ''\n        }\n        if (typeof data === 'string') {\n          return data\n        }\n        let message\n        switch (data.error) {\n          case SpeechError.NotAllowed:\n            message = `\n            Your browser is not authorized to access your microphone.\n            Verify that your browser has access to your microphone and try again.`\n            break\n          case SpeechError.NoSpeech:\n            message = `No speech has been detected. Please try again.`\n            break\n          case SpeechError.AudioCapture:\n            message = `Microphone is not available. Plese verify the connection of your microphone and try again.`\n            break\n          default:\n            message = ''\n            break\n        }\n        return message\n      })\n    )\n  }\n\n  private processNotification(notification: SpeechNotification<string>): void {\n    if (notification.event === SpeechEvent.FinalContent) {\n      const message = notification.content?.trim() || ''\n      this.totalTranscript = this.totalTranscript\n        ? `${this.totalTranscript}\\n${message}`\n        : notification.content\n    }\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as AuthActions from './auth-state.actions'\nimport { AuthStateModel } from './auth-state.model'\nimport { User, UserIdb, Tenant, Form } from './auth-state.model'\n\n@Injectable()\n@State<AuthStateModel>({\n  name: 'auth'\n})\n\nexport class AuthState {\n\n  @Selector()\n  static isIdentified(state: AuthStateModel): boolean {\n    return state.isIdentified\n  }\n\n  @Selector()\n  static isSignIn(state: AuthStateModel): boolean {\n    return state.isSignIn\n  }\n\n  @Selector()\n  static isAdmin(state: AuthStateModel): boolean {\n    return state.isAdmin\n  }\n\n  @Selector()\n  static isListMenu(state: AuthStateModel): boolean {\n    return state.isListMenu\n  }\n\n  @Selector()\n  static tenant(state: AuthStateModel): Tenant {\n    return state.tenant\n  }\n\n  @Selector()\n  static user(state: AuthStateModel): User {\n    return state.user\n  }\n\n  @Selector()\n  static userIdb(state: AuthStateModel): UserIdb {\n    return state.userIdb\n  }\n\n  @Selector()\n  static page(state: AuthStateModel): string {\n    return state.page\n  }\n\n  @Selector()\n  static workers(state: AuthStateModel): any[] {\n    return state.workers\n  }\n\n  @Selector()\n  static supervisors(state: AuthStateModel): any[] {\n    return state.supervisors\n  }\n\n  @Selector()\n  static lookupListData(state: AuthStateModel): [] {\n    return state.lookupListData\n  }\n\n  @Selector()\n  static lookupListName(state: AuthStateModel): string {\n    return state.lookupListName\n  }\n\n  @Selector()\n  static emailList(state: AuthStateModel): [] {\n    return state.emailList\n  }\n\n  @Selector()\n  static lookupListNames(state: AuthStateModel): [] {\n    return state.lookupListNames\n  }\n  @Selector()\n  static childPage(state: AuthStateModel): string {\n    return state.childPage\n  }\n\n  @Selector()\n  static childPageLabel(state: AuthStateModel): string {\n    return state.childPageLabel\n  }\n\n  @Selector()\n  static selectedForm(state: AuthStateModel): Form {\n    return state.selectedForm\n  }\n\n  @Selector()\n  static forms(state: AuthStateModel): {} {\n    return state.forms\n  }\n\n  @Selector()\n  static formLabels(state: AuthStateModel): {} {\n    return state.formLabels\n  }\n  \n  @Selector()\n  static selectedVoiceFieldLabel(state: AuthStateModel): {} {\n    return state.selectedVoiceFieldLabel\n  }\n\n  @Selector()\n  static formData(state: AuthStateModel): {} {\n    return state.formData\n  }\n\n  @Selector()\n  static notificationId(state: AuthStateModel): {} {\n    return state.notificationId\n  }\n\n  @Selector()\n  static childPageIcon(state: AuthStateModel): {} {\n    return state.childPageIcon\n  }\n\n  @Selector()\n  static kioske(state: AuthStateModel): {} {\n    return state.kioske\n  }\n\n  @Selector()\n  static formsPublished(state: AuthStateModel): {} {\n    return state.formsPublished\n  }\n\n  @Action(AuthActions.SetIsIdentified)\n  onSetIsIdentified(ctx: StateContext<AuthStateModel>, { isIdentified }: AuthActions.SetIsIdentified) {\n    ctx.patchState({\n      isIdentified: isIdentified\n    })\n  }\n\n  @Action(AuthActions.SetIsSignIn)\n  onSetIsSignIn(ctx: StateContext<AuthStateModel>, { isSignIn }: AuthActions.SetIsSignIn) {\n    ctx.patchState({\n      isSignIn: isSignIn\n    })\n  }\n\n  @Action(AuthActions.SetIsAdmin)\n  onSetIsAdmin(ctx: StateContext<AuthStateModel>, { isAdmin }: AuthActions.SetIsAdmin) {\n    ctx.patchState({\n      isAdmin: isAdmin\n    })\n  }\n\n  @Action(AuthActions.SetIsListMenu)\n  onSetIsListMenu(ctx: StateContext<AuthStateModel>, { isListMenu }: AuthActions.SetIsListMenu) {\n    ctx.patchState({\n      isListMenu: isListMenu\n    })\n  }\n\n  @Action(AuthActions.SetPage)\n  onSetPage(ctx: StateContext<AuthStateModel>, { page }: AuthActions.SetPage) {\n    ctx.patchState({\n      page: page\n    })\n  }\n\n  @Action(AuthActions.SetWorkers)\n  onSetWorkers(ctx: StateContext<AuthStateModel>, { workers }: AuthActions.SetWorkers) {\n    ctx.patchState({\n      workers: workers\n    })\n  }\n\n  @Action(AuthActions.SetSupervisors)\n  onSetSupervisors(ctx: StateContext<AuthStateModel>, { supervisors }: AuthActions.SetSupervisors) {\n    ctx.patchState({\n      supervisors: supervisors\n    })\n  }\n\n  @Action(AuthActions.SetLookupListData)\n  onSetLookupListData(ctx: StateContext<AuthStateModel>, { lookupListData }: AuthActions.SetLookupListData) {\n    ctx.patchState({\n      lookupListData: lookupListData\n    })\n  }\n\n  @Action(AuthActions.SetLookupListName)\n  onSetLookupListName(ctx: StateContext<AuthStateModel>, { lookupListName }: AuthActions.SetLookupListName) {\n    ctx.patchState({\n      lookupListName: lookupListName\n    })\n  }\n\n  @Action(AuthActions.SetLookupListNames)\n  onSetLookupListNames(ctx: StateContext<AuthStateModel>, { lookupListNames }: AuthActions.SetLookupListNames) {\n    ctx.patchState({\n      lookupListNames: lookupListNames\n    })\n  }\n\n  @Action(AuthActions.SetEmailList)\n  onSetEmailList(ctx: StateContext<AuthStateModel>, { emailList }: AuthActions.SetEmailList) {\n    ctx.patchState({\n      emailList: emailList\n    })\n  }\n\n  @Action(AuthActions.SetChildPage)\n  onSetChildPage(ctx: StateContext<AuthStateModel>, { childPage }: AuthActions.SetChildPage) {\n    ctx.patchState({\n      childPage: childPage\n    })\n  }\n\n  @Action(AuthActions.SetChildPageLabel)\n  onSetChildPageLabel(ctx: StateContext<AuthStateModel>, { childPageLabel }: AuthActions.SetChildPageLabel) {\n    ctx.patchState({\n      childPageLabel: childPageLabel\n    })\n  }\n\n  @Action(AuthActions.SetTenant)\n  onSetTenant(ctx: StateContext<AuthStateModel>, { tenant }: AuthActions.SetTenant) {\n    ctx.patchState({\n      tenant: tenant\n    })\n  }\n\n  @Action(AuthActions.SetUserIdb)\n  onSetUserIdb(ctx: StateContext<AuthStateModel>, { userIdb }: AuthActions.SetUserIdb) {\n    ctx.patchState({\n      userIdb: userIdb\n    })\n  }\n\n  @Action(AuthActions.SetUser)\n  onSetUser(ctx: StateContext<AuthStateModel>, { user }: AuthActions.SetUser) {\n    ctx.patchState({\n      user: user\n    })\n  }\n\n  @Action(AuthActions.SetSelectedForm)\n  onSetSelectedForm(ctx: StateContext<AuthStateModel>, { selectedForm }: AuthActions.SetSelectedForm) {\n    ctx.patchState({\n      selectedForm: selectedForm\n    });\n  }\n\n  @Action(AuthActions.ResetAuth)\n  onResetAuth(ctx: StateContext<AuthStateModel>, { }: AuthActions.ResetAuth) {\n    ctx.patchState({\n      page: 'home',\n      childPageLabel: 'Forms'\n    })\n  }\n\n  @Action(AuthActions.SetForms)\n  onSetForms(ctx: StateContext<AuthStateModel>, { forms }: AuthActions.SetForms) {\n    ctx.patchState({\n      forms: forms\n    })\n  }\n\n  @Action(AuthActions.SetSelectedVoiceFieldLabel)\n  onSelectedVoiceFieldLabel(ctx: StateContext<AuthStateModel>, { selectedVoiceFieldLabel }: AuthActions.SetSelectedVoiceFieldLabel) {\n    ctx.patchState({\n      selectedVoiceFieldLabel: selectedVoiceFieldLabel\n    });\n  }\n\n  \n  @Action(AuthActions.SetFormLabels)\n  onSetFormLabels(ctx: StateContext<AuthStateModel>, { formLabels }: AuthActions.SetFormLabels) {\n    ctx.patchState({\n      formLabels: formLabels\n    });\n  }\n\n  @Action(AuthActions.SetFormData)\n  onSetFormData(ctx: StateContext<AuthStateModel>, { formData }: AuthActions.SetFormData) {\n    ctx.patchState({\n      formData: formData\n    });\n  }\n\n  @Action(AuthActions.SetNotificationId)\n  onSetNotificationId(ctx: StateContext<AuthStateModel>, { notificationId }: AuthActions.SetNotificationId) {\n    ctx.patchState({\n      notificationId: notificationId\n    });\n  }\n\n  @Action(AuthActions.SetChildPageIcon)\n  onSetChildPageIcon(ctx: StateContext<AuthStateModel>, { childPageIcon }: AuthActions.SetChildPageIcon) {\n    ctx.patchState({\n      childPageIcon: childPageIcon\n    });\n  }\n\n  @Action(AuthActions.SetKioske)\n  onSetKioske(ctx: StateContext<AuthStateModel>, { kioske }: AuthActions.SetKioske) {\n    ctx.patchState({\n      kioske: kioske\n    });\n  }\n\n  @Action(AuthActions.SetFormsPublished)\n  onSetFormsPublished(ctx: StateContext<AuthStateModel>, { formsPublished }: AuthActions.SetFormsPublished) {\n    ctx.patchState({\n      formsPublished: formsPublished\n    });\n  }\n  \n}\n\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as NotificationActions from './notification-state.actions'\nimport { NotificationModel, NotificationStateModel } from './notification-state.model'\n\n@Injectable()\n@State<NotificationStateModel>({\n  name: 'notification'\n})\n\nexport class NotificationState {\n\n  @Selector()\n  static notification(state: NotificationStateModel): NotificationModel {\n    return state.notification\n  }\n\n  @Selector()\n  static notificationOpen(state: NotificationStateModel): NotificationModel {\n    return state.notificationOpen\n  }\n\n  @Selector()\n  static notificationSigned(state: NotificationStateModel): NotificationModel {\n    return state.notificationSigned\n  }\n\n  @Selector()\n  static notificationAllOpen(state: NotificationStateModel): NotificationModel {\n    return state.notificationAllOpen\n  }\n\n  @Selector()\n  static notificationAllSigned(state: NotificationStateModel): NotificationModel {\n    return state.notificationAllSigned\n  }\n\n  @Selector()\n  static notificationMyCount(state: NotificationStateModel): number {\n    return state.notificationMyCount\n  }\n\n  @Selector()\n  static notificationAdminCount(state: NotificationStateModel): number {\n    return state.notificationAdminCount\n  }\n\n  @Selector()\n  static notificationTab(state: NotificationStateModel): number {\n    return state.notificationTab\n  }\n\n  @Selector()\n  static notificationIdx(state: NotificationStateModel): number {\n    return state.notificationIdx\n  }\n\n  @Action(NotificationActions.SetNotification)\n  onSetNotification(ctx: StateContext<NotificationStateModel>, { notification }: NotificationActions.SetNotification) {\n    ctx.patchState({\n      notification: notification\n    })\n  }\n  // for user to see their notifications\n  @Action(NotificationActions.SetNotificationOpen)\n  onSetNotificationOpen(ctx: StateContext<NotificationStateModel>, { notificationOpen }: NotificationActions.SetNotificationOpen) {\n    ctx.patchState({\n      notificationOpen: notificationOpen\n    })\n  }\n  // for user to see their notifications\n  @Action(NotificationActions.SetNotificationSigned)\n  onSetNotificationSigned(ctx: StateContext<NotificationStateModel>, { notificationSigned }: NotificationActions.SetNotificationSigned) {\n    ctx.patchState({\n      notificationSigned: notificationSigned\n    })\n  }\n  // for admin to see all notifications\n  @Action(NotificationActions.SetNotificationAllOpen)\n  onSetNotificationAllOpen(ctx: StateContext<NotificationStateModel>, { notificationAllOpen }: NotificationActions.SetNotificationAllOpen) {\n    ctx.patchState({\n      notificationAllOpen: notificationAllOpen\n    })\n  }\n  // for admin to see all notifications\n  @Action(NotificationActions.SetNotificationAllSigned)\n  onSetNotificationAllSigned(ctx: StateContext<NotificationStateModel>, { notificationAllSigned }: NotificationActions.SetNotificationAllSigned) {\n    ctx.patchState({\n      notificationAllSigned: notificationAllSigned\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationMyCount)\n  onSetNotificationMyCount(ctx: StateContext<NotificationStateModel>, { notificationMyCount }: NotificationActions.SetNotificationMyCount) {\n    ctx.patchState({\n      notificationMyCount: notificationMyCount\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationAdminCount)\n  onSetNotificationAdminCount(ctx: StateContext<NotificationStateModel>, { notificationAdminCount }: NotificationActions.SetNotificationAdminCount) {\n    ctx.patchState({\n      notificationAdminCount: notificationAdminCount\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationTab)\n  onSetNotificationTab(ctx: StateContext<NotificationStateModel>, { notificationTab }: NotificationActions.SetNotificationTab) {\n    ctx.patchState({\n      notificationTab: notificationTab\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationIdx)\n  onSetNotificationIdx(ctx: StateContext<NotificationStateModel>, { notificationIdx }: NotificationActions.SetNotificationIdx) {\n    ctx.patchState({\n      notificationIdx: notificationIdx\n    })\n  }\n  \n\n}\n\n","import { Component } from '@angular/core'\n\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { environment } from '../../../../environments/environment'\n\nimport { AuthService } from \"../../../service/auth.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { Store } from '@ngxs/store'\n\n@Component({\n  selector: 'app-signup-bottom',\n  templateUrl: './signup-bottom.component.html',\n  styleUrls: ['./signup-bottom.component.scss']\n})\nexport class SignupBottomComponent {\n\n  auth\n  step = 0\n  notContinue = true\n  terms = false\n  subscription\n\n  logo = environment.logo\n  linkedinUrl = environment.linkedinUrl\n  githubUrl = environment.githubUrl\n\n  emailSignupForm: FormGroup\n  forgotPasswordForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    public matBottomSheetRef: MatBottomSheetRef<SignupBottomComponent>) {\n    this.emailSignupForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.required]\n    })\n  }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n  signupEmail() {\n    this.authService.signupEmail(this.emailSignupForm.value).subscribe(auth => {\n      this.auth = auth\n\n      if (this.auth.message === 'Signup sucessful.') {\n        this.step = 1\n        this.emailService.signup({ email: this.auth.user.email }).subscribe(_ => {})\n      }\n      else this.errorService.popSnackbar(this.auth.message)\n    })\n  }\n\n  checkTerms(terms) {\n    this.terms = terms\n    if (!this.terms) this.notContinue = true\n    else if (this.subscription) this.notContinue = false\n  }\n\n  selectSubscription() {\n    if (this.terms) this.notContinue = false\n    else this.notContinue = true\n  }\n\n}\n","<div fxLayout=\"column\">\n  <div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>Sign Up</div>\n    <div fxLayoutGap=\"20px\">\n      <button mat-icon-button (click)=\"close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"container-padding\">\n    <div *ngIf=\"step === 0\" fxLayout=\"column\">\n      <form [formGroup]=\"emailSignupForm\">\n        <div fxLayout=\"column\" class=\"form-padding\">\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Email Address</mat-label>\n            <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"text\" required>\n            <mat-error>\n              Email address is required!\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Password</mat-label>\n            <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" required>\n            <mat-error>\n              Password is required!\n            </mat-error>\n          </mat-form-field>\n          <button (click)=\"signupEmail()\" mat-stroked-button color=\"primary\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"step === 1\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div>\n        <app-terms></app-terms>\n      </div>\n      <div class=\"text-color\">\n        <mat-checkbox (change)=\"checkTerms($event.checked)\" color=\"primary\" [checked]=\"terms\">Accept terms and conditions</mat-checkbox>\n      </div>\n      <h3 class=\"text-color\">Monthly Subscription</h3>\n      <div class=\"text-color\">\n        <mat-radio-group (change)=\"selectSubscription()\" [(ngModel)]=\"subscription\">\n          <mat-radio-button value=\"paypal\">Credit Card</mat-radio-button>\n          <mat-radio-button value=\"invoice\">Invoice or EFT</mat-radio-button>\n          <mat-radio-button value=\"free\">Free</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <br>\n      <div>\n        <button (click)=\"step = 2\" mat-stroked-button color=\"primary\" fxFlex [disabled]=\"notContinue\">\n          Continue\n        </button>\n      </div>\n      <br><br>\n    </div>\n    <div *ngIf=\"step === 2\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div *ngIf=\"subscription === 'invoice'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/MonthlySubscriptionInvoiceEFT/formperma/DPyidrkamlSTiR52sfYCU82m7h2MZZzREanwDfrQQy4'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'paypal'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/contactus/formperma/4cYAlnbRcWnLrjP9pBkPFnCCTKGrtP6gHMrEsteGIow'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'free'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/FreeSubscription/formperma/ekqZGlUJ2Q6fESOo2EYdj6y13302mqTvK895Wb6_hx0'></iframe>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as CommentActions from './comment.actions'\nimport { CommentStateModel, Comment } from './comment.model'\n\n@Injectable()\n@State<CommentStateModel>({\n  name: 'comment',\n  defaults: {\n    comments: []\n  }\n})\n\nexport class CommentState {\n\n  @Selector()\n  static comments(state: CommentStateModel): Comment[] {\n    return state.comments\n  }\n\n  @Selector()\n  static text(state: Comment): string {\n    return state.text\n  }\n\n  @Selector()\n  static commentsByType(state: CommentStateModel) { \n    return state.comments.filter(c => c.type === state.type)\n  }\n\n  @Selector()\n  static commentType(state: CommentStateModel) { \n    return state.type\n  }\n\n  @Selector()\n  static commentLabel(state: CommentStateModel) { \n    return state.label\n  }\n\n  @Action(CommentActions.SetComments)\n  onSetComment(ctx: StateContext<CommentStateModel>, { comments }: CommentActions.SetComments) {\n    ctx.patchState({\n      comments: comments\n    });\n  }\n\n\n  @Action(CommentActions.SetText)\n  onSetText(ctx: StateContext<Comment>, { text }: CommentActions.SetText) {\n    ctx.patchState({\n      text: text\n    });\n  }\n\n  @Action(CommentActions.SetTypeFilter)\n  onSetTypeFilter(ctx: StateContext<CommentStateModel>, { type }: CommentActions.SetTypeFilter) {\n    ctx.patchState({\n      type: type\n    });\n  }\n\n  @Action(CommentActions.ResetTypeComments)\n  onResetTypeComments(ctx: StateContext<CommentStateModel>, { type }: CommentActions.ResetTypeComments) {\n    \n    // comments.indexOf(c => c.type === type);\n    ctx.patchState({\n      type: type\n    });\n  }\n\n  \n  @Action(CommentActions.SetLabel)\n  onSetLabel(ctx: StateContext<CommentStateModel>, { label }: CommentActions.SetLabel) {\n    ctx.patchState({\n      label: label\n    });\n  }\n\n}\n\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\nimport { CommentState } from 'src/app/component/comment/state/comment.state'\n\nimport * as WorksiteSafetyInspectionActions from './worksite-safety-inspection-state.actions'\nimport { WorksiteSafetyInspectionStateModel } from './worksite-safety-inspection-state.model'\n\n@Injectable()\n@State<WorksiteSafetyInspectionStateModel>({\n  name: 'worksitesafetyinspection',\n  defaults: {\n    isWorksiteSafetyHeaderValid: true,\n    isFireExtinguisher: true,\n    isErpPlanning: true,\n    isGroundwork: true,\n    isConfinedSpace: true,\n    isHotwork: true\n  }\n})\n\nexport class WorksiteSafetyInspectionState {\n\n  @Selector()\n  static isWorksiteSafetyHeaderValid(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isWorksiteSafetyHeaderValid\n  }\n\n  // @Selector()\n  // static isSiteHazardAssessmentCompleted?(state: WorksiteSafetyInspectionStateModel): boolean {\n  //   return state.isSiteHazardAssessmentCompleted\n  // }\n\n  @Selector()\n  static isFireExtinguisher?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isFireExtinguisher\n  }\n\n  @Selector()\n  static isErpPlanning?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isErpPlanning\n  }\n\n  @Selector()\n  static isGroundwork?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isGroundwork\n  }\n\n  @Selector()\n  static isHotwork?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isHotwork\n  }\n\n  @Selector()\n  static isConfinedSpace?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isConfinedSpace\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsWorksiteSafetyHeaderValid)\n  onSetIsWorksiteSafetyHeaderValid(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isWorksiteSafetyHeaderValid }: WorksiteSafetyInspectionActions.SetIsWorksiteSafetyHeaderValid) {\n    ctx.patchState({\n      isWorksiteSafetyHeaderValid: isWorksiteSafetyHeaderValid\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsFireExtinguisher)\n  onSetIsFireExtinguisher(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isFireExtinguisher }: WorksiteSafetyInspectionActions.SetIsFireExtinguisher) {\n    ctx.patchState({\n      isFireExtinguisher: isFireExtinguisher\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsErpPlanning)\n  onSetIsErpPlanning(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isErpPlanning }: WorksiteSafetyInspectionActions.SetIsErpPlanning) {\n    ctx.patchState({\n      isErpPlanning: isErpPlanning\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsGroundwork)\n  onSetIsGroundwork(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isGroundwork }: WorksiteSafetyInspectionActions.SetIsGroundwork) {\n    ctx.patchState({\n      isGroundwork: isGroundwork\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsConfinedSpace)\n  onSetIsConfinedSpace(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isConfinedSpace }: WorksiteSafetyInspectionActions.SetIsConfinedSpace) {\n    ctx.patchState({\n      isConfinedSpace: isConfinedSpace\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsHotwork)\n  onSetIsHotwork(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isHotwork }: WorksiteSafetyInspectionActions.SetIsHotwork) {\n    ctx.patchState({\n      isHotwork: isHotwork\n    });\n  }\n  \n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { IdbPersistenceService } from './idb-persistence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdbCrudService {\n\n  constructor(private idbPersistenceService: IdbPersistenceService) { }\n\n  private hazardAssessmentDB;\n\n  add(store, obj): Observable<void> {\n    return this.idbPersistenceService.put(store, obj);\n  }\n\n  put(store, obj): Observable<void> {\n    return this.idbPersistenceService.put(store, obj);\n  }\n\n  read(store, key): Observable<void> {\n    return this.idbPersistenceService.read(store, key);\n  }\n\n  readAll(store): Observable<void> {\n    return this.idbPersistenceService.readAll(store);\n  }\n\n  delete(store, key): Observable<void> {\n    return this.idbPersistenceService.delete(store, key);\n  }\n\n  clear(store): Observable<void> {\n    return this.idbPersistenceService.clear(store);\n  }\n\n}\n","import { Component, Input } from '@angular/core'\nimport { AppService } from \"../../../../service/app.service\"\n@Component({\n  selector: 'app-worksite-key-positive-finding',\n  templateUrl: './worksite-key-positive-finding.component.html',\n  styleUrls: ['./worksite-key-positive-finding.component.scss']\n})\nexport class WorksiteKeyPositiveFindingComponent {\n\n  @Input() keyPositiveFindingsForm\n\n  constructor(public appService: AppService) { }\n\n  openVoice(formField) {\n    this.appService.popVoiceDialog(this.keyPositiveFindingsForm, formField, 'Scope of Work')\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"keyPositiveFindingsForm\">\n  <div>\n    <button (click)=\"openVoice('ScopeOfWork')\" mat-mini-fab color=\"primary\">\n      <mat-icon matSuffix>mic_none</mat-icon>\n    </button>\n  </div>\n  <mat-form-field fxFlex>\n    <mat-label>Other Comments - Key Positive Findings</mat-label>\n    <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"5\" cdkAutosizeMaxRows=\"10\" matInput\n      formControlName=\"KeyPositiveFindings\" placeholder=\"Key Positive Findings\"\n      fxFlex></textarea>\n  </mat-form-field>\n</form>","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  apiUrl = environment.apiUrl\n\n  constructor(\n    private store: Store,\n    private http: HttpClient) { }\n\n  addTenantId(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    obj[\"tenant_id\"] = tenant.tenant_id\n    return obj\n  }\n\n  save(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl, obj)\n  }\n\n  getFormData(form_id, data_id) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    return this.http.get(this.apiUrl + 'form/' + tenant.tenant_id + '/' + form_id + '/' + data_id + '/')\n  }\n\n  getData(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.get(this.apiUrl + obj.tenant_id + '/' + obj.form_id + '/')\n  }\n\n  saveList(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'list/', obj)\n  }\n\n  getLists(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'lists/', obj)\n  }\n\n  getEmailList(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'emails/', obj)\n  }\n\n  update(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.apiUrl, obj)\n  }\n\n  delete(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'delete/', obj)\n  }\n\n  signForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.apiUrl + 'form/sign/', obj)\n  }\n\n  getPDF(name) {\n    try {\n      let headers = new HttpHeaders().set('Accept', 'application/pdf')\n      this.http.get(this.apiUrl + 'pdf/' + name + '/', {\n        headers: headers,\n        responseType: 'blob'\n      }).subscribe(data => {\n        const blob: Blob = new Blob([data], { type: 'application/pdf' });\n        const fileName = name;\n        const objectUrl: string = URL.createObjectURL(blob);\n        const a: HTMLAnchorElement = document.createElement('a') as HTMLAnchorElement;\n\n        a.href = objectUrl;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n\n        document.body.removeChild(a);\n        URL.revokeObjectURL(objectUrl);\n      })\n    }\n    catch (error) {\n      throw error;\n    }\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core'\n\nimport { MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef, MatDialog } from \"@angular/material/dialog\"\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CameraComponent } from '../../../camera/camera.component'\n\nimport { Store } from '@ngxs/store'\nimport { VehicleInspectionState } from '../state/vehicle-inspection.state'\nimport { SetSelectedComments } from '../state/vehicle-inspection-state.actions'\n\n@Component({\n  selector: 'app-detail-comments',\n  templateUrl: './detail-comments.component.html',\n  styleUrls: ['./detail-comments.component.scss']\n})\nexport class DetailCommentsComponent implements OnInit {\n\n  commentForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    public appService: AppService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<DetailCommentsComponent>) {\n    this.commentForm = this.formBuilder.group({\n      comments: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.commentForm.controls['comments'].setValue(this.data.detailForm.get(this.data.formControlName).value)\n  }\n\n  snapShot() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n    dialogConfig.maxHeight = '100vh',\n    dialogConfig.data = this.data.formControlName\n    this.dialog.open(CameraComponent, dialogConfig)\n  }\n\n  save() {\n    let selectedComments:any = this.store.selectSnapshot(VehicleInspectionState.selectedComments)\n    const isSaved = selectedComments.find(c => c == this.data.fieldName)\n    if (!isSaved) selectedComments.push(this.data.fieldName)\n    this.store.dispatch(new SetSelectedComments(selectedComments))\n    this.data.detailForm.controls[this.data.formControlName].setValue(this.commentForm.get('comments').value)\n    this.appService.currentDetailForm = this.data.detailForm.value\n    this.dialogRef.close()\n  }\n\n  delete() {\n    //TODO - delete pics for formfield\n    let selectedComments:any = this.store.selectSnapshot(VehicleInspectionState.selectedComments)\n    const idx = selectedComments.findIndex(c => c == this.data.fieldName)\n    selectedComments.splice(idx,1)\n    this.store.dispatch(new SetSelectedComments(selectedComments))\n    this.data.detailForm.controls[this.data.formControlName].setValue(null)\n    this.dialogRef.close()\n  }\n}\n","<div fxLayout=\"column\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n    <div class=\"mat-headline\">{{data.formControlName | splitCamelCase}}</div>\n    <div class=\"hand\" (click)=\"dialogRef.close()\">\n      <mat-icon>close</mat-icon>\n    </div>\n  </div>\n  <form [formGroup]=\"commentForm\">\n    <div fxLayout=\"column\">\n      <mat-form-field fxFlex>\n        <mat-label>Describe Discrepancies</mat-label>\n        <textarea matInput formControlName=\"comments\"></textarea>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n      <button (click)=\"snapShot()\" mat-raised-button color=\"primary\" [disabled]=\"!commentForm.valid\">\n        SNAP PIC\n      </button>\n      <div fxLayoutGap=\"20px\">\n        <button (click)=\"delete()\" mat-stroked-button color=\"warn\">DELETE</button>\n        <button (click)=\"save()\" mat-raised-button color=\"primary\">SAVE</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Router } from '@angular/router'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage, SetChildPage, SetChildPageLabel, SetIsSignIn, SetChildPageIcon } from '../../../state/auth/auth-state.actions'\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent {\n\n  @Output() changeTheme = new EventEmitter()\n\n  @Select(DeviceState.background) background$: Observable<string>\n\n  auth\n  token\n  prefs\n\n  pin = environment.pin\n  tenant = environment.tenant\n\n  pinForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService, \n    private errorService: ErrorService) { \n    this.pinForm = this.fb.group({\n      pin: ['', Validators.required]\n    })\n  }\n\n  loginPIN() {\n    if (this.pin == this.pinForm.controls['pin'].value) {\n      this.store.dispatch(new SetPage('admin'))\n      this.store.dispatch(new SetChildPage('forms'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n      this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n      this.store.dispatch(new SetIsSignIn(true))\n      this.appService.initializeAdminNotifications()\n    }\n    else this.errorService.popSnackbar('Incorrect PIN')\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('home'))\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <mat-toolbar>\n    <span class=\"text-color\"><mat-icon class=\"material-icons-outlined\">admin_panel_settings</mat-icon>&nbsp;Admin</span>\n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=close() mat-icon-button>\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <div class=\"top-margin text-color\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n      <div>Enter PIN</div>\n    </div>\n    <form [formGroup]=\"pinForm\">\n      <div fxLayout=\"column\">\n        <mat-form-field appearance=\"outline\" fxFlex>\n          <mat-label>PIN</mat-label>\n          <input matInput placeholder=\"Enter PIN\" formControlName=\"pin\" type=\"password\" required>\n          <mat-error>\n            PIN is required!\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"1rem\">\n        <button (click)=close() mat-stroked-button color=\"primary\">\n          CANCEL\n        </button>\n        <button (click)=loginPIN() mat-raised-button color=\"primary\" [disabled]=\"!pinForm.valid\">\n          OK\n        </button>\n      </div>\n    </form>\n  </div>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent {\n\n  githubUrl = environment.githubUrl\n\n  constructor(\n    public matBottomSheetRef: MatBottomSheetRef<ContactComponent>) { }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n  signup() {}\n\n}\n","<div fxLayout=\"column\">\n  <div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>Contact</div>\n    <div>\n      <button mat-icon-button (click)=\"close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div fxLayoutAlign=\"center\">\n    <div class=\"text-color\">\n      <img src=\"assets/formlocoMap.svg\" width=\"269px\">\n      <h1>formloco Canada</h1>\n      <div>Brock Clayton</div>\n      <div>Calgary, Alberta</div>\n      <div>brock@formloco.com</div>\n      <div>403-465-2151</div>\n      <h1>formloco USA</h1>\n      <div>Ted Messerly</div>\n      <div>Lodi, Wisconson</div>\n      <div>ted@formloco.com</div>\n      <div>1-833-665-0776</div>\n    </div>\n  </div>\n</div>","import { Component, Inject } from \"@angular/core\"\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\n\nimport * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../state/device/device.state'\nimport { SetPics } from '../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-pic-delete',\n  templateUrl: './pic-delete.component.html',\n  styleUrls: ['./pic-delete.component.scss']\n})\nexport class PicDeleteComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n\n  pics\n\n  constructor(\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<PicDeleteComponent>\n  ) { }\n\n  deletePhoto() {\n    this.pics = _.cloneDeep(this.store.selectSnapshot(DeviceState.pics))\n    this.pics.splice(this.data, 1)\n    this.store.dispatch(new SetPics(this.pics))\n    this.dialogRef.close()\n  }\n\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">Delete Pic</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<div fxLayoutAlign=\"center center\">\n  <img [src]=\"(pics$ | async)[data]\" height=\"200px\">\n</div>\n<br>\n<div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"2rem\">\n  <button (click)=\"deletePhoto()\" mat-raised-button color=\"warn\">\n    Delete\n  </button>\n  <button mat-stroked-button color=\"warn\" (click)=\"dialogRef.close()\">\n    Cancel\n  </button>\n</div>\n","import { Component, OnInit, HostBinding, OnDestroy } from '@angular/core'\n\nimport { OverlayContainer } from '@angular/cdk/overlay'\n\nimport { fromEvent, merge, of, Subscription, Subject } from 'rxjs'\nimport { takeUntil, map } from 'rxjs/operators'\n\nimport { Platform } from '@angular/cdk/platform'\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\n\nimport { AppService } from \"./service/app.service\"\nimport { AuthService } from \"./service/auth.service\"\nimport { IdbCrudService } from \"./service-idb/idb-crud.service\"\n\nimport { Store } from '@ngxs/store'\nimport { SetScreenSize, SetScreenWidth } from './state/device/device-state.actions'\nimport { SetUserIdb, SetPage, SetTenant, SetKioske } from './state/auth/auth-state.actions'\nimport { SetBackground, SetIsDarkMode, SetIsOnline } from './state/device/device-state.actions'\n\nimport { environment } from '../environments/environment'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  @HostBinding('class') className = 'darkMode'\n  networkStatus: any\n  networkStatus$: Subscription = Subscription.EMPTY\n\n  kioske = environment.kioske\n  tenant = environment.tenant\n\n  destroyed = new Subject<void>();\n  title = 'MOBILE FORMS'\n\n  token\n  prefs\n\n  myInnerWidth = window.innerWidth\n\n  displayNameMap = new Map([\n    [Breakpoints.XSmall, 'XSmall'],\n    [Breakpoints.Small, 'Small'],\n    [Breakpoints.Medium, 'Medium'],\n    [Breakpoints.Large, 'Large'],\n    [Breakpoints.XLarge, 'XLarge'],\n  ]);\n\n  constructor(\n    private store: Store,\n    public platform: Platform,\n    public appService: AppService,\n    private authService: AuthService,\n    private idbCrudService: IdbCrudService,\n    breakpointObserver: BreakpointObserver,\n    private overlayContainer: OverlayContainer) {\n    breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge,\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\n      for (const query of Object.keys(result.breakpoints)) {\n        if (result.breakpoints[query]) {\n          this.store.dispatch(new SetScreenSize(this.displayNameMap.get(query) ?? 'Unknown'))\n          this.store.dispatch(new SetScreenWidth(this.myInnerWidth + 'px'))\n        }\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new SetKioske(this.kioske))\n    this.store.dispatch(new SetTenant(this.tenant))\n\n    this.checkNetworkStatus()\n\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.setMode('darkMode')\n        else this.setMode('')\n\n        this.store.dispatch(new SetUserIdb(this.prefs[0][\"user\"]))\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n      }\n      else {\n        this.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true))\n\n        if (this.kioske) this.store.dispatch(new SetPage('kioske'))\n        else this.store.dispatch(new SetPage('identify'))\n      }\n    })\n  }\n\n  setMode(darkClassName) {\n    this.className = 'darkMode' ? darkClassName : ''\n\n    if (darkClassName === 'darkMode') {\n      this.store.dispatch(new SetBackground('#3b3b3b'))\n      this.overlayContainer.getContainerElement().classList.add(darkClassName)\n    }\n    else {\n      this.store.dispatch(new SetBackground(''))\n      this.overlayContainer.getContainerElement().classList.remove('darkMode')\n    }\n  }\n\n  checkNetworkStatus() {\n    this.networkStatus = navigator.onLine\n    this.networkStatus$ = merge(\n      of(null),\n      fromEvent(window, 'online'),\n      fromEvent(window, 'offline')\n    )\n      .pipe(map(() => navigator.onLine))\n      .subscribe(status => {\n        if (status)\n          this.authService.token().subscribe(token => {\n            this.token = token\n            localStorage.setItem('formToken', this.token.token)\n          })\n        this.store.dispatch(new SetIsOnline(status))\n        // this.networkStatus = status\n      })\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next()\n    this.destroyed.complete()\n  }\n\n}\n\n","<router-outlet></router-outlet>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox-run',\n  templateUrl: './checkbox-run.component.html',\n  styleUrls: ['./checkbox-run.component.scss']\n})\nexport class CheckboxRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    this.appService.detailArray[this.index].checkboxArray.forEach(element => {\n      if (element.required)\n        this.runForm.addControl(element.formControlName, \n            new FormControl(false, Validators.required));\n      else\n        this.runForm.addControl(element.formControlName, new FormControl(false));\n    });\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding text-color\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n  <div fxLayout=\"row\">\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n    <mat-checkbox *ngFor=\"let checkbox of appService.detailArray[index].checkboxArray\"\n                  formControlName=\"{{checkbox.formControlName}}\"\n                  value=\"{{checkbox.value}}\"  \n                  [labelPosition]=\"checkbox.labelPosition\" [required]=\"checkbox.required\">\n      {{checkbox.label}}\n    </mat-checkbox>\n  </div>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core'\n\nimport { FormControl } from \"@angular/forms\"\nimport { Store } from '@ngxs/store'\n\nimport { AuthState } from '../../../../state/auth/auth.state'\n\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() headerForm\n\n  header\n  lookupLists\n\n  customYearValues = [2025, 2024, 2023, 2022, 2021, 2016, 2008, 2004, 2000, 1996];\n  customDayShortNames = ['s\\u00f8n', 'man', 'tir', 'ons', 'tor', 'fre', 'l\\u00f8r'];\n  customPickerOptions: any;\n\n  years: string[] = []\n  makes: string[] = []\n  models: string[] = []\n  divisions: string[] = []\n  stakeholders: string[] = []\n\n  constructor(\n    private store: Store,\n    public autoCompleteService: AutoCompleteService) { }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n    this.lookupLists = this.store.selectSnapshot(AuthState.lookupListData)\n\n    if (this.lookupLists) {\n      this.stakeholders = this.lookupLists.filter(d => { return d.name == \"stakeholders\" })[0][\"rows\"].map(d => { return d.data })\n      this.stakeholders.sort()\n\n      this.divisions = this.lookupLists.filter(d => { return d.name == \"divisions\" })[0][\"rows\"].map(d => { return d.data })\n      this.divisions.sort()\n\n      this.years = this.lookupLists.filter(d => { return d.name == \"years\" })[0][\"rows\"].map(d => { return d.data })\n      this.years.sort()\n    }\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Choose a date</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <mat-form-field class=\"bot-pad full-width-field\">\n    <mat-label> First & Last Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter First Name & Last Name\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-hint>Worker Completing Inspection</mat-hint>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete #autoSupervisors=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n        required>\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Stakeholder</mat-label>\n    <mat-select panelClass=\"select-panel\" formControlName=\"Stakeholder\" required>\n      <mat-option *ngFor=\"let stakeholder of stakeholders\" [value]=\"stakeholder\" required>{{stakeholder}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Division</mat-label>\n    <mat-select panelClass=\"select-panel\" formControlName=\"Division\" required>\n      <mat-option *ngFor=\"let division of divisions\" [value]=\"division\" required>{{division}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>License Plate #</mat-label>\n    <input type=\"text\" placeholder=\"Enter Vehicle License Plate #\" matInput formControlName=\"Year\" required>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Unit #</mat-label>\n    <input type=\"text\" placeholder=\"Unit #\" matInput formControlName=\"UnitNumber\" required>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Vehicle Make</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Vehicle Make\" matInput\n      [formControl]=\"autoCompleteService.makesControl\" [matAutocomplete]=\"make\" required>\n    <mat-autocomplete #make=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let make of autoCompleteService.filteredMakes$ | async\" [value]=\"make\" required>\n        {{make}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Vehicle Model</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Vehicle Model\" matInput\n      [formControl]=\"autoCompleteService.modelsControl\" [matAutocomplete]=\"model\" required>\n    <mat-autocomplete #model=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let model of autoCompleteService.filteredModels$ | async\" [value]=\"model\" required>\n        {{model}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Vehicle Year</mat-label>\n    <mat-select panelClass=\"select-panel\" formControlName=\"Year\" required>\n      <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Vehicle Mileage Reading (KM)</mat-label>\n    <input matInput placeholder=\"Vehicle Mileage Reading (KM)\" formControlName=\"Mileage\" type=\"number\" required>\n  </mat-form-field>\n  <div class=\"text-color radio-center\">Current Registration is in the vehicle</div>\n  <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n    <mat-radio-group formControlName=\"CurrentRegistrationInVehicle\">\n      <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n      <mat-radio-button value=\"no\">No</mat-radio-button>\n    </mat-radio-group>\n  </div>\n  <div class=\"text-color radio-center\">Current Insurance (pink slip) in vehicle</div>\n  <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n    <mat-radio-group formControlName=\"CurrentInsuranceInVehicle\">\n      <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n      <mat-radio-button value=\"no\">No</mat-radio-button>\n    </mat-radio-group>\n  </div>\n  <ion-label position=\"stacked\">Insurance Expiry Date</ion-label>\n  <ion-datetime displayFormat=\"MMM DD, YYYY\" formControlName=\"RegistrationDate\" max=\"2025-12-31\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-radio-run',\n  templateUrl: './radio-run.component.html',\n  styleUrls: ['./radio-run.component.scss']\n})\nexport class RadioRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    if (this.appService.detailArray[this.index].required !== undefined)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(null, Validators.required));\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(''));\n  }\n   \n}\n","<div [formGroup]=\"runForm\" class=\"control-padding text-color\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n  <div>\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <br>\n  <div fxLayoutAlign=\"center\">\n    <mat-radio-group formControlName=\"{{appService.detailArray[index].formControlName}}\" fxLayoutGap=\"40px\">\n      <mat-radio-button *ngFor=\"let radio of appService.detailArray[index].radioArray\" [labelPosition]=\"radio.labelPosition\" [value]=\"radio.value\"\n        required=\"appService.detailArray[index].required\">\n        {{radio.label}}\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 class=\"h5 text-primary font-weight-semi-bold\">Using our services</h3>\n\n<p>You must follow any policies made available to you within the Services.</p>\n<p>Don't misuse our Services. For example, don't interfere with our Services or try to access them using a method\n  other than the interface and the instructions that we provide. You may use our Services only as permitted by\n  law, including applicable export and re-export control laws and regulations. We may suspend or stop providing\n  our Services to you if you do not comply with our terms or policies or if we are investigating suspected misconduct.\n</p>\n<p>Using our Services does not give you ownership of any intellectual property rights in our Services or the content\n  you access. You may not use content from our Services unless you obtain permission from its owner or are otherwise\n  permitted by law. These terms do not grant you the right to use any branding or logos used in our Services. Don't\n  remove, obscure, or alter any legal notices displayed in or along with our Services.</p>\n\n<h3 class=\"h5 text-primary font-weight-semi-bold\">Privacy and copyright protection</h3>\n\n<p>Some of our Services allow you to upload, submit, store, send or receive content. You retain ownership of any\n  intellectual\n  property rights that you hold in that content. In short, what belongs to you stays yours.</p>\n<p>formloco will never sell, share or distribute your data to any 3rd party.</p>","<div class=\"container-padding\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxFlex=\"50\">\n      <h2>{{ name$ | async }}</h2>\n    </div>\n    <div *ngIf=\"isData\" fxLayoutGap=\"20px\">\n      <button mat-raised-button color=\"primary\" (click)=\"exportData()\">\n        Export Data\n      </button>\n    </div>\n  </div>\n  <mat-list role=\"list\" *ngFor=\"let element of records;\">\n    <mat-list-item role=\"listitem\">\n      Year:&nbsp;{{ element.data.header.Year }}&nbsp;\n      Make:&nbsp;{{ element.data.header.Make }}&nbsp;\n      Model:&nbsp;{{ element.data.header.Model }}&nbsp;\n      User:&nbsp;{{ element.user_created.name }}\n    </mat-list-item>\n  </mat-list>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { ApiService } from \"../../../service/api.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { saveAs } from 'file-saver'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.scss']\n})\nexport class DataComponent implements OnInit {\n\n  @Select(AuthState.selectedForm.name) name$: Observable<string>\n\n  name\n  forms\n  records\n\n  isData = false\n\n  constructor(\n    private store: Store,\n    private apiService: ApiService,\n    public idbCrudService: IdbCrudService) { }\n\n  ngOnInit() {\n    this.getCloud()\n  }\n\n  getCloud() {\n    this.idbCrudService.readAll('form').subscribe(forms => {\n      this.forms = forms\n      const selectedForm = this.store.selectSnapshot(AuthState.selectedForm)\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n      let form = this.forms.filter(f => f.id === selectedForm[\"id\"])\n      let obj = {\n        form_id: form[0][\"form_id\"],\n        tenant_id: tenant[\"tenant_id\"]\n      }\n      this.apiService.getData(obj).subscribe(data => {\n        this.records = data\n        if (this.records.length > 0) this.isData = true\n      })\n    })\n  }\n\n  exportData() {\n    const replacer = (key, value) => value === null ? '' : value;\n    const header = Object.keys(this.records[0]);\n    let csv = this.records.map(row =>\n      header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\n    csv.unshift(header.join(','));\n    let csvArray = csv.join('\\r\\n');\n    var blob = new Blob([csvArray], { type: 'text/csv' })\n    saveAs(blob, this.store.selectSnapshot(AuthState.page))\n  }\n\n}","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Vehicle\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-header [headerForm]=headerForm></app-header>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"isHeaderValid$ | async\" [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Details\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-detail [detailForm]=detailForm></app-detail>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"detailStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"isHeaderValid$ | async\" [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Discrepancies\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"isHeaderValid$ | async\" [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div *ngIf=\"kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon class=\"icon-169px text-color\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"!isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!(isHeaderValid$ | async)\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"(isHeaderValid$ | async)\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"(isHeaderValid$ | async)\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core'\nimport * as _moment from 'moment'\n\nimport { Observable } from 'rxjs'\nimport { AppService } from \"../../../service/app.service\"\nimport { ApiService } from \"../../../service/api.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { AutoCompleteService } from \"../../../service/auto-complete.service\"\n\nimport { FormBuilder, FormGroup } from \"@angular/forms\"\n\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\n\nimport { VehicleInspectionState } from './state/vehicle-inspection.state'\nimport { SetIsHeaderValid } from './state/vehicle-inspection-state.actions'\nimport { VEHICLE_INSPECTION, LABEL } from './state/vehicle-inspection-state.model'\n\nimport { SetPics } from '../../../state/device/device-state.actions'\nimport { SetPage, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\n\nimport { CommentState } from '../../comment/state/comment.state'\nimport { SetLabel, SetComments } from '../../comment/state/comment.actions'\n\nimport { CorrectiveActionState } from '../../corrective-action/state/corrective-action.state'\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions'\n@Component({\n  selector: 'app-vehicle-inspection',\n  templateUrl: './vehicle-inspection.component.html',\n  styleUrls: ['./vehicle-inspection.component.scss']\n})\nexport class VehicleInspectionComponent implements OnInit {\n\n  @Select(VehicleInspectionState.isHeaderValid) isHeaderValid$: Observable<boolean>\n\n  pics\n  kioske\n  formData\n  formDataID\n  step = 0\n  history = []\n  lookupLists\n\n  headerForm: FormGroup\n  detailForm: FormGroup\n\n  VEHICLE_INSPECTION = VEHICLE_INSPECTION\n\n  isEdit = false\n  isOnline\n  isPanelOpen = false\n\n  apiURL = environment.apiUrl\n  messageUrl = environment.messageUrl\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private idbCrudService: IdbCrudService,\n    private formService: FormService,\n    public autoCompleteService: AutoCompleteService) {\n    this.headerForm = this.formBuilder.group({\n      Date: [],\n      Worker: [],\n      Supervisor: [],\n      Stakeholder: [],\n      Division: [],\n      Mileage: [],\n      LicensePlate: [],\n      UnitNumber: [],\n      Make: [],\n      Model: [],\n      Year: [],\n      RegistrationDate: [],\n      CurrentRegistrationInVehicle: [],\n      CurrentInsuranceInVehicle: []\n    })\n    this.detailForm = this.formBuilder.group({\n      IgnitionKey: [],\n      IgnitionKeyComments: [],\n      OilLevel: [],\n      OilLevelComments: [],\n      WasherFluidLevel: [],\n      WasherFluidLevelComments: [],\n      CoolantLevel: [],\n      CoolantLevelComments: [],\n      PowerSteeringFluidLevel: [],\n      PowerSteeringFluidLevelComments: [],\n      AirGauge: [],\n      AirGaugeComments: [],\n      Horn: [],\n      HornComments: [],\n      HeaterDefroster: [],\n      HeaterDefrosterComments: [],\n      WindshieldWipersWashers: [],\n      WindshieldWipersWashersComments: [],\n      AllSignalLights: [],\n      AllSignalLightsComments: [],\n      InteriorLights: [],\n      InteriorLightsComments: [],\n      MirrorsDamageAdjustments: [],\n      MirrorsDamageAdjustmentsComments: [],\n      WindshieldVisibility: [],\n      WindshieldVisibilityComments: [],\n      VisualInspectionExterior: [],\n      VisualInspectionExteriorComments: [],\n      InsideEngineCompartment: [],\n      InsideEngineCompartmentComments: [],\n      TransmissionFluidLevel: [],\n      TransmissionFluidLevelComments: [],\n      HighlightSignal4wayTailBackup: [],\n      HighlightSignal4wayTailBackupComments: [],\n      FuelLevel: [],\n      FuelLevelComments: [],\n      FirstAidKit: [],\n      FirstAidKitComments: [],\n      FireExtinguisher: [],\n      FireExtinguisherComments: [],\n      SurvivalKit: [],\n      SurvivalKitComments: [],\n      FuelKey: [],\n      FuelKeyComments: [],\n      TwoWayRadio: [],\n      TwoWayRadioComments: [],\n      Tires: [],\n      TiresComments: [],\n      SpillKit: [],\n      SpillKitComments: []\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n    this.store.select(AuthState.formData).subscribe(formData => {\n      this.formData = formData\n      if (this.formData && formData[\"data\"]) {\n        this.isEdit = true\n        this.setFormData(formData[\"data\"])\n      }\n    })\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  detailStep() {\n    this.appService.currentDetailForm = this.detailForm.value\n    this.step++\n  }\n\n  nextStep() {\n    this.checkValidHeader()\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date)\n      this.headerForm.controls['Worker'].setValue(data.header.Worker)\n      this.headerForm.controls['Supervisor'].setValue(data.header.Supervisor)\n      this.headerForm.controls['Stakeholder'].setValue(data.header.Stakeholder)\n      this.headerForm.controls['Division'].setValue(data.header.Division)\n      this.headerForm.controls['Mileage'].setValue(data.header.Mileage)\n      this.headerForm.controls['LicensePlate'].setValue(data.header.LicensePlate)\n      this.headerForm.controls['UnitNumber'].setValue(data.header.UnitNumber)\n      this.autoCompleteService.makesControl.setValue(data.header.Make)\n      this.autoCompleteService.modelsControl.setValue(data.header.Model)\n      this.headerForm.controls['Year'].setValue(data.header.Year)\n      this.headerForm.controls['CurrentRegistrationInVehicle'].setValue(data.header.CurrentRegistrationInVehicle)\n      this.headerForm.controls['CurrentInsuranceInVehicle'].setValue(data.header.CurrentInsuranceInVehicle)\n      this.headerForm.controls['RegistrationDate'].setValue(data.header.RegistrationDate)\n      this.autoCompleteService.workersControl.setValue(data.header.Worker)\n      this.autoCompleteService.supervisorsControl.setValue(data.header.Supervisor)\n    }\n\n    if (data.detail) {\n      this.detailForm.controls['IgnitionKey'].setValue(data.detail.IgnitionKey)\n      this.detailForm.controls['IgnitionKeyComments'].setValue(data.detail.IgnitionKeyComments)\n      this.detailForm.controls['OilLevel'].setValue(data.detail.OilLevel)\n      this.detailForm.controls['OilLevelComments'].setValue(data.detail.OilLevelComments)\n      this.detailForm.controls['WasherFluidLevel'].setValue(data.detail.WasherFluidLevel)\n      this.detailForm.controls['WasherFluidLevelComments'].setValue(data.detail.WasherFluidLevelComments)\n      this.detailForm.controls['CoolantLevel'].setValue(data.detail.CoolantLevel)\n      this.detailForm.controls['CoolantLevelComments'].setValue(data.detail.CoolantLevelComments)\n      this.detailForm.controls['PowerSteeringFluidLevel'].setValue(data.detail.PowerSteeringFluidLevel)\n      this.detailForm.controls['PowerSteeringFluidLevelComments'].setValue(data.detail.PowerSteeringFluidLevelComments)\n      this.detailForm.controls['AirGauge'].setValue(data.detail.AirGauge)\n      this.detailForm.controls['AirGaugeComments'].setValue(data.detail.AirGaugeComments)\n      this.detailForm.controls['Horn'].setValue(data.detail.Horn)\n      this.detailForm.controls['HornComments'].setValue(data.detail.HornComments)\n      this.detailForm.controls['HeaterDefroster'].setValue(data.detail.HeaterDefroster)\n      this.detailForm.controls['HeaterDefrosterComments'].setValue(data.detail.HeaterDefrosterComments)\n      this.detailForm.controls['WindshieldWipersWashers'].setValue(data.detail.WindshieldWipersWashers)\n      this.detailForm.controls['WindshieldWipersWashersComments'].setValue(data.detail.WindshieldWipersWashersComments)\n      this.detailForm.controls['AllSignalLights'].setValue(data.detail.AllSignalLights)\n      this.detailForm.controls['AllSignalLightsComments'].setValue(data.detail.AllSignalLightsComments)\n      this.detailForm.controls['InteriorLights'].setValue(data.detail.InteriorLights)\n      this.detailForm.controls['InteriorLightsComments'].setValue(data.detail.InteriorLightsComments)\n      this.detailForm.controls['MirrorsDamageAdjustments'].setValue(data.detail.MirrorsDamageAdjustments)\n      this.detailForm.controls['MirrorsDamageAdjustmentsComments'].setValue(data.detail.MirrorsDamageAdjustmentsComments)\n      this.detailForm.controls['WindshieldVisibility'].setValue(data.detail.WindshieldVisibility)\n      this.detailForm.controls['WindshieldVisibilityComments'].setValue(data.detail.WindshieldVisibilityComments)\n      this.detailForm.controls['VisualInspectionExterior'].setValue(data.detail.VisualInspectionExterior)\n      this.detailForm.controls['VisualInspectionExteriorComments'].setValue(data.detail.VisualInspectionExteriorComments)\n      this.detailForm.controls['InsideEngineCompartment'].setValue(data.detail.InsideEngineCompartment)\n      this.detailForm.controls['InsideEngineCompartmentComments'].setValue(data.detail.InsideEngineCompartmentComments)\n      this.detailForm.controls['TransmissionFluidLevel'].setValue(data.detail.TransmissionFluidLevel)\n      this.detailForm.controls['TransmissionFluidLevelComments'].setValue(data.detail.TransmissionFluidLevelComments)\n      this.detailForm.controls['HighlightSignal4wayTailBackup'].setValue(data.detail.HighlightSignal4wayTailBackup)\n      this.detailForm.controls['FuelLevel'].setValue(data.detail.FuelLevel)\n      this.detailForm.controls['FuelLevelComments'].setValue(data.detail.FuelLevelComments)\n      this.detailForm.controls['FirstAidKit'].setValue(data.detail.FirstAidKit)\n      this.detailForm.controls['FirstAidKitComments'].setValue(data.detail.FirstAidKitComments)\n      this.detailForm.controls['FireExtinguisher'].setValue(data.detail.FireExtinguisher)\n      this.detailForm.controls['FireExtinguisherComments'].setValue(data.detail.FireExtinguisherComments)\n      this.detailForm.controls['SurvivalKit'].setValue(data.detail.SurvivalKit)\n      this.detailForm.controls['SurvivalKitComments'].setValue(data.detail.SurvivalKitComments)\n      this.detailForm.controls['FuelKey'].setValue(data.detail.FuelKey)\n      this.detailForm.controls['FuelKeyComments'].setValue(data.detail.FuelKeyComments)\n      this.detailForm.controls['TwoWayRadio'].setValue(data.detail.TwoWayRadio)\n      this.detailForm.controls['TwoWayRadioComments'].setValue(data.detail.TwoWayRadioComments)\n      this.detailForm.controls['Tires'].setValue(data.detail.Tires)\n      this.detailForm.controls['TiresComments'].setValue(data.detail.TiresComments)\n      this.detailForm.controls['SpillKit'].setValue(data.detail.SpillKit)\n      this.detailForm.controls['SpillKitComments'].setValue(data.detail.SpillKitComments)\n    }\n\n    if (data.comments) {\n      this.store.dispatch(new SetComments(data.comments))\n    }\n\n    if (data.correctiveActions) {\n      this.store.dispatch(new SetCorrectiveActions(data.correctiveAction))\n    }\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    let header = this.headerForm.value\n    header.Make = this.autoCompleteService.makesControl.value\n    header.Model = this.autoCompleteService.modelsControl.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      detail: this.detailForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    }\n\n    this.formService.updateForm(form, this.formData, data).subscribe(_ => {\n      this.resetForm()\n    })\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n    const comments = this.store.selectSnapshot(CommentState.comments)\n\n    let userCreated = {\n      email: user.email,\n      date_created: this.appService.now\n    }\n\n    let header = this.headerForm.value\n    header.Make = this.autoCompleteService.makesControl.value\n    header.Model = this.autoCompleteService.modelsControl.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      detail: this.detailForm.value,\n      comments: comments,\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    }\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      date: this.appService.now,\n      name: form[\"name\"],\n      pics: this.store.selectSnapshot(DeviceState.pics)\n    }\n\n    this.apiService.save(obj).subscribe(idObj => {\n      this.formDataID = idObj\n\n      const workers: any = this.store.selectSnapshot(AuthState.workers)\n      const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n\n      if (workers.length == 0 && supervisors.length == 0)\n        this.snackBar.open(\"Notifications not setup, please add workers and supervisors.\", 'Attention', {\n          duration: 3000,\n          verticalPosition: 'bottom'\n        })\n      else {\n        const worker: any = this.appService.getWorker(header.Worker)\n        const supervisor: any = this.appService.getSupervisor(header.Supervisor)\n\n        let message = 'No discrepancies.'\n        if (comments.length > 0) message = 'Discrepancies Exist.'\n\n        let notificationObj = {\n          name: form[\"name\"],\n          worker: worker,\n          supervisor: supervisor,\n          description: 'Vehicle Inspection, ' + _moment().format('MMM D, h:mA'),\n          subject: 'New Vehicle Inspection from ' + header.Worker + ', ' + this.appService.now,\n          message: message,\n          form_id: form[\"form_id\"],\n          data_id: this.formDataID,\n          pdf: 'vehicle-inspection' + this.formDataID\n        }\n        this.appService.sendNotification(notificationObj)\n      }\n    })\n  }\n\n  checkValidHeader() {\n    const header = this.headerForm.value\n    if (header.Date != null\n      && this.autoCompleteService.workersControl.value != null\n      && this.autoCompleteService.supervisorsControl.value != null\n      && this.autoCompleteService.makesControl.value != null\n      && this.autoCompleteService.modelsControl.value != null\n      && header.Stakeholder != null\n      && header.Division != null\n      && header.Mileage != null\n      && header.Year != null\n      && header.RegistrationDate != null) {\n      this.store.dispatch(new SetLabel(LABEL))\n      this.store.dispatch(new SetIsHeaderValid(true))\n    }\n  }\n\n  resetForm() {\n    this.headerForm.reset()\n    this.detailForm.reset()\n    this.store.dispatch(new SetPics([]))\n    this.autoCompleteService.workersControl.setValue('')\n    this.autoCompleteService.supervisorsControl.setValue('')\n    this.autoCompleteService.makesControl.setValue('')\n    this.autoCompleteService.modelsControl.setValue('')\n    this.autoCompleteService.workersControl.setValue('')\n    this.autoCompleteService.supervisorsControl.setValue('')\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Work Site\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-header [headerForm]=headerForm (checkValidHeader)=checkValidHeader()>\n    </app-worksite-safety-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"isWorksiteSafetyHeaderValid$ | async\"\n        (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Hazard Identification & Communication\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-hazard [hazardForm]=hazardForm></app-worksite-safety-hazard>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!hazardForm.valid\"\n        (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Job Site Management\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-jobsite [jobsiteForm]=jobsiteForm></app-worksite-safety-jobsite>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\" [disabled]=\"!jobsiteForm.valid\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Fire Extinguisher(s)\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-fire-extinguisher [fireExtinguisherForm]=fireExtinguisherForm></app-worksite-fire-extinguisher>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\" [disabled]=\"!fireExtinguisherForm.valid\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 4\" (opened)=\"setStep(4)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Emergency Response Planning\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-erp-planning [erpPlanningForm]=erpPlanningForm></app-worksite-safety-erp-planning>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\" [disabled]=\"!erpPlanningForm.valid\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 5\" (opened)=\"setStep(5)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Ground Disturbance\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-ground [groundForm]=groundForm></app-worksite-safety-ground>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 6\" (opened)=\"setStep(6)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Confined Space Entry\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-confined-space [confinedSpaceForm]=confinedSpaceForm></app-worksite-safety-confined-space>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 7\" (opened)=\"setStep(7)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Hot Work\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-hot-work [hotWorkForm]=hotWorkForm></app-worksite-safety-hot-work>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 8\" (opened)=\"setStep(8)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Summit Vehicles & Equipment\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-equipment [equipmentForm]=equipmentForm></app-worksite-safety-equipment>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 9\" (opened)=\"setStep(9)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Key Positive Findings\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-key-positive-finding [keyPositiveFindingsForm]=keyPositiveFindingsForm></app-worksite-key-positive-finding>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 10\" (opened)=\"setStep(10)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Discrepancies\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 11\" (opened)=\"setStep(11)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!erpPlanningForm.valid || !hazardForm.valid || !jobsiteForm.valid || !fireExtinguisherForm.valid\"\n        class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"!isEdit && erpPlanningForm.valid && hazardForm.valid && jobsiteForm.valid && fireExtinguisherForm.valid\"\n        class=\"hand icon-169px-action\" (click)=\"submitForm()\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"isEdit && erpPlanningForm.valid && hazardForm.valid && jobsiteForm.valid && fireExtinguisherForm.valid\"\n        class=\"hand icon-169px-action\" (click)=\"updateForm()\">fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core'\nimport * as _moment from 'moment'\n\nimport { Observable } from 'rxjs'\nimport { AppService } from \"../../../service/app.service\"\nimport { ApiService } from \"../../../service/api.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { WORKSITE_SAFETY_INSPECTION } from './state/worksite-safety-inspection-state.model'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AutoCompleteService } from \"../../../service/auto-complete.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\n\nimport { WorksiteSafetyInspectionState } from './state/worksite-safety-inspection.state'\nimport { SetIsWorksiteSafetyHeaderValid } from './state/worksite-safety-inspection-state.actions'\n\nimport { SetPics } from '../../../state/device/device-state.actions'\nimport { SetPage, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\n\nimport { CommentState } from '../../comment/state/comment.state'\nimport { SetComments } from '../../comment/state/comment.actions'\n\nimport { CorrectiveActionState } from '../../corrective-action/state/corrective-action.state'\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions'\n\n@Component({\n  selector: 'app-worksite-safety-inspection',\n  templateUrl: './worksite-safety-inspection.component.html',\n  styleUrls: ['./worksite-safety-inspection.component.scss']\n})\nexport class WorksiteSafetyInspectionComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isWorksiteSafetyHeaderValid) isWorksiteSafetyHeaderValid$: Observable<boolean>\n\n  pics\n  isEdit = false\n  isOnline\n  formData\n  formDataID\n  step = 0\n  history = []\n  lookupLists\n\n  headerForm: FormGroup\n  hazardForm: FormGroup\n  jobsiteForm: FormGroup\n  fireExtinguisherForm: FormGroup\n  erpPlanningForm: FormGroup\n  groundForm: FormGroup\n  equipmentForm: FormGroup\n  confinedSpaceForm: FormGroup\n  hotWorkForm: FormGroup\n  keyPositiveFindingsForm: FormGroup\n  discrepancyForm: FormGroup\n\n  WORKSITE_SAFETY_INSPECTION = WORKSITE_SAFETY_INSPECTION\n\n  isERP = false\n  isGround\n  isVehicle\n  isConfine\n  isHot\n  isERPDisabled = true\n\n  isPanelOpen = false\n\n  apiURL = environment.apiUrl\n  messageUrl = environment.messageUrl\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private idbCrudService: IdbCrudService,\n    private autoCompleteService: AutoCompleteService) {\n    this.headerForm = this.formBuilder.group({\n      Date: [null, Validators.required],\n      Client: [null, Validators.required],\n      Location: [],\n      LSDUWI: [],\n      Latitude: [],\n      Longitude: [],\n      SupervisorPhone: [null, Validators.required],\n      JobNumber: [null, Validators.required],\n      Division: [null, Validators.required],\n      STARSSiteNumber: [],\n      ScopeOfWork: [null, Validators.required]\n    })\n    this.hazardForm = this.formBuilder.group({\n      SiteHazardAssessmentCompleted: [null, Validators.required],\n      ScopeOfWorkClearlyDefined: [null, Validators.required],\n      PotentialHazardsAndMitigationRequirementsIdentified: [null, Validators.required],\n      SummitHealthAndSafetyManualAvailable: [null, Validators.required],\n      OccupationalHealthAndSafetyLegislationAvailable: [null, Validators.required],\n      DailySafetyMeetingsConductedDocumented: [null, Validators.required],\n      AllSitePersonalTrainingAndSafetyTickets: [null, Validators.required],\n      AllSitePersonnelSiteSpecificWearingPPE: [null, Validators.required]\n    })\n    this.jobsiteForm = this.formBuilder.group({\n      WorkAreaClearlyIdentified: [null, Validators.required],\n      AppropriateAccessAndEgressRoutesAreEstablished: [null, Validators.required],\n      SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns: [null, Validators.required],\n      AllOpenExcavationsAreClearlyMarked: [null, Validators.required],\n      PublicAccessToTheSiteControlled: [null, Validators.required],\n      PrimeContractorClearlyIdentifiedWithSignage: [null, Validators.required],\n      IsThereEmergencyEquipmentOnSite: [null, Validators.required],\n      FirstAidKitAvailable: [null, Validators.required],\n      BlanketsAndStretcherAvailable: [null, Validators.required],\n      EyeWashBottleAvailable: [null, Validators.required],\n      SpillKitAvailable: [null, Validators.required],\n      H2SPersonalGasMonitorsOnsiteHaveBeenBumped: [null, Validators.required],\n    })\n    this.fireExtinguisherForm = this.formBuilder.group({\n      TwentyPoundMinimumFireExtinguisherAvailable: [null, Validators.required],\n      FireExtinguisherInspected: [null],\n      FireExtinguisherVisibleUnobstructed: [null],\n      FireExtinguisherCharged: [null],\n      FireExtinguisherSafetyPinSecured: [null],\n      FireExtinguisherOperatingInstructions: [null],\n      FireExtinguisherNoVisibleDamage: [null],\n      FireExtinguisherCertification: [null]\n    })\n    this.erpPlanningForm = this.formBuilder.group({\n      EmergencyResponsePlanOnSite: [null, Validators.required],\n      MusterPointsIdentified: [null],\n      STARSNumber: [null],\n      ERPIncludesDirectionsToNearestHospital: [null],\n      ERPResponderRolesAndResponsibilitiesIdentified: [null],\n      CellularOrRadioCoverageConfirmed: [null, Validators.required]\n    })\n    this.groundForm = this.formBuilder.group({\n      DoesTheProjectInvolveGroundDisturbance: ['na'],\n      GroundDisturbanceChecklistIsInPlace: [null],\n      OneCallNotificationHasBeenRegistered: [null],\n      AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed: [null],\n      ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined: [null],\n      ThirdPartyLineLocatesCompletedWithinTheSearchArea: [null],\n      AllRequiredCrossingOrProximityAgreementsInPlace: [null]\n    })\n    this.confinedSpaceForm = this.formBuilder.group({\n      DoesTheProjectInvolveConfinedSpaceEntry: [null],\n      ConfinedSpacePermitIssued: [null],\n      ConfinedSpaceSafetyTraining: [null],\n      SafetyWatchInPlace: [null],\n      RescuePlanAvailable: [null]\n    })\n    this.hotWorkForm = this.formBuilder.group({\n      DoesTheProjectInvolveHotWork: [null],\n      HotWorkPermitIssued: [null],\n      FireHazardsIdentifiedControls: [null],\n      FireSafetyWatchAvailable: [null]\n    })\n    this.equipmentForm = this.formBuilder.group({\n      ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects: [null],\n      InteriorOfVehicleKeptTidyAndClean: [null],\n      VehicleWindshieldFreeOfMajorChipsAndCracks: [null],\n      DailyPreUseVehicleInspectionCompleted: [null],\n      EquipmentPreUseInspectionCompleted: [null],\n      CargoIinternalAndExternalProperlyStowedAndSecured: [null],\n      HornIsInProperWorkingCondition: [null],\n      HeadlightsAreInProperWorkingCondition: [null],\n      SignalLightsAreInProperWorkingCondition: [null],\n      EmergencyWarningStrobeLightEquippedOnVehicle: [null],\n      SafetyBuggyWhipEquippedOnVehicle: [null],\n      FirstAidKitEquippedInVehicle: [null],\n      EmergencySurvivalKitEquippedInVehicle: [null]\n    })\n    this.keyPositiveFindingsForm = this.formBuilder.group({\n      KeyPositiveFindings: [null, Validators.required]\n    })\n    this.discrepancyForm = this.formBuilder.group({\n      Discrepancy: [null, Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n    this.store.select(AuthState.formData).subscribe(formData => {\n      this.formData = formData\n      if (this.formData && formData[\"data\"]) {\n        this.isEdit = true\n        this.setFormData(formData[\"data\"])\n      }\n      else this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(true))\n    })\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.checkValidHeader()\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date)\n      this.headerForm.controls['Client'].setValue(data.header.Client)\n      this.headerForm.controls['Location'].setValue(data.header.Location)\n      this.headerForm.controls['LSDUWI'].setValue(data.header.LSDUWI)\n      this.headerForm.controls['Latitude'].setValue(data.header.Latitude)\n      this.headerForm.controls['Longitude'].setValue(data.header.Longitude)\n      this.headerForm.controls['SupervisorPhone'].setValue(data.header.SupervisorPhone)\n      this.headerForm.controls['JobNumber'].setValue(data.header.JobNumber)\n      this.headerForm.controls['Division'].setValue(data.header.Division)\n      this.headerForm.controls['STARSSiteNumber'].setValue(data.header.STARSSiteNumber)\n      this.headerForm.controls['ScopeOfWork'].setValue(data.header.ScopeOfWork)\n      this.autoCompleteService.clientsControl.setValue(data.header.Client)\n      this.autoCompleteService.workersControl.setValue(data.header.Worker)\n      this.autoCompleteService.supervisorsControl.setValue(data.header.Supervisor)\n    }\n    if (data.hazard) {\n      this.hazardForm.controls['SiteHazardAssessmentCompleted'].setValue(data.hazard.SiteHazardAssessmentCompleted)\n      this.hazardForm.controls['ScopeOfWorkClearlyDefined'].setValue(data.hazard.ScopeOfWorkClearlyDefined)\n      this.hazardForm.controls['PotentialHazardsAndMitigationRequirementsIdentified'].setValue(data.hazard.PotentialHazardsAndMitigationRequirementsIdentified)\n      this.hazardForm.controls['SummitHealthAndSafetyManualAvailable'].setValue(data.hazard.SummitHealthAndSafetyManualAvailable)\n      this.hazardForm.controls['OccupationalHealthAndSafetyLegislationAvailable'].setValue(data.hazard.OccupationalHealthAndSafetyLegislationAvailable)\n      this.hazardForm.controls['DailySafetyMeetingsConductedDocumented'].setValue(data.hazard.DailySafetyMeetingsConductedDocumented)\n      this.hazardForm.controls['AllSitePersonalTrainingAndSafetyTickets'].setValue(data.hazard.AllSitePersonalTrainingAndSafetyTickets)\n      this.hazardForm.controls['AllSitePersonnelSiteSpecificWearingPPE'].setValue(data.hazard.AllSitePersonnelSiteSpecificWearingPPE)\n    }\n    if (data.jobsite) {\n      this.jobsiteForm.controls['WorkAreaClearlyIdentified'].setValue(data.jobsite.WorkAreaClearlyIdentified)\n      this.jobsiteForm.controls['AppropriateAccessAndEgressRoutesAreEstablished'].setValue(data.jobsite.AppropriateAccessAndEgressRoutesAreEstablished)\n      this.jobsiteForm.controls['SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns'].setValue(data.jobsite.SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns)\n      this.jobsiteForm.controls['AllOpenExcavationsAreClearlyMarked'].setValue(data.jobsite.AllOpenExcavationsAreClearlyMarked)\n      this.jobsiteForm.controls['PublicAccessToTheSiteControlled'].setValue(data.jobsite.PublicAccessToTheSiteControlled)\n      this.jobsiteForm.controls['PrimeContractorClearlyIdentifiedWithSignage'].setValue(data.jobsite.PrimeContractorClearlyIdentifiedWithSignage)\n      this.jobsiteForm.controls['IsThereEmergencyEquipmentOnSite'].setValue(data.jobsite.IsThereEmergencyEquipmentOnSite)\n      this.jobsiteForm.controls['FirstAidKitAvailable'].setValue(data.jobsite.FirstAidKitAvailable)\n      this.jobsiteForm.controls['BlanketsAndStretcherAvailable'].setValue(data.jobsite.BlanketsAndStretcherAvailable)\n      this.jobsiteForm.controls['EyeWashBottleAvailable'].setValue(data.jobsite.EyeWashBottleAvailable)\n      this.jobsiteForm.controls['SpillKitAvailable'].setValue(data.jobsite.SpillKitAvailable)\n      this.jobsiteForm.controls['H2SPersonalGasMonitorsOnsiteHaveBeenBumped'].setValue(data.jobsite.H2SPersonalGasMonitorsOnsiteHaveBeenBumped)\n    }\n    if (data.fireExtinguisher) {\n      this.fireExtinguisherForm.controls['TwentyPoundMinimumFireExtinguisherAvailable'].setValue(data.fireExtinguisher.TwentyPoundMinimumFireExtinguisherAvailable)\n      this.fireExtinguisherForm.controls['FireExtinguisherInspected'].setValue(data.fireExtinguisher.FireExtinguisherInspected)\n      this.fireExtinguisherForm.controls['FireExtinguisherVisibleUnobstructed'].setValue(data.fireExtinguisher.FireExtinguisherVisibleUnobstructed)\n      this.fireExtinguisherForm.controls['FireExtinguisherCharged'].setValue(data.fireExtinguisher.FireExtinguisherCharged)\n      this.fireExtinguisherForm.controls['FireExtinguisherSafetyPinSecured'].setValue(data.fireExtinguisher.FireExtinguisherSafetyPinSecured)\n      this.fireExtinguisherForm.controls['FireExtinguisherOperatingInstructions'].setValue(data.fireExtinguisher.FireExtinguisherOperatingInstructions)\n      this.fireExtinguisherForm.controls['FireExtinguisherNoVisibleDamage'].setValue(data.fireExtinguisher.FireExtinguisherNoVisibleDamage)\n      this.fireExtinguisherForm.controls['FireExtinguisherCertification'].setValue(data.fireExtinguisher.FireExtinguisherCertification)\n\n    }\n    if (data.erpPlanning) {\n      this.erpPlanningForm.controls['EmergencyResponsePlanOnSite'].setValue(data.erpPlanning.EmergencyResponsePlanOnSite)\n      this.erpPlanningForm.controls['MusterPointsIdentified'].setValue(data.erpPlanning.MusterPointsIdentified)\n      this.erpPlanningForm.controls['STARSNumber'].setValue(data.erpPlanning.STARSNumber)\n      this.erpPlanningForm.controls['ERPIncludesDirectionsToNearestHospital'].setValue(data.erpPlanning.ERPIncludesDirectionsToNearestHospital)\n      this.erpPlanningForm.controls['ERPResponderRolesAndResponsibilitiesIdentified'].setValue(data.erpPlanning.ERPResponderRolesAndResponsibilitiesIdentified)\n      this.erpPlanningForm.controls['CellularOrRadioCoverageConfirmed'].setValue(data.erpPlanning.CellularOrRadioCoverageConfirmed)\n    }\n    if (data.ground) {\n      this.groundForm.controls['DoesTheProjectInvolveGroundDisturbance'].setValue(data.ground.DoesTheProjectInvolveGroundDisturbance)\n      this.groundForm.controls['GroundDisturbanceChecklistIsInPlace'].setValue(data.ground.GroundDisturbanceChecklistIsInPlace)\n      this.groundForm.controls['OneCallNotificationHasBeenRegistered'].setValue(data.ground.OneCallNotificationHasBeenRegistered)\n      this.groundForm.controls['AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed'].setValue(data.ground.AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed)\n      this.groundForm.controls['ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined'].setValue(data.ground.ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined)\n      this.groundForm.controls['ThirdPartyLineLocatesCompletedWithinTheSearchArea'].setValue(data.ground.ThirdPartyLineLocatesCompletedWithinTheSearchArea)\n      this.groundForm.controls['AllRequiredCrossingOrProximityAgreementsInPlace'].setValue(data.ground.AllRequiredCrossingOrProximityAgreementsInPlace)\n    }\n    if (data.confinedSpace) {\n      this.confinedSpaceForm.controls['DoesTheProjectInvolveConfinedSpaceEntry'].setValue(data.confinedSpace.DoesTheProjectInvolveConfinedSpaceEntry)\n      this.confinedSpaceForm.controls['ConfinedSpacePermitIssued'].setValue(data.confinedSpace.ConfinedSpacePermitIssued)\n      this.confinedSpaceForm.controls['ConfinedSpaceSafetyTraining'].setValue(data.confinedSpace.ConfinedSpaceSafetyTraining)\n      this.confinedSpaceForm.controls['SafetyWatchInPlace'].setValue(data.confinedSpace.SafetyWatchInPlace)\n      this.confinedSpaceForm.controls['RescuePlanAvailable'].setValue(data.confinedSpace.RescuePlanAvailable)\n    }\n    if (data.hotWork) {\n      this.hotWorkForm.controls['DoesTheProjectInvolveHotWork'].setValue(data.hotWork.DoesTheProjectInvolveHotWork)\n      this.hotWorkForm.controls['HotWorkPermitIssued'].setValue(data.hotWork.HotWorkPermitIssued)\n      this.hotWorkForm.controls['FireHazardsIdentifiedControls'].setValue(data.hotWork.FireHazardsIdentifiedControls)\n      this.hotWorkForm.controls['FireSafetyWatchAvailable'].setValue(data.hotWork.FireSafetyWatchAvailable)\n    }\n    if (data.equipment) {\n      this.equipmentForm.controls['ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects'].setValue(data.equipment.ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects)\n      this.equipmentForm.controls['InteriorOfVehicleKeptTidyAndClean'].setValue(data.equipment.InteriorOfVehicleKeptTidyAndClean)\n      this.equipmentForm.controls['VehicleWindshieldFreeOfMajorChipsAndCracks'].setValue(data.equipment.VehicleWindshieldFreeOfMajorChipsAndCracks)\n      this.equipmentForm.controls['DailyPreUseVehicleInspectionCompleted'].setValue(data.equipment.DailyPreUseVehicleInspectionCompleted)\n      this.equipmentForm.controls['EquipmentPreUseInspectionCompleted'].setValue(data.equipment.EquipmentPreUseInspectionCompleted)\n      this.equipmentForm.controls['CargoIinternalAndExternalProperlyStowedAndSecured'].setValue(data.equipment.CargoIinternalAndExternalProperlyStowedAndSecured)\n      this.equipmentForm.controls['HornIsInProperWorkingCondition'].setValue(data.equipment.HornIsInProperWorkingCondition)\n      this.equipmentForm.controls['HeadlightsAreInProperWorkingCondition'].setValue(data.equipment.HeadlightsAreInProperWorkingCondition)\n      this.equipmentForm.controls['SignalLightsAreInProperWorkingCondition'].setValue(data.equipment.SignalLightsAreInProperWorkingCondition)\n      this.equipmentForm.controls['EmergencyWarningStrobeLightEquippedOnVehicle'].setValue(data.equipment.EmergencyWarningStrobeLightEquippedOnVehicle)\n      this.equipmentForm.controls['SafetyBuggyWhipEquippedOnVehicle'].setValue(data.equipment.SafetyBuggyWhipEquippedOnVehicle)\n      this.equipmentForm.controls['FirstAidKitEquippedInVehicle'].setValue(data.equipment.FirstAidKitEquippedInVehicle)\n      this.equipmentForm.controls['EmergencySurvivalKitEquippedInVehicle'].setValue(data.equipment.EmergencySurvivalKitEquippedInVehicle)\n    }\n    if (data.keyPositiveFindings) {\n      this.keyPositiveFindingsForm.controls['KeyPositiveFindings'].setValue(data.keyPositiveFindings.KeyPositiveFindings)\n    }\n\n    if (data.comments) {\n      this.store.dispatch(new SetComments(data.comments))\n    }\n\n    if (data.correctiveActions) {\n      this.store.dispatch(new SetCorrectiveActions(data.correctiveActions))\n    }\n\n    this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false))\n\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    let header = this.headerForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      erpPlanning: this.erpPlanningForm.value,\n      jobsite: this.jobsiteForm.value,\n      fireExtinguisher: this.fireExtinguisherForm.value,\n      ground: this.groundForm.value,\n      confinedSpace: this.confinedSpaceForm.value,\n      hotWork: this.hotWorkForm.value,\n      equipment: this.equipmentForm.value,\n      keyPositiveFindings: this.keyPositiveFindingsForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions),\n      hazard: this.hazardForm.value\n    }\n\n    this.formService.updateForm(form, this.formData, data).subscribe(_ => {\n      this.resetForm()\n    })\n\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    const now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n    let userCreated = {\n      email: user.email,\n      date_created: now\n    }\n\n    let header = this.headerForm.value\n    header.Client = this.autoCompleteService.clientsControl.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      erpPlanning: this.erpPlanningForm.value,\n      jobsite: this.jobsiteForm.value,\n      fireExtinguisher: this.fireExtinguisherForm.value,\n      ground: this.groundForm.value,\n      confinedSpace: this.confinedSpaceForm.value,\n      hotWork: this.hotWorkForm.value,\n      equipment: this.equipmentForm.value,\n      keyPositiveFindings: this.keyPositiveFindingsForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions),\n      hazard: this.hazardForm.value\n    }\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      date: now,\n      name: form[\"name\"],\n      pics: this.store.selectSnapshot(DeviceState.pics)\n    }\n\n    let message = this.discrepancyForm.value\n\n    if (!this.isOnline) {\n      let notificationObj = {\n        name: form[\"name\"],\n        worker: this.appService.getWorker(header.Worker),\n        supervisor: this.appService.getSupervisor(header.Supervisor),\n        description: 'Worksite Safety Inspection, ' + _moment().format('MMM D, h:mA'),\n        message: message.Discrepancy,\n        subject: 'New Worksite Safety Inspection for ' + this.headerForm.controls['Client'].value + ', ' + now,\n        form_id: form[\"form_id\"],\n        data_id: null,\n        pdf: 'worksite-safety-inspection' + this.formDataID\n      }\n      obj['nofification'] = notificationObj\n      this.idbCrudService.put('data', obj)\n    }\n    else {\n      this.apiService.save(obj).subscribe(idObj => {\n        this.formDataID = idObj\n        const workers: any = this.store.selectSnapshot(AuthState.workers)\n        const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n\n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\"Notifications not setup, please add workers and supervisors.\", 'Attention', {\n            duration: 3000,\n            verticalPosition: 'bottom'\n          })\n        else {\n          if (message.Discrepancy == null) message.Discrepancy = 'No discrepancies.'\n\n          let notificationObj = {\n            name: form[\"name\"],\n            worker: this.appService.getWorker(header.Worker),\n            supervisor: this.appService.getSupervisor(header.Supervisor),\n            description: 'Worksite Safety Inspection, ' + _moment().format('MMM D, h:mA'),\n            message: message.Discrepancy,\n            subject: 'New Worksite Safety Inspection for ' + this.headerForm.controls['Client'].value + ', ' + now,\n            form_id: form[\"form_id\"],\n            data_id: this.formDataID,\n            pdf: 'worksite-safety-inspection' + this.formDataID\n          }\n          this.appService.sendNotification(notificationObj)\n        }\n      })\n    }\n  }\n\n  checkValidHeader() {\n    const header = this.headerForm.value\n    if (header.Date != null\n      && this.autoCompleteService.workersControl.value != null\n      && this.autoCompleteService.supervisorsControl.value != null\n      && this.autoCompleteService.clientsControl.value != null\n      && header.SupervisorPhone != null\n      && header.Division != null\n      && header.JobNumber != null\n      && header.ScopeOfWork != null)\n      this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false))\n  }\n\n  resetForm() {\n    this.headerForm.reset()\n    this.erpPlanningForm.reset()\n    this.hazardForm.reset()\n    this.jobsiteForm.reset()\n    this.fireExtinguisherForm.reset()\n    this.groundForm.reset()\n    this.confinedSpaceForm.reset()\n    this.hotWorkForm.reset()\n    this.equipmentForm.reset()\n    this.discrepancyForm.reset()\n    this.keyPositiveFindingsForm.reset()\n    this.store.dispatch(new SetPics([]))\n    this.autoCompleteService.workersControl.setValue('')\n    this.autoCompleteService.supervisorsControl.setValue('')\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"content-full\">\n    <div [fxFlex]=\"screenWidth$ | async\">\n      <app-pin *ngIf=\"(page$ | async) === 'pin'\"></app-pin>\n      <!-- <app-signin *ngIf=\"(page$ | async) === 'signin'\"></app-signin> -->\n      <app-signup *ngIf=\"(page$ | async) === 'signup'\"></app-signup>\n      <app-whyus *ngIf=\"(page$ | async) === 'whyus'\"></app-whyus>\n      <app-pricing *ngIf=\"(page$ | async) === 'pricing'\"></app-pricing>\n      <app-identification *ngIf=\"(page$ | async) === 'identify'\"></app-identification>\n      <app-form *ngIf=\"(page$ | async) === 'form'\"></app-form>\n      <app-kioske *ngIf=\"(page$ | async) === 'kioske'\"></app-kioske>\n      <app-home *ngIf=\"(page$ | async) === 'home'\"></app-home>\n      <app-notification *ngIf=\"(page$ | async) === 'notification'\"></app-notification>\n      <app-admin (changeTheme)=changeTheme($event) *ngIf=\"(page$ | async) === 'admin'\"></app-admin>\n      <app-send-password *ngIf=\"(page$ | async) === 'send-password'\"></app-send-password>\n      <app-profile (changeTheme)=changeTheme($event) *ngIf=\"(page$ | async) === 'profile'\"></app-profile>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport * as _ from 'lodash'\n\nimport { ActivatedRoute, Params } from '@angular/router'\n\nimport { Store, Select } from '@ngxs/store'\n\nimport { AppService } from \"../../service/app.service\"\nimport { AuthService } from \"../../service/auth.service\"\nimport { NotificationService } from \"../../service/notification.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\n\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\n\nimport { SetPage, SetChildPageLabel, SetTenant, SetUser, SetKioske } from '../../state/auth/auth-state.actions'\nimport { SetNotificationOpen, SetNotificationTab } from '../../state/notification/notification-state.actions'\n\nimport { environment } from '../../../environments/environment'\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  prefs\n  kioske\n  tenant = environment.tenant\n\n  @Select(AuthState.page) page$: Observable<string>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.screenWidth) screenWidth$: Observable<string>\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private idbCrudService: IdbCrudService,\n    private notificationService: NotificationService) { }\n\n  ngOnInit(): void {\n\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n\n    if (this.kioske) {\n      const msg = this.route.snapshot.paramMap.get('msg')\n      const email = this.route.snapshot.paramMap.get('email')\n      const tenant_id = this.route.snapshot.paramMap.get('tenant_id')\n\n      if (email && !msg && tenant_id) {\n        this.authService.user({ email: email }).subscribe((user: any) => {\n          this.idbCrudService.clear('form')\n          this.store.dispatch(new SetUser(user.row))\n          this.store.dispatch(new SetKioske(false))\n          this.store.dispatch(new SetTenant({ tenant_id: tenant_id, email: email }))\n          this.appService.setIndexedDbUser(email, tenant_id)\n          this.appService.initializeUser(email)\n          this.store.dispatch(new SetPage('home'))\n        })\n      }\n      else if (msg && !email && !tenant_id) this.store.dispatch(new SetPage('signup'))\n      else {\n        this.idbCrudService.clear('prefs')\n        this.idbCrudService.clear('form')\n        this.idbCrudService.clear('pics')\n        this.idbCrudService.clear('voice')\n        this.authService.user({ email: this.tenant.email }).subscribe((user: any) => {\n          this.store.dispatch(new SetUser(user.row))\n          this.appService.setIndexedDbUser(this.tenant.email, this.tenant.tenant_id)\n          this.store.dispatch(new SetPage('kioske'))\n        })\n      }\n    }\n    else {\n      // these params are used to get the notifications from email link\n      this.route.queryParams.subscribe((params: Params) => {\n        if (params && params.email && Object.keys(params.email).length) {\n          this.notificationService.getMyNotifications({ email: params.email }).subscribe((notifications: any) => {\n            let openNotifications: any = []\n            openNotifications = notifications.filter(not => not.date_signed === null)\n            this.store.dispatch(new SetNotificationOpen(openNotifications))\n            this.store.dispatch(new SetPage('notification'))\n            this.store.dispatch(new SetChildPageLabel('forms'))\n            this.store.dispatch(new SetNotificationTab(0))\n          })\n        }\n        else {\n          const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n          this.idbCrudService.readAll('prefs').subscribe(prefs => {\n            this.prefs = prefs\n            if (this.prefs.length > 0) {\n              if (isOnline) {\n                this.authService.user({ email: this.prefs[0]['user']['email'] }).subscribe((user: any) => {\n                  this.appService.initializeUser(this.prefs[0]['user']['email'])\n                  this.store.dispatch(new SetUser(user.row))\n                  this.store.dispatch(new SetPage('home'))\n                  this.store.dispatch(new SetChildPageLabel('Forms'))\n                })\n              }\n              else this.appService.initializeOfflineUser()\n            }\n            else this.store.dispatch(new SetPage('identify'))\n          })\n        }\n      })\n    }\n  }\n\n  changeTheme() {\n    let darkClassName\n    let isDarkMode = this.store.selectSnapshot(DeviceState.isDarkMode)\n\n    if (isDarkMode) {\n      darkClassName = ''\n      this.setUser(darkClassName, false)\n    }\n    else {\n      darkClassName = 'darkMode'\n      this.setUser(darkClassName, true)\n    }\n    location.reload()\n  }\n\n  setUser(darkClassName, darkModeToggle) {\n    let user = _.cloneDeep(this.store.selectSnapshot(AuthState.userIdb))\n    user.isDarkMode = darkModeToggle\n    this.idbCrudService.put('prefs', { id: 1, user: user })\n    this.appService.setMode(darkClassName)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"confinedSpaceForm\">\n    <div class=\"text-color radio-center\">{{label.DoesTheProjectInvolveConfinedSpaceEntry}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DoesTheProjectInvolveConfinedSpaceEntry\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false)\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isConfinedSpace$ | async)\">\n      <div class=\"text-color radio-center\">{{label.ConfinedSpacePermitIssued}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ConfinedSpacePermitIssued\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ConfinedSpacePermitIssued,'ConfinedSpacePermitIssued')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.ConfinedSpaceSafetyTraining}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ConfinedSpaceSafetyTraining\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ConfinedSpaceSafetyTraining,'ConfinedSpaceSafetyTraining')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.SafetyWatchInPlace}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"SafetyWatchInPlace\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.SafetyWatchInPlace,'SafetyWatchInPlace')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.RescuePlanAvailable}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"RescuePlanAvailable\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.RescuePlanAvailable,'RescuePlanAvailable')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsConfinedSpace } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { ConfinedSpaceLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n@Component({\n  selector: 'app-worksite-safety-confined-space',\n  templateUrl: './worksite-safety-confined-space.component.html',\n  styleUrls: ['./worksite-safety-confined-space.component.scss']\n})\nexport class WorksiteSafetyConfinedSpaceComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isConfinedSpace) isConfinedSpace$: Observable<string>\n\n  @Input() confinedSpaceForm\n\n  label = ConfinedSpaceLabels\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetTypeFilter('isConfinedSpace'))\n    this.confinedSpaceForm.controls['DoesTheProjectInvolveConfinedSpaceEntry'].patchValue('yes')\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsConfinedSpace(toggle))\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Confined Space Entry', label: label, field: field, type: 'isFireExtinguisher' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","export interface WorksiteSafetyInspectionStateModel {\n  isWorksiteSafetyHeaderValid: boolean\n  labels?: any[]\n  transcribed?: any[]\n  // isSiteHazardAssessmentCompleted?: boolean // used to display message in descrepancies\n  isFireExtinguisher: boolean\n  isErpPlanning: boolean\n  isGroundwork: boolean\n  isConfinedSpace: boolean\n  isHotwork: boolean\n}\n\nexport const WORKSITE_SAFETY_INSPECTION = {\n  id: \"worksite-safety-inspection\",\n  name: \"Worksite Safety Inspection\",\n  icon: \"checklist\",\n  type: \"custom\",\n  is_published: false,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: ['clients'],\n  description: \"Monthly vehicle inspection\"\n}\n\nexport enum HazardFormLabels {\n  SiteHazardAssessmentCompleted = 'Site Hazard Assessment completed',\n  ScopeOfWorkClearlyDefined = 'Scope of work for the project clearly defined',\n  PotentialHazardsAndMitigationRequirementsIdentified = 'Potential hazards and mitigation requirements identified in hazard assessment',\n  SummitHealthAndSafetyManualAvailable = 'Summit Health and Safety manual available',\n  OccupationalHealthAndSafetyLegislationAvailable = 'Occupational Health And Safety legislation available',\n  DailySafetyMeetingsConductedDocumented = 'Daily safety meetings conducted and documented',\n  AllSitePersonalTrainingAndSafetyTickets = 'All site personal have the appropriate training and safety tickets',\n  AllSitePersonnelSiteSpecificWearingPPE = 'All site personnel are wearing site-specific PPE'\n}\n\nexport enum JobsiteFormLabels {\n  WorkAreaClearlyIdentified = 'Work area is clearly identified',\n  AppropriateAccessAndEgressRoutesAreEstablished = 'Appropriate access and egress routes are established',\n  SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns = 'Site is free of trip hazards and other housekeeping concerns',\n  AllOpenExcavationsAreClearlyMarked = 'All open excavations are clearly marked',\n  PublicAccessToTheSiteControlled = 'Public access to the site controlled',\n  PrimeContractorClearlyIdentifiedWithSignage = 'Prime contractor clearly identified with signage',\n  IsThereEmergencyEquipmentOnSite = 'Is there emergency equipment on site?',\n  FirstAidKitAvailable = 'First aid kit available and stocked',\n  BlanketsAndStretcherAvailable = 'Blankets and stretcher available',\n  EyeWashBottleAvailable = 'Eye wash bottle available',\n  SpillKitAvailable = 'Spill kit available',\n  H2SPersonalGasMonitorsOnsiteHaveBeenBumped = 'The H2S personal gas monitors onsite have been bumped'\n}\n\nexport enum FireExtinguisherFormLabels {\n  TwentyPoundMinimumFireExtinguisherAvailable = '20 lb minimum fire extinguisher available',\n  FireExtinguisherInspected = 'Fire extinguisher(s) tag attached Inspected monthly and recorded',\n  FireExtinguisherVisibleUnobstructed = 'Fire extinguisher(s) visible and unobstructed',\n  FireExtinguisherCharged = 'Fire extinguishers showing charge (gauge indicator must be in the green zone indicating it is fully charged)',\n  FireExtinguisherSafetyPinSecured = 'Fire extinguisher safety pins are in place and secured to prevent an accidental discharge',\n  FireExtinguisherOperatingInstructions = 'Fire extinguishers operating instructions on the name plate are legible and face outwards',\n  FireExtinguisherNoVisibleDamage = 'No signs of visible damage to fire extinguisher (rust, dents or other sighs of damage)',\n  FireExtinguisherCertification = 'External fire extinguisher certification within 12 months (must be certified by 3rd party annually)'\n}\n\nexport enum ErpPlanningFormLabels {\n  EmergencyResponsePlanOnSite = 'Emergency Response Plan (ERP) onsite',\n  MusterPointsIdentified = 'Muster point(s) identified',\n  STARSNumber = 'STARS # (if applicable)',\n  ERPIncludesDirectionsToNearestHospital = 'ERP includes directions to nearest hospital',\n  ERPResponderRolesAndResponsibilitiesIdentified = 'ERP responder roles and responsibilities identified',\n  CellularOrRadioCoverageConfirmed = 'Cellular or radio coverage confirmed. If no, what communication is in place?'\n}\n\nexport enum GroundFormLabels {\n  DoesTheProjectInvolveGroundDisturbance = 'Does the project involve ground disturbance',\n  GroundDisturbanceChecklistIsInPlace = 'Ground disturbance checklist is in place',\n  OneCallNotificationHasBeenRegistered = '1-Call notification has been registered',\n  AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed = 'All underground lines within 5 metres of the work area manually exposed',\n  ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined = '30 metre search area around the work area clearly defined',\n  ThirdPartyLineLocatesCompletedWithinTheSearchArea = 'Third-party line locates completed within the search area',\n  AllRequiredCrossingOrProximityAgreementsInPlace = 'All required crossing or proximity agreements in place'\n}\n\nexport enum ConfinedSpaceLabels {\n  DoesTheProjectInvolveConfinedSpaceEntry = 'Does the project involve Confined Space Entry?',\n  ConfinedSpacePermitIssued = 'Confined Space Permit Issued',\n  ConfinedSpaceSafetyTraining = 'Workers have applicable safety training and competent to perform the work',\n  SafetyWatchInPlace = 'Safety Watch in place',\n  RescuePlanAvailable = 'Rescue Plan Available'\n}\n\nexport enum HotWorkLabels {\n  DoesTheProjectInvolveHotWork = 'Does the project involve Hot Work (work that could produce a source of ignition, such as a spark or open flame)',\n  HotWorkPermitIssued = 'Hot Work Permit Issued',\n  FireHazardsIdentifiedControls = 'Fire Hazards identified and controls in place',\n  FireSafetyWatchAvailable = 'Fire / Safety Watch Available'\n}\n\nexport enum EquipmentLabels {\n  ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects = 'Exterior of vehicle generally clean and free of visual defects',\n  InteriorOfVehicleKeptTidyAndClean = 'Interior of vehicle kept tidy and clean',\n  VehicleWindshieldFreeOfMajorChipsAndCracks = 'Vehicle windshield free of major chips and cracks',\n  DailyPreUseVehicleInspectionCompleted = 'Daily pre-use vehicle inspection completed',\n  EquipmentPreUseInspectionCompleted = 'Equipment pre-use inspection completed',\n  CargoIinternalAndExternalProperlyStowedAndSecured = 'Cargo (internal and external) properly stowed and secured',\n  HornIsInProperWorkingCondition = 'Horn is in proper working condition',\n  HeadlightsAreInProperWorkingCondition = 'Headlights are in proper working condition',\n  SignalLightsAreInProperWorkingCondition = 'Signal lights are in proper working condition',\n  EmergencyWarningStrobeLightEquippedOnVehicle = 'Emergency warning / strobe light equipped on vehicle',\n  SafetyBuggyWhipEquippedOnVehicle = 'Safety / buggy whip equipped on vehicle',\n  FirstAidKitEquippedInVehicle = 'First aid kit equipped in vehicle',\n  EmergencySurvivalKitEquippedInVehicle = 'Emergency survival kit equipped in vehicle',\n  OtherCommentsKeyPositiveFindings = 'Other Comments - Key Positive Findings'\n}\n","<div class=\"files-padding\">\n  <ngx-dropzone class=\"custom-dropzone\"\n                [multiple] = \"true\"\n                [maxFileSize] = \"30000000\"\n                (change)=\"onSelect($event)\"\n                [expandable]=\"true\">\n    <ngx-dropzone-label>Drop file(s) or click to select for upload</ngx-dropzone-label>\n    <ngx-dropzone-preview *ngFor=\"let f of appService.fileArray; let i=index\" \n                          [removable]=\"true\" \n                          (removed)=\"onRemove(i)\">\n      <ngx-dropzone-label>\n        <p>{{ f.name | truncate:[20, '...']}}</p> \n        <p *ngIf=\"f.type\">({{ f.type | truncate:[20, '...']}})</p>\n      </ngx-dropzone-label>\n    </ngx-dropzone-preview>\n  </ngx-dropzone>\n</div>\n<mat-progress-bar *ngIf=\"appService.isFileUploadRunning\" mode=\"buffer\"></mat-progress-bar>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-fileupload-run',\n  templateUrl: './fileupload-run.component.html',\n  styleUrls: ['./fileupload-run.component.scss']\n})\nexport class FileuploadRunComponent implements OnInit {\n\n  @Input() index;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    public appService: AppService) { }\n\n  ngOnInit() {\n    // this.appService.isFileUploadRunning = true;\n  }\n\n  onSelect(event) {\n    this.appService.fileArray.push(...event.addedFiles);\n    this.appService.fileArray.forEach(element => {\n      this.readFile(element).then(fileContents => {\n        element.content = fileContents;\n        element.tenantID = localStorage.getItem('formTenantId');\n      });\n    });\n  }\n\n  private async readFile(file: File): Promise<string | ArrayBuffer> {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n  \n      reader.onload = e => {\n        return resolve((e.target as FileReader).result);\n      };\n  \n      reader.onerror = e => {\n        console.error(`FileReader failed on file ${file.name}.`);\n        return reject(null);\n      };\n  \n      if (!file) {\n        console.error('No file to read.');\n        return reject(null);\n      }\n  \n      reader.readAsDataURL(file);\n    });\n  }\n\n  onFilesRejected(files: File[]) {\n    this.snackBar.open('Your file is too big, must be 5 Megabytes or less.', \"Error:\", \n        {duration: 5000})\n  }\n\n  onRemove(idx) {\n    this.appService.fileArray.splice(idx, 1);\n  }\n\n}\n","<div fxLayout=\"column\">\n  {{(label$ | async)}}\n</div>\n<mat-list role=\"list\">\n  <mat-list-item color=\"primary\" class=\"mat-list-item-font\" *ngFor=\"let comment of (comments$ | async)\">\n    <div mat-line style=\"display: flex; justify-content: space-between; align-items: center;\">\n      <span class=\"mat-list-item-linked hand\" (click)=\"openComment(comment.label, comment.field)\">{{ comment.label | truncate:[12, '...']}} {{ comment.text | truncate:[15, '...']}}</span>\n      <button mat-icon-button color=\"primary\">\n        <mat-icon class=\"material-icons-outlined\" (click)=\"openCorrectiveActionDialog(comment)\">fact_check</mat-icon>\n      </button>\n    </div>\n  </mat-list-item>\n  <mat-list-item class=\"mat-list-item-font\" *ngIf=\"(comments$ | async)?.length == 0\">\n    <div mat-line>None added</div>\n  </mat-list-item>\n</mat-list>\n","import { Component } from '@angular/core'\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\n\nimport { Select } from '@ngxs/store'\nimport { Observable } from 'rxjs'\nimport { CommentComponent } from 'src/app/component/comment/comment.component'\nimport { CorrectiveActionComponent } from 'src/app/component/corrective-action/corrective-action.component'\n\nimport { CommentState } from '../comment/state/comment.state'\nimport { AuthState } from '../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-discrepancy',\n  templateUrl: './discrepancy.component.html',\n  styleUrls: ['./discrepancy.component.scss']\n})\nexport class DiscrepancyComponent {\n\n  @Select(AuthState.selectedForm) selectedForm$: Observable<any>\n  @Select(CommentState.comments) comments$: Observable<any[]>\n  @Select(CommentState.commentLabel) label$: Observable<string>\n\n  constructor(\n    private dialog: MatDialog\n  ) { }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  openCorrectiveActionDialog(comment) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.maxWidth = '100vw'\n    dialogConfig.maxHeight = '100vh'\n    dialogConfig.width = '100vw'\n    dialogConfig.height = '100vh'\n    dialogConfig.data = { label: comment.label, field: comment.field, type: comment.type, actionItem: comment.text }\n    this.dialog.open(CorrectiveActionComponent, dialogConfig)\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'replaceUnderscore'\n})\nexport class ReplaceUnderscorePipe implements PipeTransform {\n\n  transform(value: string): string {\n    if (value !== null)\n      return value.replace(/_/g, ' ')\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NgModule, APP_INITIALIZER } from '@angular/core'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { environment } from '../environments/environment'\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { HttpConfig } from './interceptor/httpconfig.interceptor'\n\nimport { MaterialModule } from \"./material/material.module\"\n\nimport { AppRoutingModule } from './app-routing.module'\n\nimport { AppComponent } from './app.component'\n\nimport { PipeModule } from './pipe/pipe.module'\n\nimport { Device } from '@ionic-native/device/ngx'\n\n// pwa\nimport { ServiceWorkerModule } from '@angular/service-worker'\n\n// state management\nimport { NgxsModule } from '@ngxs/store'\nimport { States } from './state/app.state'\n\n// third party libraries\nimport { QuillModule } from \"ngx-quill\"\nimport { NgxBarcode6Module } from 'ngx-barcode6'\nimport { NgxDropzoneModule } from 'ngx-dropzone'\nimport { DragDropModule } from '@angular/cdk/drag-drop'\nimport { ZXingScannerModule } from '@zxing/ngx-scanner'\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode'\nimport { WebcamModule } from 'ngx-webcam'\n\n// pics\nimport { PicsComponent } from './component/pics/pics.component'\nimport { CameraComponent } from './component/camera/camera.component'\nimport { PicDeleteComponent } from './component/pic-delete/pic-delete.component'\n\n// voice\nimport { VoiceComponent } from './component/voice/voice.component'\nimport { CommentComponent } from './component/comment/comment.component'\n\n// admin\nimport { PinComponent } from './component/admin/pin/pin.component'\nimport { AdminComponent } from './component/admin/admin.component'\nimport { SdkComponent } from './component/admin/sdk/sdk.component'\nimport { DataComponent } from './component/admin/data/data.component'\nimport { MenuComponent } from './component/admin/menu/menu.component'\nimport { FormsComponent } from './component/admin/forms/forms.component'\nimport { KioskeComponent } from './component/admin/kioske/kioske.component'\nimport { SignupComponent } from './component/admin/signup/signup.component'\nimport { ProfileComponent } from './component/admin/profile/profile.component'\nimport { ListRunComponent } from './component/admin/list-run/list-run.component'\nimport { SettingsComponent } from './component/admin/settings/settings.component'\nimport { ListEditComponent } from './component/admin/list-edit/list-edit.component'\nimport { EmailEditComponent } from './component/admin/email-edit/email-edit.component'\nimport { EmailListComponent } from './component/admin/email-list/email-list.component'\nimport { FormListsComponent } from './component/admin/form-lists/form-lists.component'\nimport { DataFormsComponent } from './component/admin/data-forms/data-forms.component'\nimport { IdentificationComponent } from './component/admin/identification/identification.component'\n\n// form, home, shared\nimport { FormComponent } from './component/form/form.component'\nimport { HomeComponent } from './component/home/home.component'\nimport { SignOffComponent } from './component/sign-off/sign-off.component'\nimport { DiscrepancyComponent } from './component/discrepancy/discrepancy.component'\nimport { BottomSheetCommentComponent } from './component/comment/bottom-sheet-comment/bottom-sheet-comment.component'\nimport { CorrectiveActionComponent } from './component/corrective-action/corrective-action.component'\n\n// vehicle-inspection\nimport { DetailComponent } from './component/forms/vehicle-inspection/detail/detail.component'\nimport { HeaderComponent } from './component/forms/vehicle-inspection/header/header.component'\nimport { VehicleInspectionComponent } from './component/forms/vehicle-inspection/vehicle-inspection.component'\nimport { DetailCommentsComponent } from './component/forms/vehicle-inspection/detail-comments/detail-comments.component'\n\n// worksite-safety-inspection\nimport { WorksiteSafetyInspectionComponent } from './component/forms/worksite-safety-inspection/worksite-safety-inspection.component'\nimport { WorksiteSafetyHeaderComponent } from './component/forms/worksite-safety-inspection/worksite-safety-header/worksite-safety-header.component'\nimport { WorksiteSafetyHazardComponent } from './component/forms/worksite-safety-inspection/worksite-safety-hazard/worksite-safety-hazard.component'\nimport { WorksiteSafetyGroundComponent } from './component/forms/worksite-safety-inspection/worksite-safety-ground/worksite-safety-ground.component'\nimport { WorksiteSafetyJobsiteComponent } from './component/forms/worksite-safety-inspection/worksite-safety-jobsite/worksite-safety-jobsite.component'\nimport { WorksiteSafetyEquipmentComponent } from './component/forms/worksite-safety-inspection/worksite-safety-equipment/worksite-safety-equipment.component'\nimport { WorksiteSafetyErpPlanningComponent } from './component/forms/worksite-safety-inspection/worksite-safety-erp-planning/worksite-safety-erp-planning.component'\nimport { WorksiteFireExtinguisherComponent } from './component/forms/worksite-safety-inspection/worksite-fire-extinguisher/worksite-fire-extinguisher.component'\nimport { WorksiteSafetyConfinedSpaceComponent } from './component/forms/worksite-safety-inspection/worksite-safety-confined-space/worksite-safety-confined-space.component'\nimport { WorksiteSafetyHotWorkComponent } from './component/forms/worksite-safety-inspection/worksite-safety-hot-work/worksite-safety-hot-work.component'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from './component/forms/worksite-safety-inspection/bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\nimport { WorksiteKeyPositiveFindingComponent } from './component/forms/worksite-safety-inspection/worksite-key-positive-finding/worksite-key-positive-finding.component'\n\n//spot check safety\nimport { SpotCheckSafetyComponent } from './component/forms/spot-check-safety/spot-check-safety.component'\nimport { HazardIdentificationControlComponent } from './component/forms/spot-check-safety/hazard-identification-control/hazard-identification-control.component'\nimport { RulesWorkProceduresComponent } from './component/forms/spot-check-safety/rules-work-procedures/rules-work-procedures.component'\nimport { IncidentReportingComponent } from './component/forms/spot-check-safety/incident-reporting/incident-reporting.component'\nimport { CommunicationTrainingComponent } from './component/forms/spot-check-safety/communication-training/communication-training.component'\nimport { PersonalProtectiveEquipmentComponent } from './component/forms/spot-check-safety/personal-protective-equipment/personal-protective-equipment.component'\nimport { SafetyEquipmentComponent } from './component/forms/spot-check-safety/safety-equipment/safety-equipment.component'\nimport { CorrectiveActionsComponent } from './component/forms/spot-check-safety/corrective-actions/corrective-actions.component'\nimport { SpotCheckSafetyHeaderComponent } from './component/forms/spot-check-safety/spot-check-safety-header/spot-check-safety-header.component'\n\n// json rendering components\nimport { RunComponent } from './component/run/run.component'\nimport { GpsRunComponent } from './component/run-controls/gps-run/gps-run.component'\nimport { LabelRunComponent } from './component/run-controls/label-run/label-run.component'\nimport { RadioRunComponent } from './component/run-controls/radio-run/radio-run.component'\nimport { SliderRunComponent } from './component/run-controls/slider-run/slider-run.component'\nimport { ToggleRunComponent } from './component/run-controls/toggle-run/toggle-run.component'\nimport { TextboxRunComponent } from './component/run-controls/textbox-run/textbox-run.component'\nimport { QuillRunComponent } from './component/run-controls/quill-run/quill-run.component'\nimport { CheckboxRunComponent } from './component/run-controls/checkbox-run/checkbox-run.component'\nimport { SelectRunComponent } from './component/run-controls/select-run/select-run.component'\nimport { TextareaRunComponent } from './component/run-controls/textarea-run/textarea-run.component'\nimport { FileuploadRunComponent } from './component/run-controls/fileupload-run/fileupload-run.component'\nimport { QrcodeRunComponent } from './component/run-controls/qrcode-run/qrcode-run.component'\nimport { BarcodeRunComponent } from './component/run-controls/barcode-run/barcode-run.component'\nimport { ScannerBarcodeRunComponent } from './component/run-controls/scanner-barcode-run/scanner-barcode-run.component'\nimport { ScannerQrcodeRunComponent } from './component/run-controls/scanner-qrcode-run/scanner-qrcode-run.component'\n\n//indexedDB\nimport { IdbPersistenceService } from './service-idb/idb-persistence.service'\n\n// notifications\nimport { NotificationComponent } from './component/notification/notification.component'\nimport { NotificationOpenComponent } from './component/notification/notification-open/notification-open.component'\nimport { NotificationSignedComponent } from './component/notification/notification-signed/notification-signed.component'\nimport { NotificationActionComponent } from './component/notification/notification-action/notification-action.component'\nimport { ResetPasswordComponent } from './component/admin/reset-password/reset-password.component'\nimport { LayoutComponent } from './component/layout/layout.component'\nimport { SendPasswordComponent } from './component/admin/send-password/send-password.component'\nimport { LayoutAdminComponent } from './component/layout-admin/layout-admin.component'\nimport { ListFormsComponent } from './component/admin/list-forms/list-forms.component'\nimport { LabelsComponent } from './component/admin/labels/labels.component'\nimport { LabelComponent } from './component/admin/label/label.component'\n\n// meaningful site tour\nimport { MeaningfulSiteTourComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour.component'\nimport { MeaningfulSiteTourHeaderComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-header/meaningful-site-tour-header.component'\nimport { MeaningfulSiteTourNotesComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-notes/meaningful-site-tour-notes.component'\nimport { MeaningfulSiteTourSuggestionsComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-suggestions/meaningful-site-tour-suggestions.component'\nimport { MeaningfulSiteTourTodoComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-todo/meaningful-site-tour-todo.component'\n\n// kioske pages\nimport { PricingComponent } from './component/pricing/pricing.component'\nimport { WhyusComponent } from './component/whyus/whyus.component'\nimport { ContactComponent } from './component/contact/contact.component'\nimport { TermsComponent } from './component/terms/terms.component'\nimport { SigninComponent } from './component/admin/signin/signin.component'\nimport { SignupBottomComponent } from './component/admin/signup-bottom/signup-bottom.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    PinComponent,\n    FormComponent,\n    HomeComponent,\n    DataComponent,\n    MenuComponent,\n    AdminComponent,\n    SignOffComponent,\n    SettingsComponent,\n    FormListsComponent,\n    DataFormsComponent,\n    IdentificationComponent,\n    RunComponent,\n    GpsRunComponent,\n    ListRunComponent,\n    LabelRunComponent,\n    RadioRunComponent,\n    SliderRunComponent,\n    ToggleRunComponent,\n    TextboxRunComponent,\n    QuillRunComponent,\n    CheckboxRunComponent,\n    SelectRunComponent,\n    TextareaRunComponent,\n    FileuploadRunComponent,\n    QrcodeRunComponent,\n    BarcodeRunComponent,\n    ScannerBarcodeRunComponent,\n    ScannerQrcodeRunComponent,\n    DetailComponent,\n    HeaderComponent,\n    DiscrepancyComponent ,\n    VehicleInspectionComponent,\n    PicsComponent,\n    DetailCommentsComponent,\n    CameraComponent,\n    PicDeleteComponent,\n    FormsComponent,\n    EmailListComponent,\n    ListEditComponent,\n    EmailEditComponent,\n    NotificationComponent,\n    NotificationOpenComponent,\n    NotificationSignedComponent,\n    NotificationActionComponent,\n    ResetPasswordComponent,\n    LayoutComponent,\n    SendPasswordComponent,\n    LayoutAdminComponent,\n    ProfileComponent,\n    WorksiteSafetyInspectionComponent,\n    WorksiteSafetyHeaderComponent,\n    WorksiteSafetyHazardComponent,\n    WorksiteSafetyGroundComponent,\n    WorksiteSafetyJobsiteComponent,\n    WorksiteSafetyEquipmentComponent,\n    WorksiteSafetyErpPlanningComponent,\n    WorksiteFireExtinguisherComponent,\n    WorksiteSafetyConfinedSpaceComponent,\n    WorksiteSafetyHotWorkComponent,\n    ListFormsComponent,\n    VoiceComponent,\n    LabelsComponent,\n    LabelComponent,\n    CommentComponent,\n    MeaningfulSiteTourComponent,\n    MeaningfulSiteTourNotesComponent,\n    MeaningfulSiteTourHeaderComponent,\n    SpotCheckSafetyComponent,\n    HazardIdentificationControlComponent,\n    RulesWorkProceduresComponent,\n    IncidentReportingComponent,\n    CommunicationTrainingComponent,\n    PersonalProtectiveEquipmentComponent,\n    SafetyEquipmentComponent,\n    CorrectiveActionsComponent,\n    SpotCheckSafetyHeaderComponent,\n    BottomSheetWorksiteSafetyInspectionComponent,\n    BottomSheetCommentComponent,\n    CorrectiveActionComponent,\n    WorksiteKeyPositiveFindingComponent,\n    KioskeComponent,\n    SignupComponent,\n    PricingComponent,\n    WhyusComponent,\n    ContactComponent,\n    TermsComponent,\n    SigninComponent,\n    SignupBottomComponent,\n    SdkComponent,\n    MeaningfulSiteTourSuggestionsComponent,\n    MeaningfulSiteTourTodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    QuillModule,\n    NgxBarcode6Module,\n    NgxDropzoneModule,\n    DragDropModule,\n    ZXingScannerModule,\n    NgxQRCodeModule,\n    PipeModule,\n    WebcamModule,\n    IonicModule.forRoot(),\n    NgxsModule.forRoot(States, { developmentMode: !environment.production }),\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  entryComponents: [\n    VoiceComponent,\n    ListEditComponent,\n    EmailEditComponent,\n    DetailCommentsComponent\n  ],\n  providers: [\n    \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfig,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (idbPersistenceService: IdbPersistenceService) => () => idbPersistenceService.connect(),\n      deps: [IdbPersistenceService],\n      multi: true\n    },\n    Device\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User, UserIdb, Tenant, Form } from './auth-state.model'\n\nexport class SetIsIdentified {\n  static type = '[Auth] SetIsIdentified'\n  constructor(public isIdentified: boolean) {}\n}\n\nexport class SetIsSignIn {\n  static type = '[Auth] SetIsSignIn'\n  constructor(public isSignIn: boolean) {}\n}\n\nexport class SetIsAdmin {\n  static type = '[Auth] SetIsAdmin'\n  constructor(public isAdmin: boolean) {}\n}\n\nexport class SetIsListMenu {\n  static type = '[Auth] SetIsMenuList'\n  constructor(public isListMenu: boolean) {}\n}\nexport class SetPage {\n  static type = '[Auth] SetPage'\n  constructor(public page: string) {}\n}\nexport class SetEmailList {\n  static type = '[Auth] SetEmailList'\n  constructor(public emailList: []) {}\n}\nexport class SetWorkers {\n  static type = '[Auth] SetWorkers'\n  constructor(public workers: any[]) {}\n}\n\nexport class SetSupervisors {\n  static type = '[Auth] SetSupervisors'\n  constructor(public supervisors: any[]) {}\n}\n\nexport class SetLookupListData {\n  static type = '[Auth] SetLookupListData'\n  constructor(public lookupListData: []) {}\n}\n\nexport class SetLookupListName {\n  static type = '[Auth] SetLookupListName'\n  constructor(public lookupListName: string) {}\n}\n\nexport class SetLookupListNames {\n  static type = '[Auth] SetLookupListNames'\n  constructor(public lookupListNames: []) {}\n}\n\nexport class SetChildPage {\n  static type = '[Auth] SetChildPage'\n  constructor(public childPage: string) {}\n}\n\nexport class SetChildPageLabel {\n  static type = '[Auth] SetChildPageLabel'\n  constructor(public childPageLabel: string) {}\n}\n\nexport class SetTenant {\n  static type = '[Auth] SetTenant'\n  constructor(public tenant: Tenant) {}\n}\n\nexport class SetUser {\n  static type = '[Auth] SetUser'\n  constructor(public user: User) {}\n}\n\nexport class SetUserIdb {\n  static type = '[Auth] SetUserIdb'\n  constructor(public userIdb: UserIdb) {}\n}\n\nexport class SetSelectedForm {\n  static type = '[Auth] SetSelectedForm'\n  constructor(public selectedForm: Form) {}\n}\n\nexport class ResetAuth {\n  static type = '[Auth] ResetAuth'\n  constructor() {}\n}\n\nexport class SetForms {\n  static type = '[Auth] SetForms'\n  constructor(public forms: any[]) {}\n}\n\nexport class SetSelectedVoiceFieldLabel {\n  static type = '[Auth] SetSelectedVoiceFieldLabel'\n  constructor(public selectedVoiceFieldLabel: string) {}\n}\n\nexport class SetFormLabels {\n  static type = '[Auth] SetFormLabels'\n  constructor(public formLabels: any[]) {}\n}\n\nexport class SetCurrentFormId {\n  static type = '[Auth] SetCurrentFormId'\n  constructor(public currentFormId: string) {}\n}\nexport class SetFormData {\n  static type = '[Auth] SetFormData'\n  constructor(public formData: {}) {}\n}\nexport class SetNotificationId {\n  static type = '[Auth] SetNotificationId'\n  constructor(public notificationId: number) {}\n}\nexport class SetChildPageIcon {\n  static type = '[Auth] SetChildPageIcon'\n  constructor(public childPageIcon: string) {}\n}\nexport class SetKioske {\n  static type = '[Auth] SetKioske'\n  constructor(public kioske: boolean) {}\n}\nexport class SetFormsPublished {\n  static type = '[Auth] SetFormsPublished'\n  constructor(public formsPublished: Form[]) {}\n}\n\n\n\n","export const MEANINGFUL_SITE_TOUR = {\n  id: 'meaningful-site-tour',\n  icon: 'tour',\n  description: 'Safety Environment Compliance',\n  name: 'Meaningful Site Tour',\n  type: 'custom',\n  is_published: false,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: []\n}","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Choose a date</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <mat-form-field>\n    <mat-label>Company Name</mat-label>\n    <input matInput placeholder=\"Company Name\" formControlName=\"CompanyName\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Employee/Consultant Name</mat-label>\n    <input matInput placeholder=\"Employee/Consultant Name\" formControlName=\"EmployeeName\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Job Description</mat-label>\n    <input matInput placeholder=\"Job Description\" formControlName=\"JobDescription\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Location</mat-label>\n    <input matInput placeholder=\"\" formControlName=\"Location\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field class=\"bot-pad full-width-field\">\n    <mat-label>Evaluator</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter First Name & Last Name\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-hint>Worker Completing the Tour</mat-hint>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete #autoSupervisors=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n        required>\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-spot-check-safety-header',\n  templateUrl: './spot-check-safety-header.component.html',\n  styleUrls: ['./spot-check-safety-header.component.scss']\n})\nexport class SpotCheckSafetyHeaderComponent implements OnInit {\n\n  @Input() headerForm\n\n  constructor(public autoCompleteService: AutoCompleteService) { }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n  }\n  \n}\n","<mat-toolbar>\n  <span>{{ childPageLabel$ | async }}</span>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-icon-button (click)=\"close()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-toolbar>\n<div class=\"content\">\n  <mat-tab-group [(selectedIndex)]=\"tabIndex\" mat-stretch-tabs>\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"material-icons-outlined\">radio_button_unchecked</mat-icon>\n        &nbsp;&nbsp;&nbsp;Open\n      </ng-template>\n      <app-notification-open (pdf)=\"pdf()\"></app-notification-open>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"material-icons-outlined\">border_color</mat-icon>\n        &nbsp;&nbsp;&nbsp;Signed\n      </ng-template>\n      <app-notification-signed (pdf)=\"pdf()\"></app-notification-signed>\n    </mat-tab>\n  </mat-tab-group>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { Router } from '@angular/router'\n\nimport { FormControl } from \"@angular/forms\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetPage, SetChildPageLabel, SetChildPage } from '../../state/auth/auth-state.actions'\n\nimport { ApiService } from \"../../service/api.service\"\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent implements OnInit {\n\n  tabIndex\n  notificationOpen\n  notificationSigned\n  public msg = new FormControl([''])\n\n  @Select(AuthState.childPageLabel) childPageLabel$: Observable<string>\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.tabIndex = this.store.selectSnapshot(NotificationState.notificationTab)\n  }\n\n  close() {\n    this.store.select(AuthState.isSignIn).subscribe((isSignIn) => {\n      if (isSignIn) {\n        this.store.dispatch(new SetPage('admin'))\n        this.store.dispatch(new SetChildPage('data-forms'))\n        this.store.dispatch(new SetChildPageLabel('Data Forms'))\n      }\n      else {\n        this.store.dispatch(new SetPage('home'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n        this.router.navigate([''])\n      }\n    })\n    \n  }\n\n  pdf() {\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n    this.apiService.getPDF(notification.pdf)\n  }\n  \n}\n","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { EquipmentLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-equipment',\n  templateUrl: './worksite-safety-equipment.component.html',\n  styleUrls: ['./worksite-safety-equipment.component.scss']\n})\nexport class WorksiteSafetyEquipmentComponent implements OnInit {\n\n  @Input() equipmentForm\n\n  label = EquipmentLabels\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {}\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {title: 'Summit Vehicles & Equipment', label: label, field: field, type: 'isSummitVehicleEquipment'}\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"equipmentForm\">\n    <div class=\"text-color radio-center\">{{label.ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects,'ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.InteriorOfVehicleKeptTidyAndClean}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"InteriorOfVehicleKeptTidyAndClean\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.InteriorOfVehicleKeptTidyAndClean,'InteriorOfVehicleKeptTidyAndClean')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">{{label.VehicleWindshieldFreeOfMajorChipsAndCracks}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"VehicleWindshieldFreeOfMajorChipsAndCracks\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.VehicleWindshieldFreeOfMajorChipsAndCracks,'VehicleWindshieldFreeOfMajorChipsAndCracks')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.DailyPreUseVehicleInspectionCompleted}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DailyPreUseVehicleInspectionCompleted\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.DailyPreUseVehicleInspectionCompleted,'DailyPreUseVehicleInspectionCompleted')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EquipmentPreUseInspectionCompleted}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EquipmentPreUseInspectionCompleted\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EquipmentPreUseInspectionCompleted,'EquipmentPreUseInspectionCompleted')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.CargoIinternalAndExternalProperlyStowedAndSecured}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"CargoIinternalAndExternalProperlyStowedAndSecured\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.CargoIinternalAndExternalProperlyStowedAndSecured,'CargoIinternalAndExternalProperlyStowedAndSecured')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.HornIsInProperWorkingCondition}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HornIsInProperWorkingCondition\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.HornIsInProperWorkingCondition,'HornIsInProperWorkingCondition')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.HeadlightsAreInProperWorkingCondition}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HeadlightsAreInProperWorkingCondition\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.HeadlightsAreInProperWorkingCondition,'HeadlightsAreInProperWorkingCondition')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SignalLightsAreInProperWorkingCondition}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SignalLightsAreInProperWorkingCondition\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SignalLightsAreInProperWorkingCondition,'SignalLightsAreInProperWorkingCondition')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EmergencyWarningStrobeLightEquippedOnVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencyWarningStrobeLightEquippedOnVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EmergencyWarningStrobeLightEquippedOnVehicle,'EmergencyWarningStrobeLightEquippedOnVehicle')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SafetyBuggyWhipEquippedOnVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyBuggyWhipEquippedOnVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SafetyBuggyWhipEquippedOnVehicle,'SafetyBuggyWhipEquippedOnVehicle')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.FirstAidKitEquippedInVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FirstAidKitEquippedInVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.FirstAidKitEquippedInVehicle,'FirstAidKitEquippedInVehicle')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EmergencySurvivalKitEquippedInVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencySurvivalKitEquippedInVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EmergencySurvivalKitEquippedInVehicle,'EmergencySurvivalKitEquippedInVehicle')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>\n","<form class=\"run-container\" *ngIf=\"selectedForm$ | async\" [formGroup]=\"runForm\">\n  <div *ngFor=\"let control of (selectedForm$ | async).details; let i=index\">\n    <div [ngSwitch]=\"control.type\">\n      <app-label-run *ngSwitchCase=\"'Label'\" [index]=i></app-label-run>\n      <app-gps-run *ngSwitchCase=\"'GPS'\" [runForm]=\"runForm\" ></app-gps-run>\n      <app-textbox-run *ngSwitchCase=\"'Textbox'\" [runForm]=\"runForm\" [index]=i>\n      </app-textbox-run>\n      <app-textarea-run *ngSwitchCase=\"'Textarea'\" [runForm]=\"runForm\" [index]=i>\n      </app-textarea-run>\n      <app-checkbox-run *ngSwitchCase=\"'Checkbox'\" [runForm]=\"runForm\" [index]=i>\n      </app-checkbox-run>\n      <app-radio-run *ngSwitchCase=\"'Radio'\" [runForm]=\"runForm\" [index]=i>\n      </app-radio-run>\n      <app-select-run *ngSwitchCase=\"'Select'\" [runForm]=\"runForm\" [index]=i>\n      </app-select-run>\n      <app-slider-run *ngSwitchCase=\"'Slider'\" [runForm]=\"runForm\" [index]=i>\n      </app-slider-run>\n      <app-toggle-run *ngSwitchCase=\"'Toggle'\" [runForm]=\"runForm\" [index]=i>\n      </app-toggle-run>\n    </div>\n  </div>\n</form>\n<div fxLayoutAlign=\"center center\">\n  <mat-icon class=\"icon-120px-action\" (click)=\"saveCloud()\">fingerprint</mat-icon>\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { FormBuilder, FormGroup } from '@angular/forms'\n\nimport { Store, Select } from '@ngxs/store'\nimport { ApiService } from \"../../service/api.service\"\nimport { SuccessService } from \"../../service/success.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\nimport { TransformRunService } from \"../../service/transform-run.service\"\n\nimport { AuthState } from '../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-run',\n  templateUrl: './run.component.html',\n  styleUrls: ['./run.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RunComponent implements OnInit {\n\n  @Input() runForm: FormGroup\n\n  @Select(AuthState.selectedForm) selectedForm$: Observable<any>\n  \n  id\n  newform\n  user\n  data\n  forms\n  lists\n  formObj\n  fileArray\n  user_created\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    public idbCrudService: IdbCrudService,\n    private successService: SuccessService,\n    private transformRunService: TransformRunService) {\n\n    this.runForm = this.fb.group({})\n  }\n\n  ngOnInit() {}\n\n  saveCloud() {\n    let obj = {\n      data: this.transformRunService.parseDataCloud(this.runForm.value, this.store.selectSnapshot(AuthState.selectedForm[\"formObject\"])),\n      columns: this.transformRunService.parseColumns(this.store.selectSnapshot(AuthState.selectedForm[\"formObject\"][\"form\"][\"details\"])),\n      user: this.store.selectSnapshot(AuthState.user),\n      formObj: this.store.selectSnapshot(AuthState.selectedForm[\"formObject\"])\n    }\n\n    this.apiService.save(obj).subscribe(() => {\n      this.successService.popSnackbar('Successfully Saved.')\n    })\n  }\n\n}\n\n\n","import { NotificationModel } from './notification-state.model'\n\nexport class SetNotification {\n  static type = '[Notification] SetNotification'\n  constructor(public notification: NotificationModel) {}\n}\n\nexport class SetNotificationMyCount {\n  static type = '[Notification] SetNotificationMyCount'\n  constructor(public notificationMyCount: number) {}\n}\n\nexport class SetNotificationAdminCount {\n  static type = '[Notification] SetNotificationAdminCount'\n  constructor(public notificationAdminCount: number) {}\n}\n\nexport class SetNotificationTab {\n  static type = '[Notification] SetNotificationTab'\n  constructor(public notificationTab: number) {}\n}\n\nexport class SetNotificationOpen {\n  static type = '[Notification] SetNotificationOpen'\n  constructor(public notificationOpen: NotificationModel) {}\n}\n\nexport class SetNotificationSigned {\n  static type = '[Notification] SetNotificationSigned'\n  constructor(public notificationSigned: NotificationModel) {}\n}\n\nexport class SetNotificationAllOpen {\n  static type = '[Notification] SetNotificationAllOpen'\n  constructor(public notificationAllOpen: NotificationModel) {}\n}\n\nexport class SetNotificationAllSigned {\n  static type = '[Notification] SetNotificationAllSigned'\n  constructor(public notificationAllSigned: NotificationModel) {}\n}\n\nexport class SetNotificationIdx {\n  static type = '[Notification] SetNotificationIdx'\n  constructor(public notificationIdx: number) {}\n}\n\n\n\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-incident-reporting',\n  templateUrl: './incident-reporting.component.html',\n  styleUrls: ['./incident-reporting.component.scss']\n})\nexport class IncidentReportingComponent {\n\n  @Input() incidentForm\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.incidentForm, formField, title)\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.incidentForm)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"incidentForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Is there an Incident reporting process in place?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"IncidentReporting\">\n        <mat-radio-button (click)=\"toggle('IncidentReporting')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Is there an Incident reporting process in place?','IncidentReporting')\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Is there a near miss/incident reporting form which includes follow-up?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"NearMissReporting\">\n        <mat-radio-button (click)=\"toggle('NearMissReporting')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Is there a near miss/incident reporting form which includes follow-up?','NearMissReporting')\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are incidents reported and was the problem fixed the last time there was a near miss or incident?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ProblemFixed\">\n        <mat-radio-button (click)=\"toggle('ProblemFixed')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Are incidents reported and was the problem fixed the last time there was a near miss or incident?','ProblemFixed')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are management and workers involved in solving the issues?\n    </div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SolvingIssues\">\n        <mat-radio-button (click)=\"toggle('SolvingIssues')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Are management and workers involved in solving the issues?','SolvingIssues')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Incident Reporting Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('IncidentComments','Incident Reporting Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"IncidentComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n","export class SetIsWorksiteSafetyHeaderValid {\n  static type = '[WorksiteSafetyStateModel] SetHeader'\n  constructor(public isWorksiteSafetyHeaderValid: boolean) {}\n}\n\nexport class SetIsSafetyEquipment {\n  static type = '[WorksiteSafetyStateModel] SetIsSafetyEquipment'\n  constructor(public IsSafetyEquipment: boolean) {}\n}\n\nexport class SetIsAppropriateTraining {\n  static type = '[WorksiteSafetyStateModel] SetAppropriateTraining'\n  constructor(public isAppropriateTraining: boolean) {}\n}","import { Component, Input } from '@angular/core';\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-rules-work-procedures',\n  templateUrl: './rules-work-procedures.component.html',\n  styleUrls: ['./rules-work-procedures.component.scss']\n})\nexport class RulesWorkProceduresComponent {\n\n  @Input() rulesForm\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  ngOnInit(): void {\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.rulesForm, formField, title)\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.rulesForm)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"rulesForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Are there procedures for high risk or critical work? Are they available and used?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"Procedures\">\n        <mat-radio-button (click)=\"toggle('Procedures')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Are there procedures for high risk or critical work? Are they available and used?','Procedures')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are there written emergency plans available and communicated to personnel on the work site?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencyPlan\">\n        <mat-radio-button (click)=\"toggle('EmergencyPlan')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Are there written emergency plans available and communicated to personnel on the work site?','EmergencyPlan')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Rules & Work Procedures Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('RulesComments','Rules & Work Procedures Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"RulesComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ (selectedForm$ | async).name }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer mat-headline hand\" (click)=\"close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<ul class=\"list-unstyled hand\">\n  <li *ngFor=\"let src of (pics$ | async); let idx = index\">\n    <img [src]=\"src\" height=\"100\" width=\"100\" (click)=\"selectPhoto(idx)\">\n  </li>\n</ul>","import { Component, ViewContainerRef, Inject } from \"@angular/core\"\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { WebcamImage } from 'ngx-webcam'\n\nimport { PicDeleteComponent } from '../pic-delete/pic-delete.component'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\n\n@Component({\n  selector: 'app-pics',\n  templateUrl: './pics.component.html',\n  styleUrls: ['./pics.component.scss']\n})\nexport class PicsComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n  @Select(AuthState.selectedForm) selectedForm$: Observable<string>\n\n  public webcamImage: WebcamImage = null\n  \n  WIDTH = window.innerWidth\n  HEIGHT = window.innerHeight\n\n  idx\n  hidden = false\n  public isChangedBlock = {}\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public viewContainerRef: ViewContainerRef,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    public matBottomSheetRef: MatBottomSheetRef<PicsComponent>) { }\n\n  selectPhoto(idx: number) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = idx\n    this.dialog.open(PicDeleteComponent, dialogConfig).afterClosed().subscribe(_ => {\n      const pics = this.store.selectSnapshot(DeviceState.pics)\n      if (pics.length == 0) this.close()\n    })\n  }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Store } from '@ngxs/store'\nimport { SetPage } from '../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../environments/environment'\n\nimport { SignupComponent } from \"../admin/signup/signup.component\"\nimport { ContactComponent } from \"../contact/contact.component\"\n\n@Component({\n  selector: 'app-whyus',\n  templateUrl: './whyus.component.html',\n  styleUrls: ['./whyus.component.scss']\n})\nexport class WhyusComponent implements OnInit {\n\n  githubUrl = environment.githubUrl\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet,) { }\n\n  ngOnInit(): void {\n  }\n\n  signup() {\n    this.bottomSheet.open(SignupComponent)\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('kioske'))\n  }\n\n  contact() {\n    this.bottomSheet.open(ContactComponent)\n  }\n\n}","<div class=\"header\">\n  <mat-toolbar>\n    Why Us?\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <div class=\"card__header\">\n    <h1 class=\"text-color\">Digitalized Mobile Inspections</h1>\n    <h2 class=\"card__subtitle\">Simple, hassle-free mobile digitalization</h2>\n    <div fxLayoutAlign=\"center\">\n      <img src=\"assets/formlocoMap.svg\" width=\"300px\">\n    </div>\n  </div>\n  <div class=\"card__body_pink\">\n    <h1>Mission</h1>\n    <div class=\"card__text card__text--dark\">\n      formloco is committed to providing simple yet compelling business digitalization products and services.\n    </div>\n    <h1>Products</h1>\n    <h2 class=\"card__title card__title--dark\">Free Mobile App</h2>\n    <div class=\"card__text card__text--dark\">\n      Share, collect and memorialize your inspections with live notifications & sign-off.\n    </div>\n    <h2 class=\"card__title card__title--dark\">Free Design Studio</h2>\n    <div class=\"card__text card__text--dark\">\n      Convert paper-driven data to digital forms with design studio. Publish forms to your mobile app.\n    </div>\n    <h1>Features</h1>\n    <h2 class=\"card__title card__title--dark\">Memorialize Your Work</h2>\n    <div class=\"card__text card__text--dark\">\n      Auto-generate signed PDF documents with form data, pictures and history.\n    </div>\n    <h2 class=\"card__title card__title--dark\">Real-time Notifications</h2>\n    <div class=\"card__text card__text--dark\">\n      Stay intouch with your team and sign-off on your work quickly.\n    </div>\n    <h2 class=\"card__title card__title--dark\">Smart Forms</h2>\n    <div class=\"card__text card__text--dark\">\n      Update smart form content with notes and pictures over time until sign-off.\n    </div>\n    <h2 class=\"card__title card__title--dark\">Flexible Deployment</h2>\n    <div class=\"card__text card__text--dark\">\n      formloco runs everywhere, deploy on our cloud or your provider or internally.\n    </div>\n    <h1>Services</h1>\n    <div class=\"card__text card__text--dark\">\n      formloco is built to be tailored to fit your business, contact us to learn more.\n    </div>\n    <h2 class=\"card__title card__title--dark\">Commitment to Open Source Software</h2>\n    <div class=\"card__text card__text--dark\">\n      Design studio is freely available on github.\n    </div>\n  </div>\n</div>\n\n<div class=\"footer\">\n  <mat-toolbar>\n    <a class=\"green\" (click)=\"signup()\" mat-stroked-button>\n      <mat-icon>rocket_launch</mat-icon>&nbsp;Sign Up!\n    </a>\n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=\"contact()\" mat-stroked-button color=\"primary\">\n      contact\n    </button>\n    <a mat-button href='{{githubUrl}}' target=\"blank\" color=\"primary\">\n      github\n    </a>\n  </mat-toolbar>\n</div>","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { environment } from '../../../../environments/environment'\n\nimport { AppService } from \"../../../service/app.service\"\n\nimport { SetChildPage, SetChildPageLabel, SetChildPageIcon } from '../../../state/auth/auth-state.actions'\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n\n  designUrl = environment.designUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService) { }\n\n  selectMenu(child) {\n    if (child === 'data-forms') {\n      this.store.dispatch(new SetChildPageIcon('table_chart'))\n      this.store.dispatch(new SetChildPageLabel('Data'))\n    }\n      \n    if (child === 'list-forms') {\n      this.store.dispatch(new SetChildPageIcon('list_alt'))\n      this.store.dispatch(new SetChildPageLabel('Lists'))\n    }\n      \n    if (child === 'email') {\n      this.store.dispatch(new SetChildPageIcon('manage_accounts'))\n      this.store.dispatch(new SetChildPageLabel('Users'))\n    }\n      \n    if (child === 'forms') {\n      this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n    }\n\n    if (child === 'sdk') {\n      this.store.dispatch(new SetChildPageIcon('settings_applications'))\n      this.store.dispatch(new SetChildPageLabel('SDK'))\n    }\n      \n    this.store.dispatch(new SetChildPage(child))\n  }\n\n}\n","<!-- <div class=\"menu-padding\" fxLayout=\"row\" fxLayoutAlign=\"center center\"> -->\n<div class=\"footer\">\n  <mat-toolbar>\n    <button color=\"primary\" (click)=\"selectMenu('data-forms')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">table_chart</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('list-forms')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">list_alt</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('email')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">manage_accounts</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('forms')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">dynamic_form</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('sdk')\" mat-button>\n      SDK\n    </button>\n    <span class=\"toolbar-spacer\"></span>\n    <a mat-stroked-button color=\"accent\" href=\"{{designUrl}}\" target=\"_blank\">\n      <mat-icon>design_services</mat-icon>\n    </a>\n  </mat-toolbar>\n</div>","export class SetIsHeaderValid {\n  static type = '[VehicleInspection] SetHeader'\n  constructor(public isHeaderValid: boolean) {}\n}\n\nexport class SetSelectedComments {\n  static type = '[VehicleInspection] SetSelectedComments'\n  constructor(public selectedComments: []) {}\n}\n\n","import { Component } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\n\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { ResetTypeComments } from '../../../comment/state/comment.actions'\n\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\n@Component({\n  selector: 'app-bottom-sheet-worksite-safety-inspection',\n  templateUrl: './bottom-sheet-worksite-safety-inspection.component.html',\n  styleUrls: ['./bottom-sheet-worksite-safety-inspection.component.scss']\n})\nexport class BottomSheetWorksiteSafetyInspectionComponent {\n\n  constructor(private store: Store, private bottomSheetRef: MatBottomSheetRef<BottomSheetWorksiteSafetyInspectionComponent>) { }\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss()\n    event.preventDefault()\n  }\n\n  close() {\n    this.bottomSheetRef.dismiss()\n  }\n\n  deleteComments() {\n    this.store.dispatch(new ResetTypeComments(this.store.selectSnapshot(CommentState.commentType)))\n    this.close()\n  }\n\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">Unsaved Comments!</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<br>\n<p style=\"text-align:center\"><b>Should you decide to continue your comments will be deleted.</b></p>\n<br>\n<div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"2rem\">\n  <button (click)=\"deleteComments()\" mat-raised-button color=\"warn\">\n    Delete\n  </button>\n  <button mat-stroked-button (click)=\"close()\">\n    Cancel\n  </button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-textarea-run',\n  templateUrl: './textarea-run.component.html',\n  styleUrls: ['./textarea-run.component.scss']\n})\nexport class TextareaRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    if (this.appService.detailArray[this.index].required)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(null, Validators.required));\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(''));\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding\">\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex> \n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <textarea matInput [type]=\"appService.detailArray[index].types\"\n              formControlName=\"{{appService.detailArray[index].formControlName}}\"\n              [placeholder]=\"appService.detailArray[index].placeholder\"\n              [required]=\"appService.detailArray[index].required\">\n    </textarea>\n    <mat-error>\n      {{appService.detailArray[index].error}}\n    </mat-error>\n  </mat-form-field>\n</div>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatNativeDateModule } from '@angular/material/core' \nimport { MatButtonModule } from '@angular/material/button'\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatStepperModule } from '@angular/material/stepper' \nimport { MatRadioModule } from '@angular/material/radio'\nimport { OverlayModule } from '@angular/cdk/overlay'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatListModule } from '@angular/material/list'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { ScrollingModule } from '@angular/cdk/scrolling'\nimport { PortalModule } from '@angular/cdk/portal'\nimport { MatSliderModule } from '@angular/material/slider'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet'\nimport { MatBadgeModule } from '@angular/material/badge'\nimport { MatTabsModule } from '@angular/material/tabs'\n \n@NgModule({\n  exports:[\n    FormsModule,\n    MatSortModule,\n    MatIconModule,\n    MatMenuModule, \n    MatTableModule, \n    MatInputModule,\n    MatChipsModule,\n    MatButtonModule, \n    MatSelectModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    ReactiveFormsModule, \n    MatAutocompleteModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatRadioModule,\n    OverlayModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatListModule,\n    MatCardModule,\n    MatToolbarModule,\n    ScrollingModule,\n    PortalModule,\n    MatSliderModule,\n    MatGridListModule,\n    MatBottomSheetModule,\n    MatBadgeModule,\n    MatTabsModule\n  ],\n  providers: []\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage, SetChildPageLabel, SetTenant, SetIsSignIn, SetChildPage, SetChildPageIcon } from '../../../state/auth/auth-state.actions'\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  @Select(DeviceState.background) background$: Observable<string>\n\n  tenant\n  logo = environment.logo\n  signinForm: FormGroup\n\n  redirectForgotPasswordUrl = environment.redirectForgotPasswordUrl\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    private successService: SuccessService) {\n    this.signinForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.tenant = this.store.selectSnapshot(AuthState.tenant)\n  }\n\n  signin() {\n    let obj = {\n      email: this.signinForm.controls['email'].value,\n      password: this.signinForm.controls['password'].value\n    }\n    this.authService.signinEmail(obj).subscribe((user: any) => {\n      this.store.dispatch(new SetTenant({ tenant_id: user.tenant_id, email: user.email }))\n\n      const obj = {\n        user: {\n          isDarkMode: true,\n          email: user.email,\n          tenant_id: user.tenant_id\n        }\n      }\n      this.idbCrudService.clear('prefs')\n      this.idbCrudService.put('prefs', obj)\n\n      this.authService.register(this.signinForm.value).subscribe(_ => {\n        this.store.dispatch(new SetPage('admin'))\n        this.store.dispatch(new SetChildPage('forms'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n        this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n        this.store.dispatch(new SetIsSignIn(true))\n        this.appService.initializeAdminNotifications()\n\n      })\n    })\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('home'))\n  }\n\n  getEmail() {\n    this.store.dispatch(new SetPage('send-password'))\n  }\n\n  forgotPasswordEmail() {\n    let obj = {\n      email: this.tenant.email,\n      url: this.redirectForgotPasswordUrl\n    }\n    if (obj.email !== null)\n      this.emailService.forgotPassword(obj).subscribe(() => {\n        this.successService.popSnackbar('Email Sent.')\n      })\n    else this.errorService.popSnackbar('Please Enter a Valid Email.')\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <mat-toolbar>\n    <mat-icon class=\"material-icons-outlined text-color\">admin_panel_settings</mat-icon>&nbsp;<span class=\"text-color\">Admin</span> \n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=close() mat-icon-button>\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <br>\n  <form [formGroup]=\"signinForm\">\n    <div fxLayout=\"column\" class=\"padding20 text-color\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label>Company Email</mat-label>\n        <input matInput placeholder=\"Company Email\" formControlName=\"email\" type=\"text\" required>\n        <mat-error>\n          Proper email is required!\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>Password</mat-label>\n        <input matInput placeholder=\"Enter Password\" formControlName=\"password\" type=\"password\" required>\n        <mat-error>\n          Password is required!\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\n      <button (click)=close() mat-stroked-button color=\"primary\">\n        CANCEL\n      </button>\n      <button (click)=signin() mat-raised-button color=\"primary\" [disabled]=\"!signinForm.valid\">\n        OK\n      </button>\n    </div>\n  </form>\n  <br>\n  <div fxLayoutAlign=\"center\" class=\"text-color\">\n    <h3>Forgot Password?</h3>\n  </div>\n  <div class=\"padding20\">\n    <button (click)=\"forgotPasswordEmail\" mat-stroked-button color=\"primary\" fxFlex>Email Password Reset</button>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-barcode-run',\n  templateUrl: './barcode-run.component.html',\n  styleUrls: ['./barcode-run.component.scss']\n})\nexport class BarcodeRunComponent implements OnInit {\n\n  @Input() index;\n\n  value;\n\n  constructor(public appService: AppService) { }\n\n  ngOnInit(): void {}\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <ngx-barcode6 [bc-format]=\"'MSI'\" [bc-value]=\"appService.detailArray[index].value\" [bc-display-value]=\"true\">\n  </ngx-barcode6>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor, HttpRequest, HttpResponse, HttpHandler,\n  HttpEvent, HttpErrorResponse\n}\n  from '@angular/common/http';\n\nimport { ErrorService } from '../service/error.service';\nimport { SuccessService } from '../service/success.service';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class HttpConfig implements HttpInterceptor {\n\n  constructor(\n    public errorService: ErrorService,\n    public successService: SuccessService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const token = localStorage.getItem('formToken')\n\n    if (token)\n      request = request.clone(\n        { headers: request.headers.set('x-access-token', token) }\n      );\n\n    if (!request.headers.has('Content-Type'))\n      request = request.clone(\n        { headers: request.headers.set('Content-Type', 'application/json') }\n      );\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        return event;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        const msg = \"Whoa, something went wrong\"\n        this.errorService.popSnackbar(msg);\n        return throwError(error);\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as DeviceActions from './device-state.actions'\nimport { DeviceStateModel } from './device-state.model'\n\n@Injectable()\n@State<DeviceStateModel>({\n  name: 'device',\n  defaults: {\n    background: '#3b3b3b',\n    pics: [],\n    voice: [],\n    transcription: ''\n  }\n})\n\nexport class DeviceState {\n\n  @Selector()\n  static lat(state: DeviceStateModel): number {\n    return state.lat\n  }\n\n  @Selector()\n  static long(state: DeviceStateModel): number {\n    return state.long\n  }\n\n  @Selector()\n  static background(state: DeviceStateModel): string {\n    return state.background\n  }\n\n  @Selector()\n  static screenSize(state: DeviceStateModel): string {\n    return state.screenSize\n  }\n\n  @Selector()\n  static screenWidth(state: DeviceStateModel): string {\n    return state.screenWidth\n  }\n\n  @Selector()\n  static isIOS(state: DeviceStateModel): boolean {\n    return state.isIOS\n  }\n\n  @Selector()\n  static isSafari(state: DeviceStateModel): boolean {\n    return state.isSafari\n  }\n\n  @Selector()\n  static isDarkMode(state: DeviceStateModel): boolean {\n    return state.isDarkMode\n  }\n\n  @Selector()\n  static pics(state: DeviceStateModel): [] {\n    return state.pics\n  }\n\n  @Selector()\n  static voice?(state: DeviceStateModel): any[] {\n    return state.voice\n  }\n\n  @Selector()\n  static transcription?(state: DeviceStateModel): string {\n    return state.transcription\n  }\n\n  @Selector()\n  static isOnline?(state: DeviceStateModel): boolean {\n    return state.isOnline\n  }\n\n  @Action(DeviceActions.SetLat)\n  onSetLat(ctx: StateContext<DeviceStateModel>, { lat }: DeviceActions.SetLat) {\n    ctx.patchState({\n      lat: lat\n    })\n  }\n\n  @Action(DeviceActions.SetLong)\n  onSetLong(ctx: StateContext<DeviceStateModel>, { long }: DeviceActions.SetLong) {\n    ctx.patchState({\n      long: long\n    });\n  }\n\n  @Action(DeviceActions.SetBackground)\n  onSetBackGround(ctx: StateContext<DeviceStateModel>, { background }: DeviceActions.SetBackground) {\n    ctx.patchState({\n      background: background\n    });\n  }\n\n  @Action(DeviceActions.SetScreenSize)\n  onSetScreenSize(ctx: StateContext<DeviceStateModel>, { screenSize }: DeviceActions.SetScreenSize) {\n    ctx.patchState({\n      screenSize: screenSize\n    });\n  }\n\n  @Action(DeviceActions.SetScreenWidth)\n  onSetScreenWidth(ctx: StateContext<DeviceStateModel>, { screenWidth }: DeviceActions.SetScreenWidth) {\n    ctx.patchState({\n      screenWidth: screenWidth\n    });\n  }\n\n  @Action(DeviceActions.SetIsIOS)\n  onSetIsIOS(ctx: StateContext<DeviceStateModel>, { isIOS }: DeviceActions.SetIsIOS) {\n    ctx.patchState({\n      isIOS: isIOS\n    });\n  }\n\n  @Action(DeviceActions.SetIsSafari)\n  onSetIsSafari(ctx: StateContext<DeviceStateModel>, { isSafari }: DeviceActions.SetIsSafari) {\n    ctx.patchState({\n      isSafari: isSafari\n    });\n  }\n\n  @Action(DeviceActions.SetPics)\n  onSetPics(ctx: StateContext<DeviceStateModel>, { pics }: DeviceActions.SetPics) {\n    ctx.patchState({\n      pics: pics\n    });\n  }\n\n  @Action(DeviceActions.SetIsDarkMode)\n  onSetIsDarkMode(ctx: StateContext<DeviceStateModel>, { isDarkMode }: DeviceActions.SetIsDarkMode) {\n    ctx.patchState({\n      isDarkMode: isDarkMode\n    });\n  }\n\n  @Action(DeviceActions.SetVoice)\n  onSetVoice(ctx: StateContext<DeviceStateModel>, { voice }: DeviceActions.SetVoice) {\n    ctx.patchState({\n      voice: voice\n    });\n  }\n\n  @Action(DeviceActions.SetTranscription)\n  onSetTanscription(ctx: StateContext<DeviceStateModel>, { transcription }: DeviceActions.SetTranscription) {\n    ctx.patchState({\n      transcription: transcription\n    });\n  }\n\n  @Action(DeviceActions.SetIsOnline)\n  onSetIsOnline(ctx: StateContext<DeviceStateModel>, { isOnline }: DeviceActions.SetIsOnline) {\n    ctx.patchState({\n      isOnline: isOnline\n    });\n  }\n\n\n  \n  \n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"hotWorkForm\">\n    <div class=\"text-color radio-center\">{{label.DoesTheProjectInvolveHotWork}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DoesTheProjectInvolveHotWork\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false)\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isHotwork$ | async)\">\n      <div class=\"text-color radio-center\">{{label.HotWorkPermitIssued}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"HotWorkPermitIssued\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.HotWorkPermitIssued,'HotWorkPermitIssued')\" value=\"no\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireHazardsIdentifiedControls}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireHazardsIdentifiedControls\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireHazardsIdentifiedControls,'FireHazardsIdentifiedControls')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireSafetyWatchAvailable}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireSafetyWatchAvailable\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireSafetyWatchAvailable,'FireSafetyWatchAvailable')\" value=\"no\">\n            No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsHotwork } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { HotWorkLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n@Component({\n  selector: 'app-worksite-safety-hot-work',\n  templateUrl: './worksite-safety-hot-work.component.html',\n  styleUrls: ['./worksite-safety-hot-work.component.scss']\n})\nexport class WorksiteSafetyHotWorkComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isHotwork) isHotwork$: Observable<string>\n\n  @Input() hotWorkForm\n\n  label = HotWorkLabels\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetTypeFilter('isFireExtinguisher'))\n    this.hotWorkForm.controls['DoesTheProjectInvolveHotWork'].patchValue('yes')\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsHotwork(toggle))\n    // if (toggle) {\n    //   const comments:any = this.store.selectSnapshot(CommentState.commentsByType)\n    //   if (comments.length > 0) this.bottomSheet.open(BottomSheetWorksiteSafetyInspectionComponent)\n    // }\n    // if (!toggle) {\n    //   this.openComment(this.label.DoesTheProjectInvolveHotWork, 'DoesTheProjectInvolveHotWork')\n    // }\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Fire Extinguisher', label: label, field: field, type: 'isFireExtinguisher' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","import { Component, Input } from '@angular/core'\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentComponent } from '../../../comment/comment.component'\n\n// import { DetailCommentsComponent } from '../detail-comments/detail-comments.component'\n\nimport { Store } from '@ngxs/store'\nimport { VehicleInspectionState } from '../state/vehicle-inspection.state'\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent {\n\n  @Input() detailForm\n\n  yAxis = 0\n  xAxis = 0\n\n  isHistory = false\n  fieldName\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService) { }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isVehicleInspection' }\n    this.dialog.open(CommentComponent, dialogConfig).afterClosed().subscribe((isSave) => {\n      this.detailForm.controls[field].patchValue(isSave)\n    })\n  }\n\n  closeOverlay() {\n    this.isHistory = false\n  }\n\n}\n","<form class=\"header-form\" [formGroup]=\"detailForm\">\n  <div fxLayout=\"column\" color=\"primary\" fxLayoutAlign=\"center start\">\n    <label>The items on this inspection sheet should be checked monthly. A form should be filled out for each vehicle driven.\n      <br>\n      <br> If item requires attention check it off and provide comments, they will be added to the discrepancies list below.</label>\n    <br>\n    <mat-checkbox (click)=\"openComment('Ignition Key', 'IgnitionKey')\" color=\"primary\" class=\"text-color\"\n      formControlName=\"IgnitionKey\">Ignition Key</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Oil Level', 'OilLevel')\" color=\"primary\" class=\"text-color middle-padding\"\n      formControlName=\"OilLevel\">Oil Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Coolant Level', 'CoolantLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"CoolantLevel\">Coolant Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Washer Fluid Level', 'WasherFluidLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"WasherFluidLevel\">Washer Fluid Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Power Steering Fluid Level', 'PowerSteeringFluidLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"PowerSteeringFluidLevel\">Power Steering Fluid Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check for Air Gauge', 'AirGauge')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"AirGauge\">Check for Air Gauge</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Horn', 'Horn')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"Horn\">Check Horn</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Heater/Defroster', 'HeaterDefroster')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"HeaterDefroster\">Check Heater/Defroster</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Windshield Wipers/Washers', 'WindshieldWipersWashers')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"WindshieldWipersWashers\">Check Windshield Wipers/Washers</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check all signal lights', 'AllSignalLights')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"AllSignalLights\">Check all signal lights</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Interior lights', 'InteriorLights')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"InteriorLights\">Check Interior lights</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Mirrors for Damage and Adjustments', 'MirrorsDamageAdjustments')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"MirrorsDamageAdjustments\">Check Mirrors for Damage and Adjustments</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Windshield Clear Visibility, No Cracks', 'WindshieldVisibility')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"WindshieldVisibility\">Windshield Clear Visibility, No Cracks</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Visual Inspection for Exterior Damage/Leaks', 'VisualInspectionExterior')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"VisualInspectionExterior\">Visual Inspection for Exterior Damage/Leaks\n      <br> Under Vehicle</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check inside Engine compartment for Leaks/Loose','InsideEngineCompartment')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"InsideEngineCompartment\">Check inside Engine compartment for Leaks/Loose\n      <br> Items</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Start Engine & check Transmission Fluid Level', 'TransmissionFluidLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"TransmissionFluidLevel\">Start Engine & check Transmission Fluid Level\n      <br> (Fluid should be hot)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Highlight/Signal lights/4way flashes', 'HighlightSignal4wayTailBackup')\"\n      color=\"primary\" class=\"text-color bottom-padding\" formControlName=\"HighlightSignal4wayTailBackup\">Check Highlight/Signal lights/4way flashes\n      <br>/Tail lights/Backup lights</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check fuel level (Should Not be Less Than ½ Tank)', 'FuelLevel')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"FuelLevel\">Check fuel level (Should Not be Less Than ½ Tank)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check First Aid Kit Available and full', 'FirstAidKit')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"FirstAidKit\">Check First Aid Kit Available and full\n      <br> (Check expiry dates on contents)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Fire Extinguisher is available', 'FireExtinguisher')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"FireExtinguisher\">Check Fire Extinguisher is available:\n      <br> Gauge showing charged, proper seal,\n      <br> pin and inspection</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Survival kit available: candles, emergency blanket', 'SurvivalKit')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"SurvivalKit\">Survival kit available: candles, emergency blanket,\n      <br> tow rope, booster cables, light sticks, water</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Fuel Key, check used', 'FuelKey')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"FuelKey\">Fuel Key, check used</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Radio (Two-way check), if required', 'TwoWayRadio')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"TwoWayRadio\">Check Radio (Two-way check), if required</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Tires for wear and pressure', 'Tires')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"Tires\">Check Tires for wear and pressure\n      <br> (as per manufacturer)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Spill Kit, if required', 'SpillKit')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"SpillKit\">Check Spill Kit, if required</mat-checkbox>\n  </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-textbox-run',\n  templateUrl: './textbox-run.component.html',\n  styleUrls: ['./textbox-run.component.scss']\n})\nexport class TextboxRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    if (this.appService.detailArray[this.index].required)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(null, Validators.required));\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index].formControlName, new FormControl(''));\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding text-color\">\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex> \n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <input matInput [type]=\"appService.detailArray[index].types\"\n           formControlName=\"{{appService.detailArray[index].formControlName}}\"\n           [placeholder]=\"appService.detailArray[index].placeholder\" \n           [required]=\"appService.detailArray[index].required\">\n    <mat-error>\n      {{appService.detailArray[index].error}}\n    </mat-error>\n  </mat-form-field>\n</div>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { JobsiteFormLabels } from '../state/worksite-safety-inspection-state.model'\n\n\n@Component({\n  selector: 'app-worksite-safety-jobsite',\n  templateUrl: './worksite-safety-jobsite.component.html',\n  styleUrls: ['./worksite-safety-jobsite.component.scss']\n})\nexport class WorksiteSafetyJobsiteComponent implements OnInit {\n\n  @Input() jobsiteForm\n\n  label = JobsiteFormLabels\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {title: 'Worksite Safety Hazard', label: label, field: field, type: 'isWorksiteSafetyJobsite'}\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"jobsiteForm\">\n    <div class=\"text-color radio-center\">{{label.WorkAreaClearlyIdentified}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"WorkAreaClearlyIdentified\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.WorkAreaClearlyIdentified,'WorkAreaClearlyIdentified')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AppropriateAccessAndEgressRoutesAreEstablished}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AppropriateAccessAndEgressRoutesAreEstablished\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AppropriateAccessAndEgressRoutesAreEstablished,'AppropriateAccessAndEgressRoutesAreEstablished')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">{{label.SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns,'SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AllOpenExcavationsAreClearlyMarked}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AllOpenExcavationsAreClearlyMarked\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AllOpenExcavationsAreClearlyMarked,'AllOpenExcavationsAreClearlyMarked')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.PublicAccessToTheSiteControlled}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PublicAccessToTheSiteControlled\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.PublicAccessToTheSiteControlled,'PublicAccessToTheSiteControlled')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    \n    <div class=\"text-color radio-center\">{{label.PrimeContractorClearlyIdentifiedWithSignage}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PrimeContractorClearlyIdentifiedWithSignage\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.PrimeContractorClearlyIdentifiedWithSignage,'PrimeContractorClearlyIdentifiedWithSignage')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.IsThereEmergencyEquipmentOnSite}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"IsThereEmergencyEquipmentOnSite\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.IsThereEmergencyEquipmentOnSite,'IsThereEmergencyEquipmentOnSite')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.FirstAidKitAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FirstAidKitAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.FirstAidKitAvailable,'FirstAidKitAvailable')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.BlanketsAndStretcherAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"BlanketsAndStretcherAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.BlanketsAndStretcherAvailable,'BlanketsAndStretcherAvailable')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EyeWashBottleAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EyeWashBottleAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EyeWashBottleAvailable,'EyeWashBottleAvailable')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SpillKitAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SpillKitAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SpillKitAvailable,'SpillKitAvailable')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.H2SPersonalGasMonitorsOnsiteHaveBeenBumped}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"H2SPersonalGasMonitorsOnsiteHaveBeenBumped\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.H2SPersonalGasMonitorsOnsiteHaveBeenBumped,'H2SPersonalGasMonitorsOnsiteHaveBeenBumped')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>","<div *ngIf=\"appService.detailArray[index]\" \n     class=\"{{appService.detailArray[index].fontValue}} text-color\">\n  {{ appService.detailArray[index].label }}\n</div>\n","import { Component, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-label-run',\n  templateUrl: './label-run.component.html',\n  styleUrls: ['./label-run.component.scss']\n})\nexport class LabelRunComponent {\n\n  @Input() index;\n\n  constructor(public appService: AppService) { }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-slider-run',\n  templateUrl: './slider-run.component.html',\n  styleUrls: ['./slider-run.component.scss']\n})\nexport class SliderRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n  \n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    this.runForm.addControl(this.appService.detailArray[this.index]\n        .formControlName, new FormControl(''));\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n  <div fxLayout=\"row\">\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <div class=\"slider-margin\">\n    <mat-slider formControlName=\"{{appService.detailArray[index].formControlName}}\" \n      fxFlex\n      [max]=\"appService.detailArray[index].max\"\n      [min]=\"appService.detailArray[index].min\"\n      [step]= \"appService.detailArray[index].step\"\n      [thumbLabel]=\"appService.detailArray[index].label\"\n      [tickInterval]=\"appService.detailArray[index].interval\"\n      [value]=\"appService.detailArray[index].value\"\n      [vertical]=\"appService.detailArray[index].vertical\">\n    </mat-slider>\n  </div>\n</div>\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div fxLayoutAlign=\"center\">\n    <div [fxFlex]=\"screenWidth$ | async\">\n      <app-pin (changeTheme)=changeTheme($event) *ngIf=\"!(page$ | async)\"></app-pin>\n      <app-notification *ngIf=\"(page$ | async) === 'notification'\"></app-notification>\n      <app-admin *ngIf=\"(page$ | async) === 'admin'\"></app-admin>\n      <app-form *ngIf=\"(page$ | async) === 'form-admin'\"></app-form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs'\n\nimport { AppService } from \"../../service/app.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\n\nimport { SetPage, SetIsSignIn, SetChildPageLabel, SetChildPage } from '../../state/auth/auth-state.actions'\n\n\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-layout-admin',\n  templateUrl: './layout-admin.component.html',\n  styleUrls: ['./layout-admin.component.scss']\n})\nexport class LayoutAdminComponent implements OnInit {\n\n  @Select(AuthState.page) page$: Observable<string>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.screenWidth) screenWidth$: Observable<string>\n\n  kioske = environment.kioske\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private idbCrudService: IdbCrudService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.kioske) {\n      this.store.dispatch(new SetPage('admin'))\n      this.store.dispatch(new SetChildPage('forms'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n      this.store.dispatch(new SetIsSignIn(true))\n      this.appService.initializeAdminNotifications()\n    }\n  }\n\n  changeTheme() {\n    let darkClassName\n    let isDarkMode = this.store.selectSnapshot(DeviceState.isDarkMode)\n\n    if (isDarkMode) {\n      darkClassName = ''\n      this.setUser(darkClassName, false)\n    }\n    else {\n      darkClassName = 'darkMode'\n      this.setUser(darkClassName, true)\n    }\n    location.reload()\n  }\n\n  setUser(darkClassName, darkModeToggle) {\n    let user = this.store.selectSnapshot(AuthState.userIdb)\n    user.isDarkMode = darkModeToggle\n    this.idbCrudService.put('prefs', { id: 1, user: user })\n    this.appService.setMode(darkClassName)\n  }\n\n}\n","import { CorrectiveAction } from './corrective-action.model'\n\nexport class SetCorrectiveActions {\n  static type = '[CorrectiveActionStateModel] SetCorrectiveActions'\n  constructor(public correctiveActions: CorrectiveAction[]) {}\n}\n\nexport class SetCorrectiveAction {\n  static type = '[CorrectiveActionStateModel] SetCorrectiveAction'\n  constructor(public correctiveAction: CorrectiveAction) {}\n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\nimport { DeviceState } from '../../../../state/device/device.state'\n\nimport { SetSelectedVoiceFieldLabel } from '../../../../state/auth/auth-state.actions'\nimport { SetTranscription } from '../../../../state/device/device-state.actions'\n\nimport { VoiceComponent } from '../../../voice/voice.component'\nimport { AppService } from \"../../../../service/app.service\"\n\n@Component({\n  selector: 'app-corrective-actions',\n  templateUrl: './corrective-actions.component.html',\n  styleUrls: ['./corrective-actions.component.scss']\n})\nexport class CorrectiveActionsComponent {\n\n  @Input() correctiveActionForm\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService) { }\n\n  ngOnInit(): void {\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.correctiveActionForm, formField, title)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"correctiveActionForm\">\n    <ion-label position=\"stacked\">Date for corrective actions to be completed</ion-label>\n    <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"DateCorrectiveActionToBeCompleted\">\n    </ion-datetime>\n    <mat-divider></mat-divider>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Corrective Action Required</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('CorrectiveActionRequired','Hazard Identification & Control Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"CorrectiveActionRequired\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Person(s) responsible for corrective actions</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('PersonResonsibleCorrectiveAction','Person(s) Resonsible Corrective Actions')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"PersonResonsibleCorrectiveAction\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n      <ion-label position=\"stacked\">Date corrective actions were complete</ion-label>\n    <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"DateCorrectiveActionCompleted\">\n    </ion-datetime>\n    <mat-divider></mat-divider>\n    </div>\n    <mat-form-field>\n      <mat-label>Signature of person responsible</mat-label>\n      <input matInput placeholder=\"Person Responsible\" formControlName=\"PersonResonsible\" type=\"text\" required>\n    </mat-form-field>\n  </form>\n</div>\n\n\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as VehicleInspectionActions from './vehicle-inspection-state.actions'\nimport { VehicleInspectionStateModel } from './vehicle-inspection-state.model'\n\n@Injectable()\n@State<VehicleInspectionStateModel>({\n  name: 'vehicleinspection',\n  defaults: {\n    isHeaderValid: false,\n    selectedComments: []\n  }\n})\n\nexport class VehicleInspectionState {\n\n  @Selector()\n  static isHeaderValid(state: VehicleInspectionStateModel): boolean {\n    return state.isHeaderValid\n  }\n\n  @Selector()\n  static selectedComments(state: VehicleInspectionStateModel): [] {\n    return state.selectedComments\n  }\n\n  @Action(VehicleInspectionActions.SetIsHeaderValid)\n  onSetIsHeader(ctx: StateContext<VehicleInspectionStateModel>, { isHeaderValid }: VehicleInspectionActions.SetIsHeaderValid) {\n    ctx.patchState({\n      isHeaderValid: isHeaderValid\n    });\n  }\n\n  @Action(VehicleInspectionActions.SetSelectedComments)\n  onSetSelectedComments(ctx: StateContext<VehicleInspectionStateModel>, { selectedComments }: VehicleInspectionActions.SetSelectedComments) {\n    ctx.patchState({\n      selectedComments: selectedComments\n    });\n  }\n\n}\n\n","import { Component, OnInit, Inject } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\nimport { FormControl } from '@angular/forms'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { ApiService } from \"../../../service/api.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-list-edit',\n  templateUrl: './list-edit.component.html',\n  styleUrls: ['./list-edit.component.scss']\n})\nexport class ListEditComponent implements OnInit {\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  id\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private apiService: ApiService,\n    private successService: SuccessService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<ListEditComponent>\n  ) { }\n\n  ngOnInit(): void {\n    const kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.id = new FormControl({value: null, disabled: kioske})  \n    this.id.setValue(this.data.element.data)\n  }\n\n  update() {\n    let obj = {\n      id: this.data['element']['id'],\n      name: this.store.selectSnapshot(AuthState.lookupListName),\n      value: this.id.value\n    }\n    this.apiService.update(obj).subscribe((data:any) => {\n      this.appService.dataSource = data.rows\n      this.dialogRef.close()\n      this.successService.popSnackbar('Item updated')\n    })\n  }\n\n  delete() {\n    let obj = {\n      id: this.data['element']['id'],\n      name: this.store.selectSnapshot(AuthState.lookupListName)\n    }\n    this.apiService.delete(obj).subscribe((data:any) => {\n      this.appService.dataSource = data.rows\n      this.dialogRef.close()\n      this.successService.popSnackbar('Item deleted')\n    })\n  }\n\n}\n","<div fxLayoutAlign=\"end center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n  <mat-icon>close</mat-icon>\n</div>\n<div fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" [formControl]=\"id\">\n  </mat-form-field>\n</div>\n<div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n  <div>\n    <button (click)=\"update()\" mat-stroked-button color=\"primary\" [disabled]=\"kioske$ | async\">Save</button>\n  </div>\n  <div>\n    <button (click)=\"delete()\" mat-stroked-button color=\"warn\" [disabled]=\"kioske$ | async\">Delete</button>\n  </div>\n</div>","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">Document Sign-off</div>\n  <div fxLayoutAlign=\"start center\" class=\"hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<div mat-subheader>{{data.notification.form_name}}</div>\n<br>\n<div fxLayout=\"column\">\n  <div><b>Date:</b>&nbsp;&nbsp;{{data.form.data.header.Date | date: 'shortDate'}}</div>\n  <div><b>Worker:</b>&nbsp;&nbsp;{{data.form.data.header.Worker}}</div>\n  <div><b>Supervisor:</b>&nbsp;&nbsp;{{data.form.data.header.Supervisor}}</div>\n</div>\n<br>\n<mat-divider></mat-divider>\n<br><br>\n<div *ngIf=\"!kioske\" fxLayout=\"column\" class=\"hand\" fxLayoutAlign=\"space-around center\">\n  <mat-icon class=\"icon-169px-action\" (click)=\"signForm()\">fingerprint</mat-icon>\n  <div class=\"text-color bottom-padding\">\n    <mat-label>Press to Sign</mat-label>\n  </div>\n</div>\n\n<div *ngIf=\"kioske\" fxLayout=\"column\" class=\"hand\" fxLayoutAlign=\"space-around center\">\n  <mat-icon class=\"icon-169px text-color\" (click)=\"signForm()\">fingerprint</mat-icon>\n  <div class=\"text-color bottom-padding\">\n    <mat-label>Press to Sign</mat-label>\n  </div>\n</div>\n<div class=\"padding\" fxLayoutGap=\"20px\" class=\"footer\">\n  <button color=\"primary\" mat-mini-fab>\n    <mat-icon class=\"material-icons-outlined hand\" (click)=\"openPdf()\">picture_as_pdf</mat-icon>\n  </button>\n</div>","import { Component, Inject } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { ApiService } from '../../../service/api.service'\n\nimport { Store, Select } from '@ngxs/store'\nimport { SetPage, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from \"../../../state/device/device.state\"\n\nimport { NotificationState } from '../../../state/notification/notification.state'\n@Component({\n  selector: 'app-notification-action',\n  templateUrl: './notification-action.component.html',\n  styleUrls: ['./notification-action.component.scss']\n})\n\nexport class NotificationActionComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n\n  picArray = []\n  kioske = environment.kioske\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private apiService: ApiService,\n    private snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<NotificationActionComponent>\n  ) { }\n\n  openPdf() {\n    this.apiService.getPDF(this.data.notification.pdf)\n  }\n\n  signForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const selectedForm: any = this.store.selectSnapshot(AuthState.selectedForm)\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n\n    let obj = {\n      docID: selectedForm.id,\n      form_id: selectedForm.form_id,\n      notification: notification,\n      data_id: notification.data_id,\n      date: this.appService.now,\n      email: user.email,\n      name: user.name\n    }\n    this.apiService.signForm(obj).subscribe((res: any) => {\n      this.appService.initializeMyNotifications(user.email)\n      this.store.dispatch(new SetPage('home'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n      this.dialogRef.close()\n      this.snackBar.open(res.message, 'Success', {\n        duration: 3000,\n        verticalPosition: 'bottom'\n      })\n    })\n\n  }\n\n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-safety-equipment',\n  templateUrl: './safety-equipment.component.html',\n  styleUrls: ['./safety-equipment.component.scss']\n})\nexport class SafetyEquipmentComponent {\n\n  @Input() safetyEquipmentForm\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.safetyEquipmentForm, formField, title)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.safetyEquipmentForm)\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  openCommentOnly(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety', isCommentOnly: true }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"safetyEquipmentForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Is the appropriate safety equipment available and being used</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyEquipmentAvailable\">\n        <mat-radio-button (click)=\"toggle('SafetyEquipmentAvailable')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Is the appropriate safety equipment available and being used','SafetyEquipmentAvailable')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Fire Fighting equipment (inspected, tagged, accessible, good condition)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FireFightingEquipment\">\n        <mat-radio-button (click)=\"toggle('FireFightingEquipment')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Fire Fighting equipment (inspected, tagged, accessible, good condition)','FireFightingEquipment')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Rotating Equiment Guards</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"RotatingEquimentGuards\">\n        <mat-radio-button (click)=\"toggle('RotatingEquimentGuards')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Rotating Equiment Guards','RotatingEquimentGuards')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">First Aid Kit</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FirstAidKit\">\n        <mat-radio-button (click)=\"toggle('FirstAidKit')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('First Aid Kit','FirstAidKit')\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Fall Arrest equipment (Ladders, steps, harness, lanyards, etc.)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FallArrestEquipment\">\n        <mat-radio-button (click)=\"toggle('FallArrestEquipment')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Fall Arrest equipment (Ladders, steps, harness, lanyards, etc.)','FallArrestEquipment')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Emergency Shut down and Alarm Systems (positive air shutoffs, backup alarms, etc.)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencySystems\">\n        <mat-radio-button (click)=\"toggle('EmergencySystems')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Emergency Shut down and Alarm Systems (positive air shutoffs, backup alarms, etc.)','EmergencySystems')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">Other (Specify)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"Other\">\n        <mat-radio-button (click)=\"openCommentOnly('Other (Specify)','Other')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Other (Specify)','Other')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Safety Equipment Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('SafetyEquipmentComments','Safety Equipment Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"SafetyEquipmentComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-personal-protective-equipment',\n  templateUrl: './personal-protective-equipment.component.html',\n  styleUrls: ['./personal-protective-equipment.component.scss']\n})\nexport class PersonalProtectiveEquipmentComponent {\n\n  @Input() personalEquipmentForm\n  \n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.personalEquipmentForm, formField, title)\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  openCommentOnly(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety', isCommentOnly: true }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.personalEquipmentForm)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"personalEquipmentForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Is the appropriate PPE available and being used</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PPEAvailable\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Is the appropriate PPE available and being used','PPEAvailable')\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Hard Hat</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HardHat\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Hard Hat','HardHat')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Safety Glasses</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyGlasses\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Safety Glasses','SafetyGlasses')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Footwear</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"Footwear\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Footwear','Footwear')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Protective clothing (FR coveralls, gloves, etc)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ProtectiveClothing\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Protective clothing (FR coveralls, gloves, etc)','ProtectiveClothing')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Hearing protection</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HearingProtection\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Hearing protection','HearingProtection')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">Respiratory protection (Appropriate for the hazard)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"RespiratoryProtection\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Respiratory protection (Appropriate for the hazard)','RespiratoryProtection')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Personal gas monitor</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PersonalGasMonitor\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Personal gas monitor','PersonalGasMonitor')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Communication equipment</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"CommunicationEquipment\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Communication equipment','CommunicationEquipment')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Other equipment (please specify)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"OtherEquipment\">\n        <mat-radio-button (click)=\"openCommentOnly('Other equipment (please specify)','OtherEquipment')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Other equipment (please specify)','OtherEquipment')\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Personal Equipment Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('PersonalEquipmentComments','Personal Protective Equipment Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"PersonalEquipmentComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AppService } from \"../../../service/app.service\"\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { SetPage, SetUserIdb, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\nimport { SignupBottomComponent } from \"../signup-bottom/signup-bottom.component\"\nimport { ContactComponent } from \"../../contact/contact.component\"\n@Component({\n  selector: 'app-kioske',\n  templateUrl: './kioske.component.html',\n  styleUrls: ['./kioske.component.scss']\n})\nexport class KioskeComponent implements OnInit {\n\n  tenant\n  logo = environment.logo\n  version = environment.version\n  linkedinUrl = environment.linkedinUrl\n  githubUrl = environment.githubUrl\n  designUrl = environment.designUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.tenant = this.store.selectSnapshot(AuthState.tenant)\n  }\n\n  testdrive() {\n    let obj = {\n      isDarkMode: true,\n      email: this.tenant.email\n    }\n   \n    this.store.dispatch(new SetPage('home'))\n    this.store.dispatch(new SetUserIdb(obj))\n    this.store.dispatch(new SetIsDarkMode(true))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n    this.appService.initializeUser(this.tenant.email)\n  }\n\n  contact() {\n    this.bottomSheet.open(ContactComponent)\n  }\n\n  signin() {\n    this.store.dispatch(new SetPage('identify'))\n  }\n\n  signup() {\n    this.bottomSheet.open(SignupBottomComponent)\n  }\n\n  pricing() {\n    this.store.dispatch(new SetPage('pricing'))\n  }\n\n  whyus() {\n    this.store.dispatch(new SetPage('whyus'))\n  }\n\n}\n","<div class=\"header\">\n  <mat-toolbar>\n    <button (click)=\"whyus()\" mat-button color=\"primary\">\n      Why Us?\n    </button>\n    <button (click)=\"pricing()\" mat-button color=\"primary\">\n      Pricing\n    </button>\n    <button (click)=\"contact()\" mat-button color=\"primary\">\n      Contact\n    </button>\n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=\"signin()\" mat-stroked-button color=\"primary\">\n      Sign In\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <form class=\"container-padding\">\n    <br>\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img style=\"width:400px;\" src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <mat-icon class=\"icon-169px-action\" (click)=\"testdrive()\">fingerprint</mat-icon>\n      </div>\n      <div class=\"mat-headline text-color\" fxLayoutAlign=\"center\">Take a Test Drive</div>\n      <br>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <a href='{{designUrl}}'>\n          <mat-icon color=\"accent\" class=\"icon-169px\">fingerprint</mat-icon>\n        </a>\n      </div>\n      <div class=\"mat-headline text-color\" fxLayoutAlign=\"center\">Got a Doc to Digitialize?</div>\n    </div>\n  </form>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <div class=\"hand\" fxLayoutGap=\"15px\">\n      <a class=\"green\" (click)=\"signup()\" mat-stroked-button>\n        <mat-icon>rocket_launch</mat-icon>&nbsp;Sign Up!\n      </a>\n    </div>\n    <span class=\"toolbar-spacer\"></span>\n    <div fxLayoutGap=\"15px\">\n      <a mat-button href='{{githubUrl}}' target=\"blank\" color=\"primary\">\n        <img src=\"assets/GitHub-Mark-Light-32px.png\">\n      </a>\n    </div>\n    <img src=\"assets/parrot.svg\" height=\"28px\">&nbsp;<span class=\"mat-small text-color\">{{version}}</span>\n  </mat-toolbar>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\"\n\nimport * as _ from 'lodash'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatDialogConfig } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\n\nimport { SetComments } from './state/comment.actions'\nimport { CommentState } from './state/comment.state'\n\nimport { AppService } from \"../../service/app.service\"\nimport { CorrectiveActionComponent } from \"../corrective-action/corrective-action.component\"\nimport { CorrectiveActionState } from \"../corrective-action/state/corrective-action.state\"\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit {\n\n  commentForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<CommentComponent>,\n    public appService: AppService) {\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    const comments = this.store.selectSnapshot(CommentState.comments)\n    const comment = comments.filter(c => c.field == this.data.field)\n    if (comment.length > 0) this.commentForm.controls['comment'].setValue(comment[0].text)\n  }\n\n  save() {\n    const comments = _.cloneDeep(this.store.selectSnapshot(CommentState.comments))\n    const commentIdx = comments.findIndex(c => c.field == this.data.field)\n    \n    if (commentIdx == -1) \n      comments.push({\n        label: this.data.label,\n        text: this.commentForm.controls['comment'].value,\n        field: this.data.field,\n        type: this.data.type\n      })\n    else comments[commentIdx].text = comments[commentIdx].text + this.commentForm.controls['comment'].value\n      \n    this.store.dispatch(new SetComments(comments))\n    this.dialogRef.close(true)\n  }\n\n  delete() {\n    const comments = _.cloneDeep(this.store.selectSnapshot(CommentState.comments))\n    const commentIdx = comments.findIndex(c => c.field == this.data.field)\n    const correctiveActions = _.cloneDeep(this.store.selectSnapshot(CorrectiveActionState.correctiveActions))\n    const correctiveActionsIdx = correctiveActions.findIndex(c => c.field == this.data.field)\n  \n    if (commentIdx != -1) comments.splice(commentIdx, 1)\n    if (correctiveActionsIdx != -1) comments.splice(correctiveActionsIdx, 1)\n    this.store.dispatch(new SetComments(comments))\n    this.dialogRef.close(false)\n  }\n\n  openVoice() {\n    this.appService.popVoiceDialog(this.commentForm, 'comment', this.data.label)\n  }\n\n  openCorrectiveActionDialog() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.maxWidth = '100vw'\n    dialogConfig.maxHeight = '100vh'\n    dialogConfig.width = '100vw'\n    dialogConfig.height = '100vh'\n    dialogConfig.data = { title: this.data.label, label: this.data.label, field: this.data.field, type: this.data.type, actionItem: this.commentForm.controls['comment'].value }\n    this.dialog.open(CorrectiveActionComponent, dialogConfig)\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div>\n    <div class=\"header-font\" fxLayoutAlign=\"start center\">{{ data.title }}</div>\n    <div>{{ data.label }}</div>\n  </div>\n  <div class=\"header-font\" fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<div mat-dialog-content fxLayoutGap=\"20px\">\n  <form class=\"header-form\" [formGroup]=\"commentForm\">\n    <div fxLayout=\"row\" class=\"text-color\">\n      <mat-form-field fxFlex>\n        <mat-label>{{data.placeholder}}</mat-label>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"4\" cdkAutosizeMaxRows=\"10\" matInput formControlName=\"comment\"\n          fxFlex required></textarea>\n      </mat-form-field>\n    </div>\n    <div fxLayoutAlign=\"space-between center\">\n      <div *ngIf=\"!data.isCommentOnly\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n        <button mat-stroked-button (click)=\"openCorrectiveActionDialog()\" [disabled]=\"commentForm.invalid\">Corrective action</button>\n      </div>\n      <button (click)=openVoice() mat-mini-fab color=\"primary\">\n        <mat-icon matSuffix>mic_none</mat-icon>\n      </button>\n    </div>\n  </form>\n  <br>\n  <br>\n  <div mat-dialog-actions class=\"action-btn\" fxLayoutAlign=\"end center\" fxLayoutGap=\"20px\">\n    <button mat-stroked-button color=\"warn\" (click)=\"delete()\">Delete</button>\n    <button mat-stroked-button color=\"accent\" (click)=\"dialogRef.close(true)\">Close</button>\n    <button mat-stroked-button color=\"primary\" (click)=\"save()\">Save</button>\n  </div>\n</div>","import { Injectable } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { map, startWith } from 'rxjs/operators'\nimport { FormControl } from \"@angular/forms\"\n\nimport { Store } from '@ngxs/store'\n\nimport { AuthState } from '../state/auth/auth.state'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoCompleteService {\n\n  lookupLists\n  workers: string[] = []\n  supervisors: string[] = []\n  makes: string[] = []\n  models: string[] = []\n  clients: string[] = []\n\n  public filteredSupervisors$: Observable<any[]>\n  private _filterSupervisors(value: any): any[] {\n    const filterValue = value.toLowerCase()\n    return this.supervisors.filter(supervisor => supervisor[\"name\"]?.toLowerCase().includes(filterValue))\n  }\n\n  public filteredWorkers$: Observable<any[]>\n  private _filterWorkers(value: any): any[] {\n    const filterValue = value.toLowerCase()\n    return this.workers.filter(worker => worker[\"name\"]?.toLowerCase().includes(filterValue))\n  }\n\n  public filteredMakes$: Observable<any[]>\n  private _filterMakes(value: any): any[] {\n    const filterValue = value.toLowerCase()\n    return this.makes.filter(m => m.toLowerCase().includes(filterValue))\n  }\n\n  public filteredModels$: Observable<any[]>\n  private _filterModels(value: any): any[] {\n    const filterValue = value.toLowerCase()\n    return this.models.filter(m => m.toLowerCase().includes(filterValue))\n  }\n\n  public filteredClients$: Observable<any[]>\n  private _filterClients(value: any): any[] {\n    const filterValue = value.toLowerCase()\n    return this.clients.filter(c => c.toLowerCase().includes(filterValue))\n  }\n\n  // form controls for lists\n  public workersControl = new FormControl(null)\n  public supervisorsControl = new FormControl(null)\n  public makesControl = new FormControl(null)\n  public modelsControl = new FormControl(null)\n  public clientsControl = new FormControl(null)\n  public personResonsibleCorrectiveActionControl = new FormControl(null)\n\n  constructor(private store: Store) { \n    this.workers = this.store.selectSnapshot(AuthState.workers)\n    this.filteredWorkers$ = this.workersControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterWorkers(value))\n    )\n    this.supervisors = this.store.selectSnapshot(AuthState.supervisors)\n    this.filteredSupervisors$ = this.supervisorsControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterSupervisors(value))\n    )\n    this.lookupLists = this.store.selectSnapshot(AuthState.lookupListData)\n    this.makes = this.lookupLists.filter(d => { return d.name == \"makes\" })[0][\"rows\"].map(d => { return d.data })\n    this.filteredMakes$ = this.makesControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterMakes(value))\n    )\n    this.models = this.lookupLists.filter(d => { return d.name == \"models\" })[0][\"rows\"].map(d => { return d.data })\n    this.filteredModels$ = this.modelsControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterModels(value))\n    )\n    this.clients = this.lookupLists.filter(d => { return d.name == \"clients\" })[0][\"rows\"].map(d => { return d.data })\n    this.filteredClients$ = this.modelsControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterClients(value))\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\n\nimport { CommentState } from '../state/comment.state'\nimport { SetComments } from '../state/comment.actions'\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { BottomSheetCommentComponent } from '../bottom-sheet-comment/bottom-sheet-comment.component'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet) { }\n\n  bottomSheetComment(field, form) {\n    const comments: any = this.store.selectSnapshot(CommentState.comments)\n    const comment = comments.filter(c => c.field == field)\n    if (comment.length > 0) {\n      this.bottomSheet.open(BottomSheetCommentComponent, {\n        data: { comment: comment }\n      }).afterDismissed().subscribe(isSatisfactory => {\n        if (isSatisfactory) form.controls[field].setValue('satisfactory')\n        else form.controls[field].setValue('unsatisfactory')\n      })\n    }\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild, OnChanges, SimpleChanges } from '@angular/core'\n\nimport { FormControl, Validators } from '@angular/forms'\n\nimport { BehaviorSubject } from 'rxjs'\n\nimport { BarcodeFormat, MultiFormatReader } from '@zxing/library'\n\nimport { AppService } from \"../../../service/app.service\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n// import { ZXingScannerComponent } from '@zxing/ngx-scanner'\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\n@Component({\n  selector: 'app-scanner-qrcode-run',\n  templateUrl: './scanner-qrcode-run.component.html',\n  styleUrls: ['./scanner-qrcode-run.component.scss']\n})\nexport class ScannerQrcodeRunComponent implements OnInit {\n\n  @Input() index\n  @Input() runForm\n\n  loggedIn\n  availableDevices: MediaDeviceInfo[]\n  deviceCurrent: MediaDeviceInfo\n  deviceSelected: string\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.EAN_8,\n    BarcodeFormat.UPC_A,\n    BarcodeFormat.UPC_E,\n    BarcodeFormat.UPC_EAN_EXTENSION,\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.CODE_39\n  ]\n\n  hasDevices: boolean\n  hasPermission: boolean\n\n  qrResultString: string\n  idbData\n  tableData\n  torchEnabled = false\n  torchAvailable$ = new BehaviorSubject<boolean>(false)\n  tryHarder = false\n\n  isEnabled = false\n\n  // @ViewChild(ZXingScannerComponent) scanner: ZXingScannerComponent\n  constructor(public appService: AppService, public idb: IdbCrudService) { }\n\n  ngOnInit(): void {\n    // this.isEnabled = tsrue\n    // this.runForm.addControl(this.builderService.detailArray[this.index].formControlName, new FormControl(''))\n  }\n\n  scan() {\n    this.isEnabled = true\n  }\n\n  stop() {\n    this.isEnabled = false\n    // this.scanner.reset()\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false)\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString\n    this.isEnabled = false\n    //this.runForm.patchValue({'BarCodeScanner0': this.qrResultString})\n    this.idb.put('data', { 'BarCodeScanner0': this.qrResultString })\n    // this.scanner.reset()\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices\n    this.isEnabled = true\n    this.hasDevices = Boolean(devices && devices.length)\n  }\n\n}\n","\n<div fxLayout=\"column\" flex>\n    <zxing-scanner *ngIf=\"isEnabled\" class=\"qr-scanner\" [enable]=\"isEnabled\" (scanSuccess)=\"scanSuccess($event)\" (scanError)=\"scanError($event)\"\n      (scanFailure)=\"scanFailure($event)\" (scanComplete)=\"scanComplete($event)\">\n    </zxing-scanner>\n    <button *ngIf=\"!isEnabled\" type=\"button\" mat-flat-button color=\"primary\" (click)=\"startScan()\" fxFlex>\n      Start Scan\n    </button>\n    <button *ngIf=\"isEnabled\" type=\"button\" mat-flat-button color=\"warn\" (click)=\"stopScan()\" fxFlex>\n      Stop Scan\n    </button>\n  </div>\n\n\n<!-- <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n  <mat-grid-tile colspan=\"1\" rowspan=\"4\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"zxing-scanner\">\n      <zxing-scanner *ngIf=\"isEnabled\" [enable]=\"isEnabled\" [torch]=\"torchEnabled\" [device]=\"deviceCurrent\" (scanSuccess)=\"onCodeResult($event)\"\n        [formats]=\"formatsEnabled\" [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\" (camerasFound)=\"onCamerasFound($event)\"\n        (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <div class=\"control-padding\">\n      <button *ngIf=\"!isEnabled\" mat-stroked-button (click)=\"scan()\" color=\"primary\">\n        Start Barcode Scan\n      </button>\n      <button *ngIf=\"isEnabled\" mat-stroked-button (click)=\"stop()\" color=\"primary\">\n        Stop Barcode Scan\n      </button>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list> -->","export const LIST_FORM = {\n  columns: 'user_updated, user_created, date_updated, date_created, data',\n  is_list: true,\n  form: {\n    name: '',\n    pin: '369',\n    labels: '[\\\"Data\\\"]',\n    columns: 'id int4 NOT NULL DEFAULT nextval(`id_seq`::regclass), user_updated varchar, user_created jsonb, date_updated timestamp, date_created timestamp, data varchar, PRIMARY KEY(id)'\n  }\n}\n\n// list used to populate all data at startup\nexport const LISTS = [\n  'stakeholders', 'models', 'years', 'divisions', 'makes', 'clients'\n]","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"header\">\n    <mat-toolbar>\n      <mat-icon color=\"primary\" class=\"material-icons-outlined\">{{ childPageIcon$ | async }}</mat-icon>\n      <div class=\"primary-color\">&nbsp;{{ childPageLabel$ | async }}</div>\n      <span class=\"toolbar-spacer\"></span>\n      <div fxLayoutGap=\"25px\" fxLayoutAlign=\"space-around center\">\n        <mat-icon class=\"hand material-icons-outlined\" (click)=\"openNotifications(1)\">border_color</mat-icon>\n        <mat-icon class=\"hand material-icons-outlined\" (click)=\"openNotifications(0)\" matBadge=\"{{notificationCount$ | async}}\"\n          matBadgeColor=\"accent\">notifications</mat-icon>\n        <button color=\"primary\" (click)=\"signout()\" mat-icon-button><mat-icon class=\"material-icons-outlined\">logout</mat-icon></button>\n      </div>\n    </mat-toolbar>\n  </div>\n\n  <div class=\"content\">\n    <mat-sidenav-container class=\"list-container\"\n      [ngStyle]=\"{'background-color': (background$ | async), 'style.height.px': myInnerHeight }\"\n      (backdropClick)=\"close('backdrop')\">\n      <mat-sidenav #sidenav (keydown.escape)=\"close('escape')\" class=\"list-menu\" mode=\"over\"\n        [(opened)]=\"appService.isListMenu\" [fixedInViewport]=\"true\" [fixedTopGap]=55>\n        <app-form-lists (selectList)=selectList()></app-form-lists>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <div class=\"content-full\">\n          <app-run *ngIf=\"(childPage$ | async) === 'run'\"></app-run>\n          <app-sdk *ngIf=\"(childPage$ | async) === 'sdk'\"></app-sdk>\n          <app-list-run *ngIf=\"(childPage$ | async) === 'list'\"></app-list-run>\n          <app-data *ngIf=\"(childPage$ | async) === 'data'\"></app-data>\n          <app-forms *ngIf=\"(childPage$ | async) === 'forms'\" (selectData)=selectPage()></app-forms>\n          <app-list-forms *ngIf=\"(childPage$ | async) === 'list-forms'\" (selectData)=selectPage()></app-list-forms>\n          <app-data-forms *ngIf=\"(childPage$ | async) === 'data-forms'\" (selectData)=selectPage()></app-data-forms>\n          <app-settings *ngIf=\"(childPage$ | async) === 'settings'\"></app-settings>\n          <app-email-list *ngIf=\"(childPage$ | async) === 'email'\"></app-email-list>\n        </div>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n  <div class=\"footer\">\n    <app-menu></app-menu>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { MatSidenav } from '@angular/material/sidenav'\n\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { Router } from '@angular/router'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetPage, SetChildPage, SetChildPageLabel, SetIsSignIn, SetEmailList, SetChildPageIcon } from '../../state/auth/auth-state.actions'\nimport { SetNotificationTab } from '../../state/notification/notification-state.actions'\nimport { SetForms } from '../../state/auth/auth-state.actions'\n\nimport { AppService } from \"../../service/app.service\"\nimport { ApiService } from \"../../service/api.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\n\nimport { environment } from '../../../environments/environment'\n\nimport { SetIsDarkMode } from '../../state/device/device-state.actions'\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  @ViewChild('sidenav') sidenav: MatSidenav\n\n  @Select(AuthState.page) page$: Observable<string>\n  @Select(AuthState.childPage) childPage$: Observable<string>\n  \n  @Select(AuthState.childPageIcon) childPageIcon$: Observable<string>\n  @Select(AuthState.childPageLabel) childPageLabel$: Observable<string>\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.screenWidth) screenWidth$: Observable<string>\n  @Select(NotificationState.notificationAdminCount) notificationCount$: Observable<number>\n\n  prefs\n  token\n  templates\n  lookupListWorkers\n  lookupListSupervisors\n  \n  templateControls\n\n  myInnerHeight = window.innerHeight\n\n  templateForm: FormGroup\n\n  fileArray = []\n  isError = false\n  isMainMenu = true\n  isRightMenu = false\n  isImportOpen = false\n  isLookuplist = true\n  isListMenu\n\n  kioske = environment.kioske\n\n  signinUrl = environment.signinUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private idbCrudService: IdbCrudService) { \n      this.templateForm = this.formBuilder.group({\n        templateArray: this.formBuilder.array([])\n      })\n    }\n  \n  ngOnInit() {\n    // const tenant = this.store.selectSnapshot(AuthState.tenant)\n    this.store.select(AuthState.tenant).subscribe((tenant: any) => {\n      this.apiService.getEmailList({ tenant_id: tenant.tenant_id }).subscribe(lists => {\n        const emailLists:any = lists\n        emailLists.sort((a, b) => a.name.localeCompare(b.name))\n        this.store.dispatch(new SetEmailList(emailLists))\n      })\n    })\n    \n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.appService.setMode('darkMode')\n        else this.appService.setMode('')\n\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n      }\n      else {\n        this.appService.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true)) \n      }\n    })\n    \n  }\n\n  close(reason: string) {\n    this.sidenav.close()\n  }\n\n  closeOverlay() {\n    this.isImportOpen = false\n  }\n\n  selectList() {\n  \n  }\n\n  selectPage() {\n    const childPage = this.store.selectSnapshot(AuthState.childPage)\n    if ( childPage === 'list-forms') {\n      this.store.dispatch(new SetChildPageIcon('list_alt'))\n      this.appService.isListMenu = true\n    }\n    if ( childPage === 'data-forms') {\n      this.store.dispatch(new SetChildPageIcon('table_chart'))\n      this.store.dispatch(new SetChildPage('data'))\n    }\n    if ( childPage === 'forms') {\n      this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n      this.store.dispatch(new SetChildPage('forms'))\n    }\n  }\n\n  signout() {\n    this.store.dispatch(new SetPage('home'))\n    this.store.dispatch(new SetIsSignIn(false))\n  }\n\n  openNotifications(tabIndex) {\n    if (tabIndex === 0) {\n      const user = this.store.selectSnapshot(AuthState.user)\n    }\n    this.store.dispatch(new SetPage('notification'))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n    this.store.dispatch(new SetNotificationTab(tabIndex))\n  }\n\n  settings() {\n    this.store.dispatch(new SetChildPageLabel('Settings'))\n    this.store.dispatch(new SetChildPage('settings'))\n  }\n  \n}","/**\n * adminstration of the forms is run from the json model locally\n * to add a form \n * users consume forms from indexedDB\n */\n import { Component, OnInit } from '@angular/core'\n import { Observable } from 'rxjs'\n \n import * as _ from 'lodash'\n \n import { AppService } from \"../../../service/app.service\"\n import { ErrorService } from '../../../service/error.service'\n import { FormService } from \"../../../service/form.service\"\n import { SuccessService } from \"../../../service/success.service\"\n import { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n \n import { Store, Select } from '@ngxs/store'\n import { LISTS } from \"../../../model/forms\"\n import { Form } from '../../../state/auth/auth-state.model'\n \n // custom forms\n import { VEHICLE_INSPECTION } from '../../forms/vehicle-inspection/state/vehicle-inspection-state.model'\n import { WORKSITE_SAFETY_INSPECTION } from '../../forms/worksite-safety-inspection/state/worksite-safety-inspection-state.model'\n import { SPOT_CHECK_SAFETY } from '../../forms/spot-check-safety/state/spot-check-safety.model'\n \n import { SetSelectedForm } from '../../../state/auth/auth-state.actions'\n import { SetPage, SetChildPageLabel, SetForms } from '../../../state/auth/auth-state.actions'\n import { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-sdk',\n  templateUrl: './sdk.component.html',\n  styleUrls: ['./sdk.component.scss']\n})\nexport class SdkComponent implements OnInit {\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  forms = []\n\n  constructor(\n    private store: Store,\n    private appService: AppService,\n    private formService: FormService,\n    private errorService: ErrorService,\n    private idbCrudService: IdbCrudService,\n    private successService: SuccessService) {\n    this.forms.push(VEHICLE_INSPECTION)\n    this.forms.push(WORKSITE_SAFETY_INSPECTION)\n    this.forms.push(SPOT_CHECK_SAFETY)\n  }\n\n  ngOnInit() {\n    \n  }\n\n  deploy(form) {\n    let formObjClone = _.cloneDeep(form)\n    if (!form.type) this.errorService.popSnackbar('Form is not Configured')\n\n    else if (form.type === 'custom') {\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n\n      formObjClone[\"user_created\"] = { email: tenant.email, date_created: this.appService.now }\n      const rawForm = _.cloneDeep(formObjClone)\n      formObjClone[\"formObj\"] = rawForm\n\n      //forms are taken from local json and registered to the database\n      this.formService.registerForm(formObjClone).subscribe((form_id :any) => {\n        formObjClone['form_id'] = form_id\n        this.idbCrudService.put('form', formObjClone).subscribe(_ => {\n          this.idbCrudService.readAll('form').subscribe((forms: any) => {\n            this.store.dispatch(new SetForms(forms))\n          })\n          this.successService.popSnackbar(\"Form Registered\")\n        })\n      })\n    }\n\n  }\n\n}","<!-- this component takes custom forms and registers them to the cloud -->\n<div class=\"form-padding\" *ngFor=\"let formObj of forms\">\n  <mat-card class=\"hand\">\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon32 material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n    <div class=\"publish\" fxLayoutAlign=\"space-between center\">\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"25px\">\n        <button mat-stroked-button color=\"primary\" (click)=\"deploy(formObj)\" matTooltip=\"Deploy Form\"\n        [disabled]=\"kioske$ | async\">\n          <mat-icon class=\"material-icons-outlined\">published_with_changes</mat-icon> Deploy Form\n        </button>\n      </div>\n    </div>\n  </mat-card>\n</div>","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"padding-top\" fxLayoutAlign=\"center space-between\" fxLayout=\"row\">\n    <div fxLayoutAlign=\"start center\" class=\"text-color\">Profile</div>\n    <span class=\"toolbar-spacer\"></span>\n    <div>\n      <button (click)=close() mat-icon-button>\n        <mat-icon class=\"text-color\">close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"container-padding text-color padding\" fxLayoutAlign=\"space-between\" fxLayout=\"row\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-slide-toggle [checked]=\"isDarkMode$ | async\" color=\"primary\" (click)=\"toggleTheme()\"></mat-slide-toggle>\n      <span *ngIf=\"(isDarkMode$ | async)\">&nbsp;&nbsp;Dark Mode</span>\n      <span *ngIf=\"!(isDarkMode$ | async)\">&nbsp;&nbsp;Light Mode</span>\n    </div>\n  </div>\n  <form fxLayout=\"column\" class=\"container-padding text-color\" [formGroup]=\"passwordForm\" fxLayoutGap=\"10px\">\n    <div class=\"text-color\">\n      Reset Password\n    </div>\n    <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n      <mat-label class=\"text-color\">Password</mat-label>\n      <input class=\"text-color\" matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\"\n        formControlName=\"password\" required [readonly]=\"kioske\">\n      <mat-icon class=\"hand\" matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </mat-form-field>\n    <button (click)=\"resetPassword()\" color=\"primary\" mat-flat-button [disabled]=\"kioske$ | async\">\n      Reset Password\n    </button>\n  </form>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { Observable } from 'rxjs'\nimport { environment } from '../../../../environments/environment'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { SuccessService } from \"../../../service/success.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { User } from '../../../state/auth/auth-state.model'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage } from '../../../state/auth/auth-state.actions'\n\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(AuthState.user) user$: Observable<User>\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n  \n  @Output() changeTheme = new EventEmitter()\n\n  prefs\n  email\n  token\n  hide = true\n  kioske = environment.kioske\n  \n  passwordForm: FormGroup;\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService,\n    private successService: SuccessService,\n    private idbCrudService: IdbCrudService) { \n    this.passwordForm = this.fb.group({\n      password: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.appService.setMode('darkMode')\n        else this.appService.setMode('')\n\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n        this.email = this.prefs[0][\"user\"][\"email\"]\n      }\n      else {\n        this.appService.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true)) \n      }\n    })\n  }\n\n  resetPassword() {\n    const obj = this.passwordForm.value\n    obj[\"email\"] = this.email\n    this.authService.resetPassword(obj).subscribe((res:any) => {\n      this.successService.popSnackbar(res.message)\n      this.store.dispatch(new SetPage('home'))\n    });  \n  }\n\n  toggleTheme() {\n    this.changeTheme.emit()\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('home'))\n  }\n\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TruncatePipe } from './truncate.pipe'\nimport { TruncateStraightPipe } from './truncate-straight.pipe'\nimport { ReplaceUnderscorePipe } from './replace-underscore.pipe'\nimport { SplitCamelCasePipe } from './split-camel-case.pipe'\n\n@NgModule({\n  declarations: [\n    TruncatePipe,\n    TruncateStraightPipe,\n    ReplaceUnderscorePipe,\n    SplitCamelCasePipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TruncatePipe,\n    TruncateStraightPipe,\n    ReplaceUnderscorePipe,\n    SplitCamelCasePipe\n  ]\n})\nexport class PipeModule { }\n","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-sign-off',\n  templateUrl: './sign-off.component.html',\n  styleUrls: ['./sign-off.component.scss']\n})\nexport class SignOffComponent {\n\n  @Output() submitForm = new EventEmitter<any>()\n\n  isEdit = false\n  kioske = environment.kioske\n\n  constructor() { }\n\n  save() {\n    this.submitForm.emit()\n  }\n\n}\n","<!-- <div class=\"hand\" fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n  <mat-icon class=\"icon-169px-action\" (click)=\"save()\">fingerprint</mat-icon>\n  <div class=\"text-color bottom-padding\"><mat-label>Press to Submit</mat-label></div>\n</div> -->\n\n<div *ngIf=\"!isEdit\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n  <mat-icon *ngIf=\"!headerForm.valid && !notesForm.valid && kioske\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n  <mat-icon *ngIf=\"headerForm.valid && notesForm.valid && !kioske\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">fingerprint</mat-icon>\n</div>\n<div *ngIf=\"isEdit\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n  <mat-icon *ngIf=\"kioske\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n  <mat-icon *ngIf=\"headerForm.valid && notesForm.valid && !kioske\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">fingerprint</mat-icon>\n</div>","import { Component, OnInit } from '@angular/core'\nimport * as _moment from 'moment'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { ApiService } from \"../../../service/api.service\"\nimport { AppService } from \"../../../service/app.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { NotificationService } from \"../../../service/notification.service\"\nimport { AutoCompleteService } from \"../../../service/auto-complete.service\"\n\nimport { SPOT_CHECK_SAFETY } from './state/spot-check-safety.model'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { CommentState } from '../../comment/state/comment.state'\n\nimport { SetPics } from '../../../state/device/device-state.actions'\nimport { SetPage, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\n\nimport { SetComments } from '../../comment/state/comment.actions'\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions';\nimport { CorrectiveActionState } from '../../corrective-action/state/corrective-action.state';\n\n@Component({\n  selector: 'app-spot-check-safety',\n  templateUrl: './spot-check-safety.component.html',\n  styleUrls: ['./spot-check-safety.component.scss']\n})\n\nexport class SpotCheckSafetyComponent implements OnInit {\n\n  pics\n  formData\n  formDataID\n  step = 0\n  isEdit = false\n  isOnline\n\n  kioske\n\n  headerForm: FormGroup\n  hazardForm: FormGroup\n  rulesForm: FormGroup\n  incidentForm: FormGroup\n  communicationForm: FormGroup\n  personalEquipmentForm: FormGroup\n  safetyEquipmentForm: FormGroup\n  correctiveActionForm: FormGroup\n  discrepancyForm: FormGroup\n\n  messageUrl = environment.messageUrl\n\n  SPOT_CHECK_SAFETY = SPOT_CHECK_SAFETY\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private idbCrudService: IdbCrudService,\n    private autoCompleteService: AutoCompleteService,\n    private notificationService: NotificationService) {\n    this.headerForm = this.formBuilder.group({\n      Date: [null, Validators.required],\n      CompanyName: [null, Validators.required],\n      EmployeeName: [null, Validators.required],\n      Location: [null, Validators.required],\n      JobDescription: [null, Validators.required]\n    })\n    this.hazardForm = this.formBuilder.group({\n      InspectionFrequency: [],\n      HazardAssessmentSystem: [],\n      HazardComments: []\n    })\n    this.rulesForm = this.formBuilder.group({\n      Procedures: [],\n      EmergencyPlan: [],\n      RulesComments: []\n    })\n    this.incidentForm = this.formBuilder.group({\n      IncidentReporting: [],\n      NearMissReporting: [],\n      ProblemFixed: [],\n      SolvingIssues: [],\n      IncidentComments: []\n    })\n    this.communicationForm = this.formBuilder.group({\n      SafetyOrientation: [],\n      SafetyMeetingFrequency: [],\n      AppropriateTraining: [],\n      FirstAidTraining: [],\n      H2STraining: [],\n      WHMISTraining: [],\n      TDGTraining: [],\n      GroundDisturbanceTraining: [],\n      EGSOCSOTraining: [],\n      JobSpecificTraining: [],\n      CommunicationComments: []\n    })\n    this.personalEquipmentForm = this.formBuilder.group({\n      PPEAvailable: [],\n      HardHat: [],\n      SafetyGlasses: [],\n      Footwear: [],\n      ProtectiveClothing: [],\n      HearingProtection: [],\n      RespiratoryProtection: [],\n      PersonalGasMonitor: [],\n      CommunicationEquipment: [],\n      OtherEquipment: [],\n      PersonalEquipmentComments: []\n    })\n    this.safetyEquipmentForm = this.formBuilder.group({\n      SafetyEquipmentAvailable: [],\n      FireFightingEquipment: [],\n      RotatingEquimentGuards: [],\n      FirstAidKit: [],\n      FallArrestEquipment: [],\n      EmergencySystems: [],\n      Other: [],\n      SafetyEquipmentComments: []\n    })\n    this.discrepancyForm = this.formBuilder.group({\n      Discrepancy: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n    this.store.select(AuthState.formData).subscribe(formData => {\n      this.formData = formData\n      if (this.formData && formData[\"data\"]) {\n        this.isEdit = true\n        this.setFormData(formData[\"data\"])\n      }\n    })\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date)\n      this.headerForm.controls['CompanyName'].setValue(data.header.CompanyName)\n      this.headerForm.controls['EmployeeName'].setValue(data.header.EmployeeName)\n      this.headerForm.controls['Location'].setValue(data.header.Location)\n      this.headerForm.controls['JobDescription'].setValue(data.header.JobDescription)\n      this.autoCompleteService.workersControl.setValue(data.header.Worker)\n      this.autoCompleteService.supervisorsControl.setValue(data.header.Supervisor)\n    }\n    if (data.hazard) {\n      this.hazardForm.controls['InspectionFrequency'].setValue(data.hazard.InspectionFrequency)\n      this.hazardForm.controls['HazardAssessmentSystem'].setValue(data.hazard.HazardAssessmentSystem)\n      this.hazardForm.controls['HazardComments'].setValue(data.hazard.HazardComments)\n    }\n\n    if (data.rules) {\n      this.rulesForm.controls['Procedures'].setValue(data.rules.Procedures)\n      this.rulesForm.controls['EmergencyPlan'].setValue(data.rules.EmergencyPlan)\n      this.rulesForm.controls['RulesComments'].setValue(data.rules.RulesComments)\n    }\n\n    if (data.incident) {\n      this.incidentForm.controls['IncidentReporting'].setValue(data.incident.IncidentReporting)\n      this.incidentForm.controls['NearMissReporting'].setValue(data.incident.NearMissReporting)\n      this.incidentForm.controls['ProblemFixed'].setValue(data.incident.ProblemFixed)\n      this.incidentForm.controls['SolvingIssues'].setValue(data.incident.SolvingIssues)\n      this.incidentForm.controls['IncidentComments'].setValue(data.incident.IncidentComments)\n    }\n\n    if (data.communication) {\n      this.communicationForm.controls['SafetyOrientation'].setValue(data.communication.SafetyOrientation)\n      this.communicationForm.controls['SafetyMeetingFrequency'].setValue(data.communication.SafetyMeetingFrequency)\n      this.communicationForm.controls['AppropriateTraining'].setValue(data.communication.AppropriateTraining)\n      this.communicationForm.controls['FirstAidTraining'].setValue(data.communication.FirstAidTraining)\n      this.communicationForm.controls['H2STraining'].setValue(data.communication.H2STraining)\n      this.communicationForm.controls['WHMISTraining'].setValue(data.communication.WHMISTraining)\n      this.communicationForm.controls['TDGTraining'].setValue(data.communication.TDGTraining)\n      this.communicationForm.controls['GroundDisturbanceTraining'].setValue(data.communication.GroundDisturbanceTraining)\n      this.communicationForm.controls['EGSOCSOTraining'].setValue(data.communication.EGSOCSOTraining)\n      this.communicationForm.controls['JobSpecificTraining'].setValue(data.communication.JobSpecificTraining)\n      this.communicationForm.controls['CommunicationComments'].setValue(data.communication.CommunicationComments)\n    }\n\n    if (data.personalEquipment) {\n      this.personalEquipmentForm.controls['PPEAvailable'].setValue(data.personalEquipment.PPEAvailable)\n      this.personalEquipmentForm.controls['HardHat'].setValue(data.personalEquipment.HardHat)\n      this.personalEquipmentForm.controls['SafetyGlasses'].setValue(data.personalEquipment.SafetyGlasses)\n      this.personalEquipmentForm.controls['Footwear'].setValue(data.personalEquipment.Footwear)\n      this.personalEquipmentForm.controls['ProtectiveClothing'].setValue(data.personalEquipment.ProtectiveClothing)\n      this.personalEquipmentForm.controls['HearingProtection'].setValue(data.personalEquipment.HearingProtection)\n      this.personalEquipmentForm.controls['RespiratoryProtection'].setValue(data.personalEquipment.RespiratoryProtection)\n      this.personalEquipmentForm.controls['PersonalGasMonitor'].setValue(data.personalEquipment.PersonalGasMonitor)\n      this.personalEquipmentForm.controls['CommunicationEquipment'].setValue(data.personalEquipment.CommunicationEquipment)\n      this.personalEquipmentForm.controls['OtherEquipment'].setValue(data.personalEquipment.OtherEquipment)\n      this.personalEquipmentForm.controls['PersonalEquipmentComments'].setValue(data.personalEquipment.PersonalEquipmentComments)\n    }\n\n    if (data.safetyEquipment) {\n      this.safetyEquipmentForm.controls['SafetyEquipmentAvailable'].setValue(data.safetyEquipment.SafetyEquipmentAvailable)\n      this.safetyEquipmentForm.controls['FireFightingEquipment'].setValue(data.safetyEquipment.FireFightingEquipment)\n      this.safetyEquipmentForm.controls['RotatingEquimentGuards'].setValue(data.safetyEquipment.RotatingEquimentGuards)\n      this.safetyEquipmentForm.controls['FirstAidKit'].setValue(data.safetyEquipment.FirstAidKit)\n      this.safetyEquipmentForm.controls['FallArrestEquipment'].setValue(data.safetyEquipment.FallArrestEquipment)\n      this.safetyEquipmentForm.controls['EmergencySystems'].setValue(data.safetyEquipment.EmergencySystems)\n      this.safetyEquipmentForm.controls['Other'].setValue(data.safetyEquipment.Other)\n      this.safetyEquipmentForm.controls['SafetyEquipmentComments'].setValue(data.safetyEquipment.SafetyEquipmentComments)\n    }\n\n    if (data.comments) {\n      this.store.dispatch(new SetComments(data.comments))\n    }\n\n    if (data.correctiveAction) {\n      this.store.dispatch(new SetCorrectiveActions(data.correctiveAction))\n    }\n\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    let header = this.headerForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      hazard: this.hazardForm.value,\n      rules: this.rulesForm.value,\n      incident: this.incidentForm.value,\n      communication: this.communicationForm.value,\n      personalEquipment: this.personalEquipmentForm.value,\n      safetyEquipment: this.safetyEquipmentForm.value,\n      discrepancyComments: this.discrepancyForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    }\n\n    this.formService.updateForm(form, this.formData, data).subscribe(_ => {\n      this.resetForm()\n    })\n    \n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    let userCreated = {\n      email: user.email,\n      date_created: this.appService.now\n    }\n\n    let header = this.headerForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      hazard: this.hazardForm.value,\n      rules: this.rulesForm.value,\n      incident: this.incidentForm.value,\n      communication: this.communicationForm.value,\n      personalEquipment: this.personalEquipmentForm.value,\n      safetyEquipment: this.safetyEquipmentForm.value,\n      discrepancyComments: this.discrepancyForm.value,\n      correctiveAction: this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    }\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      name: form[\"name\"],\n      date: this.appService.now,\n      pics: this.store.selectSnapshot(DeviceState.pics),\n      location: data.header.Location,\n      correctiveActions: (this.store.selectSnapshot(CorrectiveActionState.correctiveActions))\n    }\n\n    if (!this.isOnline) {\n      let notificationObj = {\n        name: form[\"name\"],\n        worker: this.appService.getWorker(header.Worker),\n        supervisor: this.appService.getSupervisor(header.Supervisor),\n        description: 'Spot Check Safety, ' + _moment().format('MMM D, h:mA'),\n        message: 'Spot Check Safety completed for ' + this.headerForm.controls['CompanyName'].value + ', ' + this.headerForm.controls['Location'].value,\n        subject: 'New Spot Check Safety from ' + header.Worker + ', ' + this.appService.now,\n        form_id: form[\"form_id\"],\n        data_id: this.formDataID,\n        pdf: 'spot-check-safety' + this.formDataID\n      }\n      obj['nofification'] = notificationObj\n      this.idbCrudService.put('data', obj)\n    }\n    else {\n      this.apiService.save(obj).subscribe(idObj => {\n        this.formDataID = idObj\n        const workers: any = this.store.selectSnapshot(AuthState.workers)\n        const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\"Notifications not setup, please add workers and supervisors.\", 'Attention', {\n            duration: 3000,\n            verticalPosition: 'bottom'\n          })\n        else {\n          const worker: any = this.appService.getWorker(header.Worker)\n          const supervisor: any = this.appService.getSupervisor(header.Supervisor)\n\n          let notificationObj = {\n            name: form[\"name\"],\n            worker: worker,\n            supervisor: supervisor,\n            description: 'Spot Check Safety, ' + _moment().format('MMM D, h:mA'),\n            message: 'Spot Check Safety completed for ' + this.headerForm.controls['CompanyName'].value + ', ' + this.headerForm.controls['Location'].value,\n            subject: 'New Spot Check Safety from ' + header.Worker + ', ' + this.appService.now,\n            form_id: form[\"form_id\"],\n            data_id: this.formDataID,\n            pdf: 'spot-check-safety' + this.formDataID\n          }\n          this.appService.sendNotification(notificationObj)\n        }\n      })\n    }\n  }\n\n  resetForm() {\n    this.headerForm.reset()\n    this.hazardForm.reset()\n    this.rulesForm.reset()\n    this.incidentForm.reset()\n    this.communicationForm.reset()\n    this.personalEquipmentForm.reset()\n    this.safetyEquipmentForm.reset()\n    this.store.dispatch(new SetPics([]))\n    this.autoCompleteService.workersControl.setValue('')\n    this.autoCompleteService.supervisorsControl.setValue('')\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Spot Check Safety\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-spot-check-safety-header [headerForm]=headerForm></app-spot-check-safety-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Hazard Identification & Control\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-hazard-identification-control [hazardForm]=hazardForm></app-hazard-identification-control>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Rules & Work Procedures\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-rules-work-procedures [rulesForm]=rulesForm></app-rules-work-procedures>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Incident Reporting\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-incident-reporting [incidentForm]=incidentForm></app-incident-reporting>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 4\" (opened)=\"setStep(4)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Communication & Training\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-communication-training [communicationForm]=communicationForm></app-communication-training>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 5\" (opened)=\"setStep(5)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Personal Protective Equipment\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-personal-protective-equipment [personalEquipmentForm]=personalEquipmentForm></app-personal-protective-equipment>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 6\" (opened)=\"setStep(6)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Safety Equipment\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-safety-equipment [safetyEquipmentForm]=safetyEquipmentForm></app-safety-equipment>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 7\" (opened)=\"setStep(7)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Discrepancies\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 8\" (opened)=\"setStep(8)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <br>\n    <div *ngIf=\"kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon class=\"icon-169px text-color\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"!isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!headerForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"headerForm.valid\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"headerForm.valid\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'splitCamelCase'\n})\nexport class SplitCamelCasePipe implements PipeTransform {\n\n  transform(value: string): string {\n    if (value !== null)\n      return value.split(/(?=[A-Z])/).join(' ')\n  }\n\n}\n","<div class=\"form-padding\" *ngFor=\"let formObj of (forms$ | async)\">\n  <mat-card class=\"custom hand\" (click)=selectForm(formObj)>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>","import { Component, Output, EventEmitter  } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { SetSelectedForm } from '../../../state/auth/auth-state.actions'\n\n@Component({\n  selector: 'app-data-forms',\n  templateUrl: './data-forms.component.html',\n  styleUrls: ['./data-forms.component.scss']\n})\nexport class DataFormsComponent {\n\n  @Select(AuthState.forms) forms$: Observable<any[]>\n\n  @Output() selectData = new EventEmitter<any>()\n\n  constructor(private store: Store) { }\n\n  selectForm(formObj) {\n    this.store.dispatch(new SetSelectedForm(formObj))\n    this.selectData.emit()\n  }\n\n}\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as SpotCheckSafetyActions from './spot-check-safety.actions'\nimport { SpotCheckSafeyModel } from './spot-check-safety.model'\n\n@Injectable()\n@State<SpotCheckSafeyModel>({\n  name: 'spotchecksafety',\n  defaults: {\n    isWorksiteSafetyHeaderValid: true\n  }\n})\n\nexport class SpotCheckSafetyState {\n\n  @Selector()\n  static isAppropriateTraining(state: SpotCheckSafeyModel): boolean {\n    return state.isAppropriateTraining\n  }\n\n  @Action(SpotCheckSafetyActions.SetIsAppropriateTraining)\n  onSetIsAppropriateTraining(ctx: StateContext<SpotCheckSafeyModel>, { isAppropriateTraining }: SpotCheckSafetyActions.SetIsAppropriateTraining) {\n    ctx.patchState({\n      isAppropriateTraining: isAppropriateTraining\n    });\n  }\n  \n}\n\n","import { Component } from '@angular/core';\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Store } from '@ngxs/store'\nimport { SetPage } from '../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../environments/environment'\n\nimport { SignupComponent } from \"../admin/signup/signup.component\"\nimport { ContactComponent } from \"../contact/contact.component\"\n// import { PaymentComponent } from \"../payment/payment.component\"\n// import { PaypalComponent } from \"../payment/paypal/paypal.component\"\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.scss']\n})\nexport class PricingComponent {\n\n  githubUrl = environment.githubUrl\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet) { }\n\n  signup() {\n    this.bottomSheet.open(SignupComponent)\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('kioske'))\n  }\n\n  contact() {\n    this.bottomSheet.open(ContactComponent)\n  }\n\n}\n","<div class=\"header\">\n  <mat-toolbar>\n    Pricing\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <div class=\"card__header\">\n    <h1 class=\"text-color\">Join our community</h1>\n    <h2 class=\"card__subtitle\">Simple, hassle-free pricing</h2>\n  </div>\n  <div class=\"card__body_pink\">\n    <h2 class=\"card__title card__title--dark\">Professional Subscription</h2>\n    <div class=\"card__text card__text--dark\">\n      <span class=\"card__text--price-amount\">$69</span>\n      <span class=\"card__text--price-desc\">&nbsp;per month</span>\n    </div>\n    <br>\n    <div fxFlexLayout=\"center\" fxLayoutGap=\"20px\">\n      <a (click)=\"signup()\" mat-flat-button color=\"primary\">\n        <mat-icon>rocket_launch</mat-icon>&nbsp;Signup Now!\n      </a>\n    </div>\n    \n    <div class=\"card__text card__text--dark\">\n      <ul>\n        <li>5000 Notifications</li>\n        <li>1000 Memorialized PDF Inspection Reports</li>\n        <li>Unlimited Role-based Users</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"card__body_yellow\">\n    <h2 class=\"card__title card__title--dark\">Free Subscription</h2>\n    <div class=\"card__text card__text--dark\">\n      <span class=\"card__text--price-amount\">$0</span>\n      <span class=\"card__text--price-desc\">&nbsp; per month</span>\n    </div>\n    <br>\n    <a (click)=\"signup()\" mat-flat-button color=\"primary\">\n      <mat-icon>rocket_launch</mat-icon>&nbsp;Signup Now!\n    </a>\n    <div class=\"card__text card__text--dark\">\n      <ul>\n        <li>1000 Notifications</li>\n        <li>100 Memorialized PDF Inspection Reports</li>\n        <li>Unlimited Role-based Users</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"card__body_green\">\n    <h2 class=\"card__title card__title--dark\">Enterprise Subscription</h2>\n    <div class=\"card__text card__text--dark\">\n      <p class=\"card__text--price-desc\">starting at&nbsp;</p>\n    </div>\n    <div class=\"card__text card__text--dark\">\n      <span class=\"card__text--price-amount\">$139</span>\n      <span class=\"card__text--price-desc\">&nbsp;per month</span>\n    </div>\n    <br>\n    <a (click)=\"contact()\" mat-flat-button color=\"primary\">\n      Contact Us!\n    </a>\n    <div class=\"card__text card__text--dark\">\n      <ul>\n        <li>Unlimited Notifications</li>\n        <li>Unlimited Memorialized PDF Inspection Reports</li>\n        <li>Unlimited Role-based Users</li>\n        <li>Dedicated Server</li>\n        <li>Company Branding & Custom Domain</li>\n        <li>Third Party Integration</li>\n        <li>Developers License Available</li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=\"contact()\" mat-stroked-button color=\"primary\">\n      contact\n    </button>\n    <a mat-button href='{{githubUrl}}' target=\"blank\" color=\"primary\">\n      github\n    </a>\n  </mat-toolbar>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>label works!</p>\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"communicationForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Have you received a safety orientation (When and what)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyOrientation\">\n        <mat-radio-button (click)=\"openCommentOnly('Have you received a safety orientation (When and what)','SafetyOrientation')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button\n          (click)=\"openComment('Have you received a safety orientation (When and what)','SafetyOrientation')\"\n          value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are safety meetings held within the (prescribed) frequency</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyMeetingFrequency\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button\n          (click)=\"openComment('Are safety meetings held within the (prescribed) frequency)','SafetyMeetingFrequency')\"\n          value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Is the appropriate training in place?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AppropriateTraining\">\n        <mat-radio-button (click)=\"toggleAppropriateTraining('AppropriateTraining')\" value=\"satisfactory\">S\n        </mat-radio-button>\n        <mat-radio-button (click)=\"openComment('Is the appropriate training in place','AppropriateTraining')\"\n          value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isAppropriateTraining$ | async)\">\n      <div class=\"text-color radio-center\">First aid training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FirstAidTraining\">\n          <mat-radio-button (click)=\"toggle('FirstAidTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('First aid training','FirstAidTraining')\" value=\"unsatisfactory\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n\n      <div class=\"text-color radio-center\">H2S training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"H2STraining\">\n          <mat-radio-button (click)=\"toggle('H2STraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('H2S training','H2STraining')\" value=\"unsatisfactory\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">WHMIS training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"WHMISTraining\">\n          <mat-radio-button (click)=\"toggle('WHMISTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('WHMIS training','WHMISTraining')\" value=\"unsatisfactory\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">TDG training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"TDGTraining\">\n          <mat-radio-button (click)=\"toggle('TDGTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('TDG training','TDGTraining')\" value=\"unsatisfactory\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">Ground disturbance training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"GroundDisturbanceTraining\">\n          <mat-radio-button (click)=\"toggle('GroundDisturbanceTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('Ground disturbance training','GroundDisturbanceTraining')\" value=\"unsatisfactory\">\n            No</mat-radio-button>\n          <mat-radio-button value=\"na\">N/A</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">eGSO/ CSO training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"EGSOCSOTraining\">\n          <mat-radio-button (click)=\"toggle('EGSOCSOTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('eGSO/ CSO training','EGSOCSOTraining')\" value=\"unsatisfactory\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">Job Specific training (List any that apply)</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"JobSpecificTraining\">\n          <mat-radio-button (click)=\"openCommentOnly('Job Specific training (List any that apply)','JobSpecificTraining')\" value=\"satisfactory\">S</mat-radio-button>\n          <mat-radio-button (click)=\"openComment('Job Specific training (List any that apply)','JobSpecificTraining')\"\n            value=\"unsatisfactory\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Communication & Training Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('CommunicationComments','Communication & Training Comments')\" mat-mini-fab\n            color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"CommunicationComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { SpotCheckSafetyState } from '../state/spot-check-safety.state'\nimport { SetIsAppropriateTraining, SetIsSafetyEquipment } from '../state/spot-check-safety.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-communication-training',\n  templateUrl: './communication-training.component.html',\n  styleUrls: ['./communication-training.component.scss']\n})\nexport class CommunicationTrainingComponent implements OnInit {\n\n  @Select(SpotCheckSafetyState.isAppropriateTraining) isAppropriateTraining$: Observable<boolean>\n\n  @Input() communicationForm\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetIsAppropriateTraining (true))\n    this.communicationForm.controls['AppropriateTraining'].patchValue('satisfactory')\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.communicationForm, formField, title)\n  }\n\n  toggleAppropriateTraining(field) {\n    this.store.dispatch(new SetIsAppropriateTraining(true))\n    const comments: any = this.store.selectSnapshot(CommentState.comments)\n    const index = comments.findIndex(item => item.field === field)\n    if (index != -1) this.commentService.bottomSheetComment(field, this.communicationForm)\n  }\n\n  toggle(field) {\n    // this.store.dispatch(new SetIsAppropriateTraining(false))\n    this.commentService.bottomSheetComment(field, this.communicationForm)\n  }\n\n  openComment(label, field) {\n    if (field == 'AppropriateTraining') this.store.dispatch(new SetIsAppropriateTraining(false))\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  openCommentOnly(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: label, label: label, field: field, type: 'isSpotCheckSafety', isCommentOnly: true }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { LayoutComponent } from './component/layout/layout.component'\nimport { LayoutComponent as message } from './component/layout/layout.component'\nimport { TermsComponent } from './component/terms/terms.component'\nimport { SendPasswordComponent } from './component/admin/send-password/send-password.component'\nimport { ResetPasswordComponent } from './component/admin/reset-password/reset-password.component'\n\nconst routes: Routes = [{\n  path: '',\n  redirectTo: '/', \n  pathMatch: 'full'\n}, {\n  path: '',\n  component: LayoutComponent\n},\n{\n  path: 'email',\n  component: SendPasswordComponent\n},\n{\n  path: 'O451fd2702f54a00b1007f6e80b32e45',\n  component: ResetPasswordComponent\n},\n{\n  path: 'terms',\n  component: TermsComponent\n},\n{\n  path: 'forms/:email/:tenant_id',\n  component: LayoutComponent\n},\n{\n  path: 'signup/:msg',\n  component: LayoutComponent\n},\n{\n  path: 'message',\n  component: message\n}]\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, Input } from '@angular/core'\n\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { environment } from '../../../../environments/environment'\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  prefs\n  pin = environment.pin\n\n  settingsForm: FormGroup\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private formBuilder: FormBuilder,\n    private idbCrudService: IdbCrudService) { \n    this.settingsForm = this.formBuilder.group({\n      name: [''],\n      pin: ['']\n    })\n  }\n\n  ngOnInit(): void {\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs[0]\n      this.settingsForm.patchValue({name: this.prefs.user.name })\n      if (this.prefs.pin === undefined) \n        this.settingsForm.patchValue({pin: this.pin })\n      else\n        this.settingsForm.patchValue({pin: this.prefs.pin })\n    })\n  }\n\n  save() {\n    let obj = Object.assign(this.settingsForm.value)\n    this.prefs.user.name = obj.name\n    this.prefs.pin = obj.pin\n    this.idbCrudService.put('prefs', this.prefs)\n\n    this.snackBar.open(\"Settings Saved!\", '', {\n      duration: 3000,\n      verticalPosition: 'bottom'\n    })\n  }\n\n}\n","<div class=\"container-padding\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <form [formGroup]=\"settingsForm\" fxFlex>\n    <div fxLayout=\"column\">\n      <mat-form-field  fxFlex>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"name\" type=\"text\" >\n      </mat-form-field>\n      <mat-form-field  fxFlex>\n        <mat-label>PIN</mat-label>\n        <input matInput placeholder=\"PIN\" formControlName=\"pin\" type=\"text\">\n      </mat-form-field>\n      <br>\n      <button color=\"primary\" (click)=\"save()\" mat-flat-button fxFlex>Save</button>\n    </div>\n  </form>\n</div>","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"groundForm\">\n    <div class=\"text-color radio-center\">{{label.DoesTheProjectInvolveGroundDisturbance}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DoesTheProjectInvolveGroundDisturbance\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false)\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isGroundwork$ | async)\">\n      <div class=\"text-color radio-center\">{{label.GroundDisturbanceChecklistIsInPlace}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"GroundDisturbanceChecklistIsInPlace\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.GroundDisturbanceChecklistIsInPlace,'GroundDisturbanceChecklistIsInPlace')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.OneCallNotificationHasBeenRegistered}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"OneCallNotificationHasBeenRegistered\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.OneCallNotificationHasBeenRegistered,'OneCallNotificationHasBeenRegistered')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed}}\n      </div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed,'AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined,'ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.ThirdPartyLineLocatesCompletedWithinTheSearchArea}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ThirdPartyLineLocatesCompletedWithinTheSearchArea\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ThirdPartyLineLocatesCompletedWithinTheSearchArea,'ThirdPartyLineLocatesCompletedWithinTheSearchArea')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.AllRequiredCrossingOrProximityAgreementsInPlace}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"AllRequiredCrossingOrProximityAgreementsInPlace\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.AllRequiredCrossingOrProximityAgreementsInPlace,'AllRequiredCrossingOrProximityAgreementsInPlace')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsGroundwork } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { GroundFormLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n\n@Component({\n  selector: 'app-worksite-safety-ground',\n  templateUrl: './worksite-safety-ground.component.html',\n  styleUrls: ['./worksite-safety-ground.component.scss']\n})\nexport class WorksiteSafetyGroundComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isGroundwork) isGroundwork$: Observable<string>\n\n  @Input() groundForm\n\n  label = GroundFormLabels\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n    ngOnInit() {\n      this.store.dispatch(new SetTypeFilter('isGroundwork'))\n      this.groundForm.controls['DoesTheProjectInvolveGroundDisturbance'].patchValue('yes')\n    }\n  \n    toggle(toggle) {\n      this.store.dispatch(new SetIsGroundwork(toggle))\n      // if (toggle) {\n      //   const comments:any = this.store.selectSnapshot(CommentState.commentsByType)\n      //   if (comments.length > 0) this.bottomSheet.open(BottomSheetWorksiteSafetyInspectionComponent)\n      // }\n      // if (!toggle) {\n      //   this.openComment(this.label.DoesTheProjectInvolveGroundDisturbance, 'DoesTheProjectInvolveGroundDisturbance')\n      // }\n    }\n  \n    openComment(label, field) {\n      const dialogConfig = new MatDialogConfig()\n      dialogConfig.width = '100%'\n      dialogConfig.data = { title: 'Ground Disturbance', label: label, field: field, type: 'isGroundwork' }\n      this.dialog.open(CommentComponent, dialogConfig)\n    }\n\n}\n","<div class=\"header\">\n  <mat-toolbar>\n    <span fxLayoutAlign=\"center center\">\n      <mat-icon class=\"form-icon text-color\">{{ (selectedForm$ | async)?.icon }}</mat-icon>&nbsp;\n      <span class=\"text-color\">{{(selectedForm$ | async)?.name }}</span>\n    </span>\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <div *ngIf=\"(selectedForm$ | async)?.type === 'custom'\">\n    <app-vehicle-inspection *ngIf=\"(selectedForm$ | async)?.id === 'vehicle-inspection'\"></app-vehicle-inspection>\n    <app-meaningful-site-tour *ngIf=\"(selectedForm$ | async)?.id === 'meaningful-site-tour'\"></app-meaningful-site-tour>\n    <app-worksite-safety-inspection *ngIf=\"(selectedForm$ | async)?.id === 'worksite-safety-inspection'\"></app-worksite-safety-inspection>\n    <app-spot-check-safety *ngIf=\"(selectedForm$ | async)?.id === 'spot-check-safety'\"></app-spot-check-safety>\n </div>\n  <div *ngIf=\"(selectedForm$ | async)?.type === 'dynamic'\">\n    <app-run [runForm]=runForm></app-run>\n  </div>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <button mat-icon-button (click)=\"snapShot()\">\n      <mat-icon class=\"form-icon text-color hand\">photo_camera</mat-icon>\n    </button>\n    <button *ngIf=\"(childPage$ | async) == 'notification'\"  mat-icon-button (click)=\"openPdf()\">\n      <mat-icon class=\"form-icon text-color hand\">picture_as_pdf</mat-icon>\n    </button>\n    <span class=\"toolbar-spacer\"></span>\n    <button *ngIf=\"(pics$ | async).length > 0\" mat-icon-button (click)=\"showPhotos()\">\n      <mat-icon class=\"form-icon text-color hand\" matBadge=\"{{ (pics$ | async)?.length }}\" matBadgeColor=\"warn\">perm_media</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>","import { Component } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { PicsComponent } from '../pics/pics.component'\nimport { CameraComponent } from '../camera/camera.component'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetPage, SetChildPage, SetChildPageLabel } from '../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../environments/environment'\nimport { ApiService } from \"../../service/api.service\"\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n  @Select(AuthState.selectedForm) selectedForm$: Observable<any>\n  @Select(AuthState.childPage) childPage$: Observable<any>\n\n  runForm: FormGroup\n\n  form\n  step = 0\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private apiService: ApiService,\n    private bottomSheet: MatBottomSheet) {\n    this.runForm = this.fb.group({})\n  }\n\n  openPdf() {\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n    this.apiService.getPDF(notification.pdf)\n  }\n\n  close() {\n    const page = this.store.selectSnapshot(AuthState.page)\n    const childPage = this.store.selectSnapshot(AuthState.childPage)\n\n    if (childPage === null) {\n      this.store.dispatch(new SetPage('home'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n    }\n    else {\n      this.store.dispatch(new SetPage('admin'))\n      if (childPage == 'forms') {\n        this.store.dispatch(new SetChildPage('forms'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n      }\n      if (childPage == 'sdk') {\n        this.store.dispatch(new SetChildPage('sdk'))\n        this.store.dispatch(new SetChildPageLabel('SDK'))\n      }\n    }\n    if (childPage == 'notification') {\n      const childPage = this.store.selectSnapshot(AuthState.childPage)\n      this.store.dispatch(new SetPage(childPage))\n      this.store.dispatch(new SetChildPageLabel('Notifications'))\n    }\n  }\n\n  snapShot() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n      dialogConfig.maxHeight = '100vh',\n      dialogConfig.data = this.store.selectSnapshot(AuthState.selectedForm)\n    this.dialog.open(CameraComponent, dialogConfig)\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  showPhotos() {\n    this.bottomSheet.open(PicsComponent)\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { HazardFormLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-hazard',\n  templateUrl: './worksite-safety-hazard.component.html',\n  styleUrls: ['./worksite-safety-hazard.component.scss']\n})\nexport class WorksiteSafetyHazardComponent implements OnInit {\n\n  @Input() hazardForm\n\n  label = HazardFormLabels\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {}\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {title: 'Job Site Management', label: label, field: field, type: 'isWorksiteSafetyHazard'}\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"hazardForm\">\n    <div class=\"text-color radio-center\">{{label.SiteHazardAssessmentCompleted}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SiteHazardAssessmentCompleted\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SiteHazardAssessmentCompleted,'SiteHazardAssessmentCompleted')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.ScopeOfWorkClearlyDefined}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ScopeOfWorkClearlyDefined\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.ScopeOfWorkClearlyDefined,'ScopeOfWorkClearlyDefined')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">{{label.PotentialHazardsAndMitigationRequirementsIdentified}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PotentialHazardsAndMitigationRequirementsIdentified\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.PotentialHazardsAndMitigationRequirementsIdentified,'PotentialHazardsAndMitigationRequirementsIdentified')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SummitHealthAndSafetyManualAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SummitHealthAndSafetyManualAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SummitHealthAndSafetyManualAvailable,'SummitHealthAndSafetyManualAvailable')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.OccupationalHealthAndSafetyLegislationAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"OccupationalHealthAndSafetyLegislationAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.OccupationalHealthAndSafetyLegislationAvailable,'OccupationalHealthAndSafetyLegislationAvailable')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.DailySafetyMeetingsConductedDocumented}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DailySafetyMeetingsConductedDocumented\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.DailySafetyMeetingsConductedDocumented,'DailySafetyMeetingsConductedDocumented')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AllSitePersonalTrainingAndSafetyTickets}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AllSitePersonalTrainingAndSafetyTickets\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AllSitePersonalTrainingAndSafetyTickets,'AllSitePersonalTrainingAndSafetyTickets')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AllSitePersonnelSiteSpecificWearingPPE}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AllSitePersonnelSiteSpecificWearingPPE\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AllSitePersonnelSiteSpecificWearingPPE,'AllSitePersonnelSiteSpecificWearingPPE')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { BarcodeFormat } from '@zxing/library';\n\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-scanner-barcode-run',\n  templateUrl: './scanner-barcode-run.component.html',\n  styleUrls: ['./scanner-barcode-run.component.scss']\n})\nexport class ScannerBarcodeRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  availableDevices: MediaDeviceInfo[];\n  deviceCurrent: MediaDeviceInfo;\n  deviceSelected: string;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  isEnabled = true;\n\n  constructor(public appService: AppService) { }\n\n  ngOnInit(): void {\n    this.runForm.addControl(this.appService.detailArray[this.index].formControlName, new FormControl(''));\n  }\n\n  scan() {\n    this.isEnabled = true;\n  }\n\n  stop() {\n    this.isEnabled = false;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString;\n    this.isEnabled = false;\n    this.runForm.patchValue({'BarCodeScanner0': this.qrResultString})\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n  \n}\n","<div *ngIf=\"isEnabled\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <zxing-scanner [enable]=isEnabled [torch]=\"torchEnabled\" [device]=\"deviceCurrent\" (scanSuccess)=\"onCodeResult($event)\" [formats]=\"formatsEnabled\"\n    [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\" (camerasFound)=\"onCamerasFound($event)\" (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n</div>\n<div class=\"control-padding\">\n  <button *ngIf=\"isEnabled\" mat-raised-button (click)=\"stop()\" color=\"primary\" fxFlex>\n    Stop Barcode Scan\n  </button>\n  <!-- <button *ngIf=\"!isEnabled\" mat-raised-button (click)=\"scan()\" color=\"primary\" fxFlex>\n    Start Barcode Scan\n  </button> -->\n</div>\n\n<div *ngIf=\"!isEnabled\" [formGroup]=\"runForm\" class=\"control-padding\">\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex>\n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <input matInput type=\"text\" formControlName=\"{{appService.detailArray[index].formControlName}}\">\n  </mat-form-field>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meaningful-site-tour-suggestions',\n  templateUrl: './meaningful-site-tour-suggestions.component.html',\n  styleUrls: ['./meaningful-site-tour-suggestions.component.scss']\n})\nexport class MeaningfulSiteTourSuggestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-color\"><b>A FEW SUGGESTIONS FOR A SUCCESSFUL SITE TOUR:</b></div>\n<div class=\"text-color\">\n  <ul>\n    <li>Identify a point of contact person before the tour</li>\n    <li>Double check any additional safety training requirements. (i.e. H₂S, Standard First Aid</li>\n    <li>Double check any additional safety training requirements. (i.e. H₂S, Standard First Aid etc.) or visitor status\n    </li>\n    <li>Plan for a minimum of two hours</li>\n    <li>Carry the latest safety communication, monthly reports, etc.</li>\n    <li>Plan for more listening than talking</li>\n    <li>Ensure you have the correct PPE</li>\n    <li>Be aware of Summit's current safety performance</li>\n    <li>Try to attend a key event (morning tailgate, shift handover, etc.)</li>\n    <li>Ensure you provide feedback and follow-up</li>\n    <li>Carry some “spot recognition” items</li>\n  </ul>\n</div>","export interface AppWindow extends Window {\n  // tslint:disable-next-line:no-any\n  webkitSpeechRecognition: any;\n}\n\nexport interface SpeechNotification<T> {\n    event?: SpeechEvent;\n    error?: SpeechError;\n    content?: T;\n}\n\nexport enum SpeechError {\n  NoSpeech = 'no-speech',\n  AudioCapture = 'audio-capture',\n  NotAllowed = 'not-allowed',\n  Unknown = 'unknown'\n}\n\nexport enum SpeechEvent {\n  Start,\n  End,\n  FinalContent,\n  InterimContent\n}","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nimport { defineCustomElements } from '@ionic/pwa-elements/loader'\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n  defineCustomElements(window)","import { Component, OnInit } from '@angular/core';\n\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } from '@techiediaries/ngx-qrcode';\n\nimport * as _moment from 'moment';\n\n@Component({\n  selector: 'app-qrcode-run',\n  templateUrl: './qrcode-run.component.html',\n  styleUrls: ['./qrcode-run.component.scss']\n})\nexport class QrcodeRunComponent implements OnInit {\n\n  begin = \"\";\n  end = \"\";\n  event = \"\";\n\n  elementType = NgxQrcodeElementTypes.URL;\n  correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\n  value\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.value = 'after the fact';\n    this.begin = _moment().format('YYYYMMDD[T]HHmmss');\n    this.end = _moment().format('YYYYMMDD[T]HHmmss');\n    // this.generateCodeData();\n  }\n\n  generateCodeData(): void {\n    // this.event = QrCodeHelper.makeEvent('dffd',this.begin, this.end);\n    // let yy = QrCodeHelper.makeSMS('sddsd', 'ssddsds');\n  }\n\n}\n","<div class=\"setting-padding\" fxLayout=\"row\">\n  <ngx-qrcode [elementType]=\"elementType\" [errorCorrectionLevel]=\"correctionLevel\" [value]=\"value\">\n  </ngx-qrcode>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}